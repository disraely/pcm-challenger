{"version":3,"sources":["../src/index.js"],"names":["path","require","cors","app","console","log","__dirname","use","express","static","join","getErrorCode","graphiql","schema","formatError","err","error","message","statusCode","get","req","res","sendFile","resolve","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AACA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA,IAAME,MAAM,wBAAZ;;AAEA;AACAC,QAAQC,GAAR,CAAYC,SAAZ;AACAH,IAAII,GAAJ,CAAQC,kBAAQC,MAAR,CAAeT,KAAKU,IAAL,CAAUJ,SAAV,EAAqB,OAArB,CAAf,CAAR;;AAEA;;;;;;AAMA;;AAEA,IAAMK,eAAeV,QAAQ,gBAAR,CAArB;;AAEAE,IAAII,GAAJ,CAAQL,MAAR;;AAEAC,IAAII,GAAJ,CAAQ,WAAR,EAAqB,8BAAY;AAC/BK,YAAU,IADqB;AAE/BC,UAAQA,gBAFuB;AAG/BC,eAAa,qBAACC,GAAD,EAAS;AACpB,QAAMC,QAAQL,aAAaI,IAAIE,OAAjB,CAAd;AACA,WAAQ,EAAEA,SAASD,MAAMC,OAAjB,EAA0BC,YAAYF,MAAME,UAA5C,EAAR;AACD;AAN8B,CAAZ,CAArB;;AASAf,IAAII,GAAJ,CAAQC,kBAAQC,MAAR,CAAe,QAAf,CAAR;;AAEAN,IAAIgB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAKC,GAAL,EAAY;AACxBA,MAAIC,QAAJ,CAAatB,KAAKuB,OAAL,CAAajB,SAAb,EAAwB,QAAxB,EAAkC,YAAlC,CAAb;AACA,CAFD;;AAIAH,IAAIqB,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMpB,QAAQC,GAAR,CAAY,qBAAZ,CAAN;AAAA,CAAjB","file":"index.js","sourcesContent":["import express from 'express';\r\nimport graphqlHTTP from 'express-graphql';\r\nimport schema from './schema';\r\nconst path = require('path');\r\nconst cors = require('cors');\r\n\r\nconst app = express();\r\n\r\n// Serve the static files from the React app\r\nconsole.log(__dirname);\r\napp.use(express.static(path.join(__dirname, 'build')));\r\n\r\n/*app.get('/', (req, res) => {\r\n  res.json({\r\n    errors:[{\"message\":\"Must provide query string.\"}]\r\n  })\r\n});*/\r\n\r\n// Handles any requests that don't match the ones above\r\n\r\nconst getErrorCode = require('./utils/errors')\r\n\r\napp.use(cors());\r\n\r\napp.use('/graphiql', graphqlHTTP({\r\n  graphiql: true,\r\n  schema: schema,\r\n  formatError: (err) => {\r\n    const error = getErrorCode(err.message)\r\n    return ({ message: error.message, statusCode: error.statusCode })\r\n  }\r\n}));\r\n\r\napp.use(express.static('public'));\r\n\r\napp.get('*', (req,res) =>{\r\n\tres.sendFile(path.resolve(__dirname, 'public', 'index.html'));\r\n});\r\n\r\napp.listen(4000, () => console.log('Server on port 4000'));\r\n"]}
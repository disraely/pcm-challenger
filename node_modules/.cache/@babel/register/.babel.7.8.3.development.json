{
  "{\"sourceRoot\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\",\"filename\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server",
      "filename": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _expressGraphql = _interopRequireDefault(require(\"express-graphql\"));\n\nvar _schema = _interopRequireDefault(require(\"./schema\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar cors = require('cors');\n\nvar app = (0, _express[\"default\"])();\n/*app.get('/', (req, res) => {\r\n  res.json({\r\n    errors:[{\"message\":\"Must provide query string.\"}]\r\n  })\r\n});*/\n\napp.use(cors());\napp.use('/', (0, _expressGraphql[\"default\"])({\n  graphiql: false,\n  schema: _schema[\"default\"]\n}));\napp.listen(4000, function () {\n  return console.log('Server on port 4000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvcnMiLCJyZXF1aXJlIiwiYXBwIiwidXNlIiwiZ3JhcGhpcWwiLCJzY2hlbWEiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOzs7O0FBQ0EsSUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFFQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVo7QUFFQTs7Ozs7O0FBTUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRSCxJQUFJLEVBQVo7QUFDQUUsR0FBRyxDQUFDQyxHQUFKLENBQVEsR0FBUixFQUFhLGdDQUFZO0FBQ3ZCQyxFQUFBQSxRQUFRLEVBQUUsS0FEYTtBQUV2QkMsRUFBQUEsTUFBTSxFQUFFQTtBQUZlLENBQVosQ0FBYjtBQUtBSCxHQUFHLENBQUNJLE1BQUosQ0FBVyxJQUFYLEVBQWlCO0FBQUEsU0FBTUMsT0FBTyxDQUFDQyxHQUFSLENBQVkscUJBQVosQ0FBTjtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxXQXBwXFxyYXZuLWNoYWxsZW5nZS12Mi1kaXNyYWVsaWFyaVxcc2VydmVyXFxzcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IGdyYXBocWxIVFRQIGZyb20gJ2V4cHJlc3MtZ3JhcGhxbCc7XHJcbmltcG9ydCBzY2hlbWEgZnJvbSAnLi9zY2hlbWEnO1xyXG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuLyphcHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcmVzLmpzb24oe1xyXG4gICAgZXJyb3JzOlt7XCJtZXNzYWdlXCI6XCJNdXN0IHByb3ZpZGUgcXVlcnkgc3RyaW5nLlwifV1cclxuICB9KVxyXG59KTsqL1xyXG5cclxuYXBwLnVzZShjb3JzKCkpO1xyXG5hcHAudXNlKCcvJywgZ3JhcGhxbEhUVFAoe1xyXG4gIGdyYXBoaXFsOiBmYWxzZSxcclxuICBzY2hlbWE6IHNjaGVtYVxyXG59KSk7XHJcblxyXG5hcHAubGlzdGVuKDQwMDAsICgpID0+IGNvbnNvbGUubG9nKCdTZXJ2ZXIgb24gcG9ydCA0MDAwJykpO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "cors",
        "require",
        "app",
        "use",
        "graphiql",
        "schema",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AACA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AAEA;;;;;;AAMAA,GAAG,CAACC,GAAJ,CAAQH,IAAI,EAAZ;AACAE,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,gCAAY;AACvBC,EAAAA,QAAQ,EAAE,KADa;AAEvBC,EAAAA,MAAM,EAAEA;AAFe,CAAZ,CAAb;AAKAH,GAAG,CAACI,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAN;AAAA,CAAjB",
      "sourceRoot": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src",
      "sourcesContent": [
        "import express from 'express';\r\nimport graphqlHTTP from 'express-graphql';\r\nimport schema from './schema';\r\nconst cors = require('cors');\r\n\r\nconst app = express();\r\n\r\n/*app.get('/', (req, res) => {\r\n  res.json({\r\n    errors:[{\"message\":\"Must provide query string.\"}]\r\n  })\r\n});*/\r\n\r\napp.use(cors());\r\napp.use('/', graphqlHTTP({\r\n  graphiql: false,\r\n  schema: schema\r\n}));\r\n\r\napp.listen(4000, () => console.log('Server on port 4000'));\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580103952352
  },
  "{\"sourceRoot\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\",\"filename\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\\\\src\\\\schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server",
      "filename": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src\\schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src\\schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src\\schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _graphqlTools = require(\"graphql-tools\");\n\nvar _resolvers = require(\"./resolvers\");\n\nvar typeDefs = \"\\n  type Query {\\n    peoples: [People]\\n    people(name: String!): People\\n  }\\n\\n  type People {\\n    name: String!\\n    hair_color: String\\n    skin_color: String\\n    eye_color: String\\n    birth_year: String\\n    gender:  String\\n    homeworld: Homeworld\\n    species: [Species]\\n    vehicles: [Vehicle]\\n  }\\n\\n  type Homeworld {\\n    name: String!\\n    rotation_period: String\\n    orbital_period: String\\n    diameter: String\\n    climate: String\\n    gravity: String\\n    terrain: String\\n    surface_water: String\\n    population: String\\n  }\\n\\n  type Species {\\n    name: String!\\n    classification: String\\n    designation: String\\n    average_height: String\\n    skin_colors: String\\n    hair_colors: String\\n    eye_colors: String\\n    average_lifespan: String\\n    language: String\\n  }\\n\\n  type Vehicle {\\n    name: String!\\n    model: String\\n    manufacturer: String\\n    cost_in_credits: String\\n    length: String\\n    max_atmosphering_speed: String\\n    crew: String\\n    passengers: String\\n    cargo_capacity: String\\n    consumables: String\\n    vehicle_class: String\\n  }\\n\";\n\nvar _default = (0, _graphqlTools.makeExecutableSchema)({\n  typeDefs: typeDefs,\n  resolvers: _resolvers.resolvers\n});\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJ0eXBlRGVmcyIsInJlc29sdmVycyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBLElBQU1BLFFBQVEsa2xDQUFkOztlQXlEZSx3Q0FBcUI7QUFDbENBLEVBQUFBLFFBQVEsRUFBRUEsUUFEd0I7QUFFbENDLEVBQUFBLFNBQVMsRUFBRUE7QUFGdUIsQ0FBckIsQyIsInNvdXJjZVJvb3QiOiJEOlxcV0FwcFxccmF2bi1jaGFsbGVuZ2UtdjItZGlzcmFlbGlhcmlcXHNlcnZlclxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWFrZUV4ZWN1dGFibGVTY2hlbWEgfSBmcm9tICdncmFwaHFsLXRvb2xzJztcclxuaW1wb3J0IHsgcmVzb2x2ZXJzIH0gZnJvbSAnLi9yZXNvbHZlcnMnO1xyXG5cclxuY29uc3QgdHlwZURlZnMgPSBgXHJcbiAgdHlwZSBRdWVyeSB7XHJcbiAgICBwZW9wbGVzOiBbUGVvcGxlXVxyXG4gICAgcGVvcGxlKG5hbWU6IFN0cmluZyEpOiBQZW9wbGVcclxuICB9XHJcblxyXG4gIHR5cGUgUGVvcGxlIHtcclxuICAgIG5hbWU6IFN0cmluZyFcclxuICAgIGhhaXJfY29sb3I6IFN0cmluZ1xyXG4gICAgc2tpbl9jb2xvcjogU3RyaW5nXHJcbiAgICBleWVfY29sb3I6IFN0cmluZ1xyXG4gICAgYmlydGhfeWVhcjogU3RyaW5nXHJcbiAgICBnZW5kZXI6ICBTdHJpbmdcclxuICAgIGhvbWV3b3JsZDogSG9tZXdvcmxkXHJcbiAgICBzcGVjaWVzOiBbU3BlY2llc11cclxuICAgIHZlaGljbGVzOiBbVmVoaWNsZV1cclxuICB9XHJcblxyXG4gIHR5cGUgSG9tZXdvcmxkIHtcclxuICAgIG5hbWU6IFN0cmluZyFcclxuICAgIHJvdGF0aW9uX3BlcmlvZDogU3RyaW5nXHJcbiAgICBvcmJpdGFsX3BlcmlvZDogU3RyaW5nXHJcbiAgICBkaWFtZXRlcjogU3RyaW5nXHJcbiAgICBjbGltYXRlOiBTdHJpbmdcclxuICAgIGdyYXZpdHk6IFN0cmluZ1xyXG4gICAgdGVycmFpbjogU3RyaW5nXHJcbiAgICBzdXJmYWNlX3dhdGVyOiBTdHJpbmdcclxuICAgIHBvcHVsYXRpb246IFN0cmluZ1xyXG4gIH1cclxuXHJcbiAgdHlwZSBTcGVjaWVzIHtcclxuICAgIG5hbWU6IFN0cmluZyFcclxuICAgIGNsYXNzaWZpY2F0aW9uOiBTdHJpbmdcclxuICAgIGRlc2lnbmF0aW9uOiBTdHJpbmdcclxuICAgIGF2ZXJhZ2VfaGVpZ2h0OiBTdHJpbmdcclxuICAgIHNraW5fY29sb3JzOiBTdHJpbmdcclxuICAgIGhhaXJfY29sb3JzOiBTdHJpbmdcclxuICAgIGV5ZV9jb2xvcnM6IFN0cmluZ1xyXG4gICAgYXZlcmFnZV9saWZlc3BhbjogU3RyaW5nXHJcbiAgICBsYW5ndWFnZTogU3RyaW5nXHJcbiAgfVxyXG5cclxuICB0eXBlIFZlaGljbGUge1xyXG4gICAgbmFtZTogU3RyaW5nIVxyXG4gICAgbW9kZWw6IFN0cmluZ1xyXG4gICAgbWFudWZhY3R1cmVyOiBTdHJpbmdcclxuICAgIGNvc3RfaW5fY3JlZGl0czogU3RyaW5nXHJcbiAgICBsZW5ndGg6IFN0cmluZ1xyXG4gICAgbWF4X2F0bW9zcGhlcmluZ19zcGVlZDogU3RyaW5nXHJcbiAgICBjcmV3OiBTdHJpbmdcclxuICAgIHBhc3NlbmdlcnM6IFN0cmluZ1xyXG4gICAgY2FyZ29fY2FwYWNpdHk6IFN0cmluZ1xyXG4gICAgY29uc3VtYWJsZXM6IFN0cmluZ1xyXG4gICAgdmVoaWNsZV9jbGFzczogU3RyaW5nXHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbWFrZUV4ZWN1dGFibGVTY2hlbWEoe1xyXG4gIHR5cGVEZWZzOiB0eXBlRGVmcyxcclxuICByZXNvbHZlcnM6IHJlc29sdmVyc1xyXG59KVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "typeDefs",
        "resolvers"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,QAAQ,klCAAd;;eAyDe,wCAAqB;AAClCA,EAAAA,QAAQ,EAAEA,QADwB;AAElCC,EAAAA,SAAS,EAAEA;AAFuB,CAArB,C",
      "sourceRoot": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src",
      "sourcesContent": [
        "import { makeExecutableSchema } from 'graphql-tools';\r\nimport { resolvers } from './resolvers';\r\n\r\nconst typeDefs = `\r\n  type Query {\r\n    peoples: [People]\r\n    people(name: String!): People\r\n  }\r\n\r\n  type People {\r\n    name: String!\r\n    hair_color: String\r\n    skin_color: String\r\n    eye_color: String\r\n    birth_year: String\r\n    gender:  String\r\n    homeworld: Homeworld\r\n    species: [Species]\r\n    vehicles: [Vehicle]\r\n  }\r\n\r\n  type Homeworld {\r\n    name: String!\r\n    rotation_period: String\r\n    orbital_period: String\r\n    diameter: String\r\n    climate: String\r\n    gravity: String\r\n    terrain: String\r\n    surface_water: String\r\n    population: String\r\n  }\r\n\r\n  type Species {\r\n    name: String!\r\n    classification: String\r\n    designation: String\r\n    average_height: String\r\n    skin_colors: String\r\n    hair_colors: String\r\n    eye_colors: String\r\n    average_lifespan: String\r\n    language: String\r\n  }\r\n\r\n  type Vehicle {\r\n    name: String!\r\n    model: String\r\n    manufacturer: String\r\n    cost_in_credits: String\r\n    length: String\r\n    max_atmosphering_speed: String\r\n    crew: String\r\n    passengers: String\r\n    cargo_capacity: String\r\n    consumables: String\r\n    vehicle_class: String\r\n  }\r\n`;\r\n\r\nexport default makeExecutableSchema({\r\n  typeDefs: typeDefs,\r\n  resolvers: resolvers\r\n})\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580060358015
  },
  "{\"sourceRoot\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\",\"filename\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\\\\src\\\\resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server",
      "filename": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src\\resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src\\resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src\\resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolvers = void 0;\n\nvar _people = require(\"./models/people\");\n\nvar resolvers = {\n  Query: {\n    peoples: function peoples() {\n      return _people.peoples;\n    },\n    people: function people(root, _ref) {\n      var name = _ref.name;\n      var data = _people.peoples;\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].name == name) {\n          return data[i];\n        }\n      }\n\n      return null;\n    }\n  }\n};\nexports.resolvers = resolvers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJyZXNvbHZlcnMiLCJRdWVyeSIsInBlb3BsZXMiLCJwZW9wbGUiLCJyb290IiwibmFtZSIsImRhdGEiLCJpIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRU8sSUFBTUEsU0FBUyxHQUFHO0FBQ3ZCQyxFQUFBQSxLQUFLLEVBQUU7QUFDTEMsSUFBQUEsT0FESyxxQkFDSTtBQUNQLGFBQU9BLGVBQVA7QUFDRCxLQUhJO0FBSUxDLElBQUFBLE1BSkssa0JBSUVDLElBSkYsUUFJZTtBQUFBLFVBQU5DLElBQU0sUUFBTkEsSUFBTTtBQUNsQixVQUFJQyxJQUFJLEdBQUdKLGVBQVg7O0FBQ0EsV0FBSyxJQUFJSyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRCxJQUFJLENBQUNFLE1BQXpCLEVBQWlDRCxDQUFDLEVBQWxDLEVBQXFDO0FBQ25DLFlBQUlELElBQUksQ0FBQ0MsQ0FBRCxDQUFKLENBQVFGLElBQVIsSUFBZ0JBLElBQXBCLEVBQXlCO0FBQ3ZCLGlCQUFPQyxJQUFJLENBQUNDLENBQUQsQ0FBWDtBQUNEO0FBQ0Y7O0FBQ0QsYUFBTyxJQUFQO0FBQ0Q7QUFaSTtBQURnQixDQUFsQiIsInNvdXJjZVJvb3QiOiJEOlxcV0FwcFxccmF2bi1jaGFsbGVuZ2UtdjItZGlzcmFlbGlhcmlcXHNlcnZlclxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGVvcGxlcyB9IGZyb20gJy4vbW9kZWxzL3Blb3BsZSc7XHJcblxyXG5leHBvcnQgY29uc3QgcmVzb2x2ZXJzID0ge1xyXG4gIFF1ZXJ5OiB7XHJcbiAgICBwZW9wbGVzKCl7XHJcbiAgICAgIHJldHVybiBwZW9wbGVzO1xyXG4gICAgfSxcclxuICAgIHBlb3BsZShyb290LCB7bmFtZX0pe1xyXG4gICAgICB2YXIgZGF0YSA9IHBlb3BsZXM7XHJcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgaWYgKGRhdGFbaV0ubmFtZSA9PSBuYW1lKXtcclxuICAgICAgICAgIHJldHVybiBkYXRhW2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICB9XHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "resolvers",
        "Query",
        "peoples",
        "people",
        "root",
        "name",
        "data",
        "i",
        "length"
      ],
      "mappings": ";;;;;;;AAAA;;AAEO,IAAMA,SAAS,GAAG;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OADK,qBACI;AACP,aAAOA,eAAP;AACD,KAHI;AAILC,IAAAA,MAJK,kBAIEC,IAJF,QAIe;AAAA,UAANC,IAAM,QAANA,IAAM;AAClB,UAAIC,IAAI,GAAGJ,eAAX;;AACA,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACnC,YAAID,IAAI,CAACC,CAAD,CAAJ,CAAQF,IAAR,IAAgBA,IAApB,EAAyB;AACvB,iBAAOC,IAAI,CAACC,CAAD,CAAX;AACD;AACF;;AACD,aAAO,IAAP;AACD;AAZI;AADgB,CAAlB",
      "sourceRoot": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src",
      "sourcesContent": [
        "import { peoples } from './models/people';\r\n\r\nexport const resolvers = {\r\n  Query: {\r\n    peoples(){\r\n      return peoples;\r\n    },\r\n    people(root, {name}){\r\n      var data = peoples;\r\n      for (var i = 0; i < data.length; i++){\r\n        if (data[i].name == name){\r\n          return data[i];\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580053223892
  },
  "{\"sourceRoot\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\",\"filename\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\\\\src\\\\models\\\\people.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\WApp\\\\ravn-challenge-v2-disraeliari\\\\server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server",
      "filename": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src\\models\\people.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src\\models\\people.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src\\models\\people.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src\\models",
        "sourceFileName": "people.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.peoples = void 0;\nvar peoples = [{\n  \"name\": \"Luke Skywalker\",\n  \"hair_color\": \"blond\",\n  \"skin_color\": \"fair\",\n  \"eye_color\": \"blue\",\n  \"birth_year\": \"19BBY\",\n  \"gender\": \"male\",\n  \"homeworld\": {\n    \"name\": \"Tatooine\",\n    \"rotation_period\": \"23\",\n    \"orbital_period\": \"304\",\n    \"diameter\": \"10465\",\n    \"climate\": \"arid\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"desert\",\n    \"surface_water\": \"1\",\n    \"population\": \"200000\"\n  },\n  \"species\": [{\n    \"name\": \"Human\",\n    \"classification\": \"mammal\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"180\",\n    \"skin_colors\": \"caucasian, black, asian, hispanic\",\n    \"hair_colors\": \"blonde, brown, black, red\",\n    \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\n    \"average_lifespan\": \"120\",\n    \"language\": \"Galactic Basic\"\n  }],\n  \"vehicles\": [{\n    \"name\": \"Vulture Droid\",\n    \"model\": \"Vulture-class droid starfighter\",\n    \"manufacturer\": \"Haor Chall Engineering, Baktoid Armor Workshop\",\n    \"cost_in_credits\": \"unknown\",\n    \"length\": \"3.5\",\n    \"max_atmosphering_speed\": \"1200\",\n    \"crew\": \"0\",\n    \"passengers\": \"0\",\n    \"cargo_capacity\": \"0\",\n    \"consumables\": \"none\",\n    \"vehicle_class\": \"starfighter\"\n  }, {\n    \"name\": \"Imperial Speeder Bike\",\n    \"model\": \"74-Z speeder bike\",\n    \"manufacturer\": \"Aratech Repulsor Company\",\n    \"cost_in_credits\": \"8000\",\n    \"length\": \"3\",\n    \"max_atmosphering_speed\": \"360\",\n    \"crew\": \"1\",\n    \"passengers\": \"1\",\n    \"cargo_capacity\": \"4\",\n    \"consumables\": \"1 day\",\n    \"vehicle_class\": \"speeder\"\n  }]\n}, {\n  \"name\": \"C-3PO\",\n  \"hair_color\": \"n/a\",\n  \"skin_color\": \"gold\",\n  \"eye_color\": \"yellow\",\n  \"birth_year\": \"112BBY\",\n  \"gender\": \"n/a\",\n  \"homeworld\": {\n    \"name\": \"Tatooine\",\n    \"rotation_period\": \"23\",\n    \"orbital_period\": \"304\",\n    \"diameter\": \"10465\",\n    \"climate\": \"arid\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"desert\",\n    \"surface_water\": \"1\",\n    \"population\": \"200000\"\n  },\n  \"species\": [{\n    \"name\": \"Droid\",\n    \"classification\": \"artificial\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"n/a\",\n    \"skin_colors\": \"n/a\",\n    \"hair_colors\": \"n/a\",\n    \"eye_colors\": \"n/a\",\n    \"average_lifespan\": \"indefinite\",\n    \"language\": \"n/a\"\n  }],\n  \"vehicles\": []\n}, {\n  \"name\": \"R2-D2\",\n  \"hair_color\": \"n/a\",\n  \"skin_color\": \"white, blue\",\n  \"eye_color\": \"red\",\n  \"birth_year\": \"33BBY\",\n  \"gender\": \"n/a\",\n  \"homeworld\": {\n    \"name\": \"Naboo\",\n    \"rotation_period\": \"26\",\n    \"orbital_period\": \"312\",\n    \"diameter\": \"12120\",\n    \"climate\": \"temperate\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"grassy hills, swamps, forests, mountains\",\n    \"surface_water\": \"12\",\n    \"population\": \"4500000000\"\n  },\n  \"species\": [{\n    \"name\": \"Droid\",\n    \"classification\": \"artificial\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"n/a\",\n    \"skin_colors\": \"n/a\",\n    \"hair_colors\": \"n/a\",\n    \"eye_colors\": \"n/a\",\n    \"average_lifespan\": \"indefinite\",\n    \"language\": \"n/a\"\n  }],\n  \"vehicles\": []\n}, {\n  \"name\": \"Darth Vader\",\n  \"hair_color\": \"none\",\n  \"skin_color\": \"white\",\n  \"eye_color\": \"yellow\",\n  \"birth_year\": \"41.9BBY\",\n  \"gender\": \"male\",\n  \"homeworld\": {\n    \"name\": \"Tatooine\",\n    \"rotation_period\": \"23\",\n    \"orbital_period\": \"304\",\n    \"diameter\": \"10465\",\n    \"climate\": \"arid\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"desert\",\n    \"surface_water\": \"1\",\n    \"population\": \"200000\"\n  },\n  \"species\": [{\n    \"name\": \"Human\",\n    \"classification\": \"mammal\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"180\",\n    \"skin_colors\": \"caucasian, black, asian, hispanic\",\n    \"hair_colors\": \"blonde, brown, black, red\",\n    \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\n    \"average_lifespan\": \"120\",\n    \"language\": \"Galactic Basic\"\n  }],\n  \"vehicles\": []\n}, {\n  \"name\": \"Leia Organa\",\n  \"hair_color\": \"brown\",\n  \"skin_color\": \"light\",\n  \"eye_color\": \"brown\",\n  \"birth_year\": \"19BBY\",\n  \"gender\": \"female\",\n  \"homeworld\": {\n    \"name\": \"Alderaan\",\n    \"rotation_period\": \"24\",\n    \"orbital_period\": \"364\",\n    \"diameter\": \"12500\",\n    \"climate\": \"temperate\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"grasslands, mountains\",\n    \"surface_water\": \"40\",\n    \"population\": \"2000000000\"\n  },\n  \"species\": [{\n    \"name\": \"Human\",\n    \"classification\": \"mammal\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"180\",\n    \"skin_colors\": \"caucasian, black, asian, hispanic\",\n    \"hair_colors\": \"blonde, brown, black, red\",\n    \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\n    \"average_lifespan\": \"120\",\n    \"language\": \"Galactic Basic\"\n  }],\n  \"vehicles\": [{\n    \"name\": \"Imperial Speeder Bike\",\n    \"model\": \"74-Z speeder bike\",\n    \"manufacturer\": \"Aratech Repulsor Company\",\n    \"cost_in_credits\": \"8000\",\n    \"length\": \"3\",\n    \"max_atmosphering_speed\": \"360\",\n    \"crew\": \"1\",\n    \"passengers\": \"1\",\n    \"cargo_capacity\": \"4\",\n    \"consumables\": \"1 day\",\n    \"vehicle_class\": \"speeder\"\n  }]\n}, {\n  \"name\": \"Owen Lars\",\n  \"hair_color\": \"brown, grey\",\n  \"skin_color\": \"light\",\n  \"eye_color\": \"blue\",\n  \"birth_year\": \"52BBY\",\n  \"gender\": \"male\",\n  \"homeworld\": {\n    \"name\": \"Tatooine\",\n    \"rotation_period\": \"23\",\n    \"orbital_period\": \"304\",\n    \"diameter\": \"10465\",\n    \"climate\": \"arid\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"desert\",\n    \"surface_water\": \"1\",\n    \"population\": \"200000\"\n  },\n  \"species\": [{\n    \"name\": \"Human\",\n    \"classification\": \"mammal\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"180\",\n    \"skin_colors\": \"caucasian, black, asian, hispanic\",\n    \"hair_colors\": \"blonde, brown, black, red\",\n    \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\n    \"average_lifespan\": \"120\",\n    \"language\": \"Galactic Basic\"\n  }],\n  \"vehicles\": []\n}, {\n  \"name\": \"Beru Whitesun lars\",\n  \"hair_color\": \"brown\",\n  \"skin_color\": \"light\",\n  \"eye_color\": \"blue\",\n  \"birth_year\": \"47BBY\",\n  \"gender\": \"female\",\n  \"homeworld\": {\n    \"name\": \"Tatooine\",\n    \"rotation_period\": \"23\",\n    \"orbital_period\": \"304\",\n    \"diameter\": \"10465\",\n    \"climate\": \"arid\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"desert\",\n    \"surface_water\": \"1\",\n    \"population\": \"200000\"\n  },\n  \"species\": [{\n    \"name\": \"Human\",\n    \"classification\": \"mammal\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"180\",\n    \"skin_colors\": \"caucasian, black, asian, hispanic\",\n    \"hair_colors\": \"blonde, brown, black, red\",\n    \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\n    \"average_lifespan\": \"120\",\n    \"language\": \"Galactic Basic\"\n  }],\n  \"vehicles\": []\n}, {\n  \"name\": \"R5-D4\",\n  \"hair_color\": \"n/a\",\n  \"skin_color\": \"white, red\",\n  \"eye_color\": \"red\",\n  \"birth_year\": \"unknown\",\n  \"gender\": \"n/a\",\n  \"homeworld\": {\n    \"name\": \"Tatooine\",\n    \"rotation_period\": \"23\",\n    \"orbital_period\": \"304\",\n    \"diameter\": \"10465\",\n    \"climate\": \"arid\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"desert\",\n    \"surface_water\": \"1\",\n    \"population\": \"200000\"\n  },\n  \"species\": [{\n    \"name\": \"Droid\",\n    \"classification\": \"artificial\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"n/a\",\n    \"skin_colors\": \"n/a\",\n    \"hair_colors\": \"n/a\",\n    \"eye_colors\": \"n/a\",\n    \"average_lifespan\": \"indefinite\",\n    \"homeworld\": null\n  }],\n  \"vehicles\": []\n}, {\n  \"name\": \"Biggs Darklighter\",\n  \"hair_color\": \"black\",\n  \"skin_color\": \"light\",\n  \"eye_color\": \"brown\",\n  \"birth_year\": \"24BBY\",\n  \"gender\": \"male\",\n  \"homeworld\": {\n    \"name\": \"Tatooine\",\n    \"rotation_period\": \"23\",\n    \"orbital_period\": \"304\",\n    \"diameter\": \"10465\",\n    \"climate\": \"arid\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"desert\",\n    \"surface_water\": \"1\",\n    \"population\": \"200000\"\n  },\n  \"species\": [{\n    \"name\": \"Human\",\n    \"classification\": \"mammal\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"180\",\n    \"skin_colors\": \"caucasian, black, asian, hispanic\",\n    \"hair_colors\": \"blonde, brown, black, red\",\n    \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\n    \"average_lifespan\": \"120\",\n    \"language\": \"Galactic Basic\"\n  }],\n  \"vehicles\": []\n}, {\n  \"name\": \"Obi-Wan Kenobi\",\n  \"hair_color\": \"auburn, white\",\n  \"skin_color\": \"fair\",\n  \"eye_color\": \"blue-gray\",\n  \"birth_year\": \"57BBY\",\n  \"gender\": \"male\",\n  \"homeworld\": {\n    \"name\": \"Stewjon\",\n    \"rotation_period\": \"unknown\",\n    \"orbital_period\": \"unknown\",\n    \"diameter\": \"0\",\n    \"climate\": \"temperate\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"grass\",\n    \"surface_water\": \"unknown\",\n    \"population\": \"unknown\"\n  },\n  \"species\": [{\n    \"name\": \"Human\",\n    \"classification\": \"mammal\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"180\",\n    \"skin_colors\": \"caucasian, black, asian, hispanic\",\n    \"hair_colors\": \"blonde, brown, black, red\",\n    \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\n    \"average_lifespan\": \"120\",\n    \"language\": \"Galactic Basic\"\n  }],\n  \"vehicles\": [{\n    \"name\": \"Tribubble bongo\",\n    \"model\": \"Tribubble bongo\",\n    \"manufacturer\": \"Otoh Gunga Bongameken Cooperative\",\n    \"cost_in_credits\": \"unknown\",\n    \"length\": \"15\",\n    \"max_atmosphering_speed\": \"85\",\n    \"crew\": \"1\",\n    \"passengers\": \"2\",\n    \"cargo_capacity\": \"1600\",\n    \"consumables\": \"unknown\",\n    \"vehicle_class\": \"submarine\"\n  }]\n}, {\n  \"name\": \"Anakin Skywalker\",\n  \"hair_color\": \"blond\",\n  \"skin_color\": \"fair\",\n  \"eye_color\": \"blue\",\n  \"birth_year\": \"41.9BBY\",\n  \"gender\": \"male\",\n  \"homeworld\": {\n    \"name\": \"Tatooine\",\n    \"rotation_period\": \"23\",\n    \"orbital_period\": \"304\",\n    \"diameter\": \"10465\",\n    \"climate\": \"arid\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"desert\",\n    \"surface_water\": \"1\",\n    \"population\": \"200000\"\n  },\n  \"species\": [{\n    \"name\": \"Human\",\n    \"classification\": \"mammal\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"180\",\n    \"skin_colors\": \"caucasian, black, asian, hispanic\",\n    \"hair_colors\": \"blonde, brown, black, red\",\n    \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\n    \"average_lifespan\": \"120\",\n    \"language\": \"Galactic Basic\"\n  }],\n  \"vehicles\": [{\n    \"name\": \"Zephyr-G swoop bike\",\n    \"model\": \"Zephyr-G swoop bike\",\n    \"manufacturer\": \"Mobquet Swoops and Speeders\",\n    \"cost_in_credits\": \"5750\",\n    \"length\": \"3.68\",\n    \"max_atmosphering_speed\": \"350\",\n    \"crew\": \"1\",\n    \"passengers\": \"1\",\n    \"cargo_capacity\": \"200\",\n    \"consumables\": \"none\",\n    \"vehicle_class\": \"repulsorcraft\"\n  }, {\n    \"name\": \"XJ-6 airspeeder\",\n    \"model\": \"XJ-6 airspeeder\",\n    \"manufacturer\": \"Narglatch AirTech prefabricated kit\",\n    \"cost_in_credits\": \"unknown\",\n    \"length\": \"6.23\",\n    \"max_atmosphering_speed\": \"720\",\n    \"crew\": \"1\",\n    \"passengers\": \"1\",\n    \"cargo_capacity\": \"unknown\",\n    \"consumables\": \"unknown\",\n    \"vehicle_class\": \"airspeeder\"\n  }]\n}, {\n  \"name\": \"Wilhuff Tarkin\",\n  \"hair_color\": \"auburn, grey\",\n  \"skin_color\": \"fair\",\n  \"eye_color\": \"blue\",\n  \"birth_year\": \"64BBY\",\n  \"gender\": \"male\",\n  \"homeworld\": {\n    \"name\": \"Eriadu\",\n    \"rotation_period\": \"24\",\n    \"orbital_period\": \"360\",\n    \"diameter\": \"13490\",\n    \"climate\": \"polluted\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"cityscape\",\n    \"surface_water\": \"unknown\",\n    \"population\": \"22000000000\"\n  },\n  \"species\": [{\n    \"name\": \"Human\",\n    \"classification\": \"mammal\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"180\",\n    \"skin_colors\": \"caucasian, black, asian, hispanic\",\n    \"hair_colors\": \"blonde, brown, black, red\",\n    \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\n    \"average_lifespan\": \"120\",\n    \"language\": \"Galactic Basic\"\n  }],\n  \"vehicles\": []\n}, {\n  \"name\": \"Chewbacca\",\n  \"hair_color\": \"brown\",\n  \"skin_color\": \"unknown\",\n  \"eye_color\": \"blue\",\n  \"birth_year\": \"200BBY\",\n  \"gender\": \"male\",\n  \"homeworld\": {\n    \"name\": \"Kashyyyk\",\n    \"rotation_period\": \"26\",\n    \"orbital_period\": \"381\",\n    \"diameter\": \"12765\",\n    \"climate\": \"tropical\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"jungle, forests, lakes, rivers\",\n    \"surface_water\": \"60\",\n    \"population\": \"45000000\"\n  },\n  \"species\": [{\n    \"name\": \"Wookiee\",\n    \"classification\": \"mammal\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"210\",\n    \"skin_colors\": \"gray\",\n    \"hair_colors\": \"black, brown\",\n    \"eye_colors\": \"blue, green, yellow, brown, golden, red\",\n    \"average_lifespan\": \"400\",\n    \"language\": \"Shyriiwook\"\n  }],\n  \"vehicles\": [{\n    \"name\": \"AT-ST\",\n    \"model\": \"All Terrain Scout Transport\",\n    \"manufacturer\": \"Kuat Drive Yards, Imperial Department of Military Research\",\n    \"cost_in_credits\": \"unknown\",\n    \"length\": \"2\",\n    \"max_atmosphering_speed\": \"90\",\n    \"crew\": \"2\",\n    \"passengers\": \"0\",\n    \"cargo_capacity\": \"200\",\n    \"consumables\": \"none\",\n    \"vehicle_class\": \"walker\"\n  }]\n}, {\n  \"name\": \"Han Solo\",\n  \"hair_color\": \"brown\",\n  \"skin_color\": \"fair\",\n  \"eye_color\": \"brown\",\n  \"birth_year\": \"29BBY\",\n  \"gender\": \"male\",\n  \"homeworld\": {\n    \"name\": \"Corellia\",\n    \"rotation_period\": \"25\",\n    \"orbital_period\": \"329\",\n    \"diameter\": \"11000\",\n    \"climate\": \"temperate\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"plains, urban, hills, forests\",\n    \"surface_water\": \"70\",\n    \"population\": \"3000000000\"\n  },\n  \"species\": [{\n    \"name\": \"Human\",\n    \"classification\": \"mammal\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"180\",\n    \"skin_colors\": \"caucasian, black, asian, hispanic\",\n    \"hair_colors\": \"blonde, brown, black, red\",\n    \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\n    \"average_lifespan\": \"120\",\n    \"language\": \"Galactic Basic\"\n  }],\n  \"vehicles\": []\n}, {\n  \"name\": \"Greedo\",\n  \"hair_color\": \"n/a\",\n  \"skin_color\": \"green\",\n  \"eye_color\": \"black\",\n  \"birth_year\": \"44BBY\",\n  \"gender\": \"male\",\n  \"homeworld\": {\n    \"name\": \"Rodia\",\n    \"rotation_period\": \"29\",\n    \"orbital_period\": \"305\",\n    \"diameter\": \"7549\",\n    \"climate\": \"hot\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"jungles, oceans, urban, swamps\",\n    \"surface_water\": \"60\",\n    \"population\": \"1300000000\"\n  },\n  \"species\": [{\n    \"name\": \"Rodian\",\n    \"classification\": \"sentient\",\n    \"designation\": \"reptilian\",\n    \"average_height\": \"170\",\n    \"skin_colors\": \"green, blue\",\n    \"hair_colors\": \"n/a\",\n    \"eye_colors\": \"black\",\n    \"average_lifespan\": \"unknown\",\n    \"language\": \"Galactic Basic\"\n  }],\n  \"vehicles\": []\n}, {\n  \"name\": \"Jabba Desilijic Tiure\",\n  \"hair_color\": \"n/a\",\n  \"skin_color\": \"green-tan, brown\",\n  \"eye_color\": \"orange\",\n  \"birth_year\": \"600BBY\",\n  \"gender\": \"hermaphrodite\",\n  \"homeworld\": {\n    \"name\": \"Nal Hutta\",\n    \"rotation_period\": \"87\",\n    \"orbital_period\": \"413\",\n    \"diameter\": \"12150\",\n    \"climate\": \"temperate\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"urban, oceans, swamps, bogs\",\n    \"surface_water\": \"unknown\",\n    \"population\": \"7000000000\"\n  },\n  \"species\": [{\n    \"name\": \"Hutt\",\n    \"classification\": \"gastropod\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"300\",\n    \"skin_colors\": \"green, brown, tan\",\n    \"hair_colors\": \"n/a\",\n    \"eye_colors\": \"yellow, red\",\n    \"average_lifespan\": \"1000\",\n    \"language\": \"Huttese\"\n  }],\n  \"vehicles\": []\n}, {\n  \"name\": \"Wedge Antilles\",\n  \"hair_color\": \"brown\",\n  \"skin_color\": \"fair\",\n  \"eye_color\": \"hazel\",\n  \"birth_year\": \"21BBY\",\n  \"gender\": \"male\",\n  \"homeworld\": {\n    \"name\": \"Corellia\",\n    \"rotation_period\": \"25\",\n    \"orbital_period\": \"329\",\n    \"diameter\": \"11000\",\n    \"climate\": \"temperate\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"plains, urban, hills, forests\",\n    \"surface_water\": \"70\",\n    \"population\": \"3000000000\"\n  },\n  \"species\": [{\n    \"name\": \"Human\",\n    \"classification\": \"mammal\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"180\",\n    \"skin_colors\": \"caucasian, black, asian, hispanic\",\n    \"hair_colors\": \"blonde, brown, black, red\",\n    \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\n    \"average_lifespan\": \"120\",\n    \"language\": \"Galactic Basic\"\n  }],\n  \"vehicles\": [{\n    \"name\": \"Snowspeeder\",\n    \"model\": \"t-47 airspeeder\",\n    \"manufacturer\": \"Incom corporation\",\n    \"cost_in_credits\": \"unknown\",\n    \"length\": \"4.5\",\n    \"max_atmosphering_speed\": \"650\",\n    \"crew\": \"2\",\n    \"passengers\": \"0\",\n    \"cargo_capacity\": \"10\",\n    \"consumables\": \"none\",\n    \"vehicle_class\": \"airspeeder\"\n  }]\n}, {\n  \"name\": \"Jek Tono Porkins\",\n  \"hair_color\": \"brown\",\n  \"skin_color\": \"fair\",\n  \"eye_color\": \"blue\",\n  \"birth_year\": \"unknown\",\n  \"gender\": \"male\",\n  \"homeworld\": {\n    \"name\": \"Bestine IV\",\n    \"rotation_period\": \"26\",\n    \"orbital_period\": \"680\",\n    \"diameter\": \"6400\",\n    \"climate\": \"temperate\",\n    \"gravity\": \"unknown\",\n    \"terrain\": \"rocky islands, oceans\",\n    \"surface_water\": \"98\",\n    \"population\": \"62000000\"\n  },\n  \"species\": [{\n    \"name\": \"Human\",\n    \"classification\": \"mammal\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"180\",\n    \"skin_colors\": \"caucasian, black, asian, hispanic\",\n    \"hair_colors\": \"blonde, brown, black, red\",\n    \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\n    \"average_lifespan\": \"120\",\n    \"language\": \"Galactic Basic\"\n  }],\n  \"vehicles\": []\n}, {\n  \"name\": \"Yoda\",\n  \"hair_color\": \"white\",\n  \"skin_color\": \"green\",\n  \"eye_color\": \"brown\",\n  \"birth_year\": \"896BBY\",\n  \"gender\": \"male\",\n  \"homeworld\": {\n    \"name\": \"unknown\",\n    \"rotation_period\": \"0\",\n    \"orbital_period\": \"0\",\n    \"diameter\": \"0\",\n    \"climate\": \"unknown\",\n    \"gravity\": \"unknown\",\n    \"terrain\": \"unknown\",\n    \"surface_water\": \"unknown\",\n    \"population\": \"unknown\"\n  },\n  \"species\": [{\n    \"name\": \"Yoda's species\",\n    \"classification\": \"mammal\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"66\",\n    \"skin_colors\": \"green, yellow\",\n    \"hair_colors\": \"brown, white\",\n    \"eye_colors\": \"brown, green, yellow\",\n    \"average_lifespan\": \"900\",\n    \"language\": \"Galactic basic\"\n  }],\n  \"vehicles\": []\n}, {\n  \"name\": \"Palpatine\",\n  \"hair_color\": \"grey\",\n  \"skin_color\": \"pale\",\n  \"eye_color\": \"yellow\",\n  \"birth_year\": \"82BBY\",\n  \"gender\": \"male\",\n  \"homeworld\": {\n    \"name\": \"Naboo\",\n    \"rotation_period\": \"26\",\n    \"orbital_period\": \"312\",\n    \"diameter\": \"12120\",\n    \"climate\": \"temperate\",\n    \"gravity\": \"1 standard\",\n    \"terrain\": \"grassy hills, swamps, forests, mountains\",\n    \"surface_water\": \"12\",\n    \"population\": \"4500000000\"\n  },\n  \"species\": [{\n    \"name\": \"Human\",\n    \"classification\": \"mammal\",\n    \"designation\": \"sentient\",\n    \"average_height\": \"180\",\n    \"skin_colors\": \"caucasian, black, asian, hispanic\",\n    \"hair_colors\": \"blonde, brown, black, red\",\n    \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\n    \"average_lifespan\": \"120\",\n    \"language\": \"Galactic Basic\"\n  }],\n  \"vehicles\": []\n}];\nexports.peoples = peoples;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "people.js"
      ],
      "names": [
        "peoples"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,OAAO,GAAG,CACrB;AACE,UAAQ,gBADV;AAEE,gBAAc,OAFhB;AAGE,gBAAc,MAHhB;AAIE,eAAa,MAJf;AAKE,gBAAc,OALhB;AAME,YAAU,MANZ;AAOE,eAAa;AACX,YAAQ,UADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,MALA;AAMX,eAAW,YANA;AAOX,eAAW,QAPA;AAQX,qBAAiB,GARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,QAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,mCALjB;AAME,mBAAe,2BANjB;AAOE,kBAAc,wCAPhB;AAQE,wBAAoB,KARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY,CACV;AACE,YAAQ,eADV;AAEE,aAAS,iCAFX;AAGE,oBAAgB,gDAHlB;AAIE,uBAAmB,SAJrB;AAKE,cAAU,KALZ;AAME,8BAA0B,MAN5B;AAOE,YAAQ,GAPV;AAQE,kBAAc,GARhB;AASE,sBAAkB,GATpB;AAUE,mBAAe,MAVjB;AAWE,qBAAiB;AAXnB,GADU,EAcV;AACE,YAAQ,uBADV;AAEE,aAAS,mBAFX;AAGE,oBAAgB,0BAHlB;AAIE,uBAAmB,MAJrB;AAKE,cAAU,GALZ;AAME,8BAA0B,KAN5B;AAOE,YAAQ,GAPV;AAQE,kBAAc,GARhB;AASE,sBAAkB,GATpB;AAUE,mBAAe,OAVjB;AAWE,qBAAiB;AAXnB,GAdU;AA/Bd,CADqB,EA6DrB;AACE,UAAQ,OADV;AAEE,gBAAc,KAFhB;AAGE,gBAAc,MAHhB;AAIE,eAAa,QAJf;AAKE,gBAAc,QALhB;AAME,YAAU,KANZ;AAOE,eAAa;AACX,YAAQ,UADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,MALA;AAMX,eAAW,YANA;AAOX,eAAW,QAPA;AAQX,qBAAiB,GARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,YAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,KALjB;AAME,mBAAe,KANjB;AAOE,kBAAc,KAPhB;AAQE,wBAAoB,YARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY;AA/Bd,CA7DqB,EA8FrB;AACE,UAAQ,OADV;AAEE,gBAAc,KAFhB;AAGE,gBAAc,aAHhB;AAIE,eAAa,KAJf;AAKE,gBAAc,OALhB;AAME,YAAU,KANZ;AAOE,eAAa;AACX,YAAQ,OADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,WALA;AAMX,eAAW,YANA;AAOX,eAAW,0CAPA;AAQX,qBAAiB,IARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,YAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,KALjB;AAME,mBAAe,KANjB;AAOE,kBAAc,KAPhB;AAQE,wBAAoB,YARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY;AA/Bd,CA9FqB,EA+HrB;AACE,UAAQ,aADV;AAEE,gBAAc,MAFhB;AAGE,gBAAc,OAHhB;AAIE,eAAa,QAJf;AAKE,gBAAc,SALhB;AAME,YAAU,MANZ;AAOE,eAAa;AACX,YAAQ,UADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,MALA;AAMX,eAAW,YANA;AAOX,eAAW,QAPA;AAQX,qBAAiB,GARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,QAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,mCALjB;AAME,mBAAe,2BANjB;AAOE,kBAAc,wCAPhB;AAQE,wBAAoB,KARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY;AA/Bd,CA/HqB,EAgKrB;AACE,UAAQ,aADV;AAEE,gBAAc,OAFhB;AAGE,gBAAc,OAHhB;AAIE,eAAa,OAJf;AAKE,gBAAc,OALhB;AAME,YAAU,QANZ;AAOE,eAAa;AACX,YAAQ,UADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,WALA;AAMX,eAAW,YANA;AAOX,eAAW,uBAPA;AAQX,qBAAiB,IARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,QAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,mCALjB;AAME,mBAAe,2BANjB;AAOE,kBAAc,wCAPhB;AAQE,wBAAoB,KARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY,CACV;AACE,YAAQ,uBADV;AAEE,aAAS,mBAFX;AAGE,oBAAgB,0BAHlB;AAIE,uBAAmB,MAJrB;AAKE,cAAU,GALZ;AAME,8BAA0B,KAN5B;AAOE,YAAQ,GAPV;AAQE,kBAAc,GARhB;AASE,sBAAkB,GATpB;AAUE,mBAAe,OAVjB;AAWE,qBAAiB;AAXnB,GADU;AA/Bd,CAhKqB,EA+MrB;AACE,UAAQ,WADV;AAEE,gBAAc,aAFhB;AAGE,gBAAc,OAHhB;AAIE,eAAa,MAJf;AAKE,gBAAc,OALhB;AAME,YAAU,MANZ;AAOE,eAAa;AACX,YAAQ,UADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,MALA;AAMX,eAAW,YANA;AAOX,eAAW,QAPA;AAQX,qBAAiB,GARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,QAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,mCALjB;AAME,mBAAe,2BANjB;AAOE,kBAAc,wCAPhB;AAQE,wBAAoB,KARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY;AA/Bd,CA/MqB,EAgPrB;AACE,UAAQ,oBADV;AAEE,gBAAc,OAFhB;AAGE,gBAAc,OAHhB;AAIE,eAAa,MAJf;AAKE,gBAAc,OALhB;AAME,YAAU,QANZ;AAOE,eAAa;AACX,YAAQ,UADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,MALA;AAMX,eAAW,YANA;AAOX,eAAW,QAPA;AAQX,qBAAiB,GARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,QAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,mCALjB;AAME,mBAAe,2BANjB;AAOE,kBAAc,wCAPhB;AAQE,wBAAoB,KARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY;AA/Bd,CAhPqB,EAiRrB;AACE,UAAQ,OADV;AAEE,gBAAc,KAFhB;AAGE,gBAAc,YAHhB;AAIE,eAAa,KAJf;AAKE,gBAAc,SALhB;AAME,YAAU,KANZ;AAOE,eAAa;AACX,YAAQ,UADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,MALA;AAMX,eAAW,YANA;AAOX,eAAW,QAPA;AAQX,qBAAiB,GARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,YAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,KALjB;AAME,mBAAe,KANjB;AAOE,kBAAc,KAPhB;AAQE,wBAAoB,YARtB;AASE,iBAAa;AATf,GADS,CAlBb;AA+BE,cAAY;AA/Bd,CAjRqB,EAkTrB;AACE,UAAQ,mBADV;AAEE,gBAAc,OAFhB;AAGE,gBAAc,OAHhB;AAIE,eAAa,OAJf;AAKE,gBAAc,OALhB;AAME,YAAU,MANZ;AAOE,eAAa;AACX,YAAQ,UADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,MALA;AAMX,eAAW,YANA;AAOX,eAAW,QAPA;AAQX,qBAAiB,GARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,QAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,mCALjB;AAME,mBAAe,2BANjB;AAOE,kBAAc,wCAPhB;AAQE,wBAAoB,KARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY;AA/Bd,CAlTqB,EAmVrB;AACE,UAAQ,gBADV;AAEE,gBAAc,eAFhB;AAGE,gBAAc,MAHhB;AAIE,eAAa,WAJf;AAKE,gBAAc,OALhB;AAME,YAAU,MANZ;AAOE,eAAa;AACX,YAAQ,SADG;AAEX,uBAAmB,SAFR;AAGX,sBAAkB,SAHP;AAIX,gBAAY,GAJD;AAKX,eAAW,WALA;AAMX,eAAW,YANA;AAOX,eAAW,OAPA;AAQX,qBAAiB,SARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,QAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,mCALjB;AAME,mBAAe,2BANjB;AAOE,kBAAc,wCAPhB;AAQE,wBAAoB,KARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY,CACV;AACE,YAAQ,iBADV;AAEE,aAAS,iBAFX;AAGE,oBAAgB,mCAHlB;AAIE,uBAAmB,SAJrB;AAKE,cAAU,IALZ;AAME,8BAA0B,IAN5B;AAOE,YAAQ,GAPV;AAQE,kBAAc,GARhB;AASE,sBAAkB,MATpB;AAUE,mBAAe,SAVjB;AAWE,qBAAiB;AAXnB,GADU;AA/Bd,CAnVqB,EAkYrB;AACE,UAAQ,kBADV;AAEE,gBAAc,OAFhB;AAGE,gBAAc,MAHhB;AAIE,eAAa,MAJf;AAKE,gBAAc,SALhB;AAME,YAAU,MANZ;AAOE,eAAa;AACX,YAAQ,UADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,MALA;AAMX,eAAW,YANA;AAOX,eAAW,QAPA;AAQX,qBAAiB,GARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,QAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,mCALjB;AAME,mBAAe,2BANjB;AAOE,kBAAc,wCAPhB;AAQE,wBAAoB,KARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY,CACV;AACE,YAAQ,qBADV;AAEE,aAAS,qBAFX;AAGE,oBAAgB,6BAHlB;AAIE,uBAAmB,MAJrB;AAKE,cAAU,MALZ;AAME,8BAA0B,KAN5B;AAOE,YAAQ,GAPV;AAQE,kBAAc,GARhB;AASE,sBAAkB,KATpB;AAUE,mBAAe,MAVjB;AAWE,qBAAiB;AAXnB,GADU,EAcV;AACE,YAAQ,iBADV;AAEE,aAAS,iBAFX;AAGE,oBAAgB,qCAHlB;AAIE,uBAAmB,SAJrB;AAKE,cAAU,MALZ;AAME,8BAA0B,KAN5B;AAOE,YAAQ,GAPV;AAQE,kBAAc,GARhB;AASE,sBAAkB,SATpB;AAUE,mBAAe,SAVjB;AAWE,qBAAiB;AAXnB,GAdU;AA/Bd,CAlYqB,EA8brB;AACE,UAAQ,gBADV;AAEE,gBAAc,cAFhB;AAGE,gBAAc,MAHhB;AAIE,eAAa,MAJf;AAKE,gBAAc,OALhB;AAME,YAAU,MANZ;AAOE,eAAa;AACX,YAAQ,QADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,UALA;AAMX,eAAW,YANA;AAOX,eAAW,WAPA;AAQX,qBAAiB,SARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,QAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,mCALjB;AAME,mBAAe,2BANjB;AAOE,kBAAc,wCAPhB;AAQE,wBAAoB,KARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY;AA/Bd,CA9bqB,EA+drB;AACE,UAAQ,WADV;AAEE,gBAAc,OAFhB;AAGE,gBAAc,SAHhB;AAIE,eAAa,MAJf;AAKE,gBAAc,QALhB;AAME,YAAU,MANZ;AAOE,eAAa;AACX,YAAQ,UADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,UALA;AAMX,eAAW,YANA;AAOX,eAAW,gCAPA;AAQX,qBAAiB,IARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,SADV;AAEE,sBAAkB,QAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,MALjB;AAME,mBAAe,cANjB;AAOE,kBAAc,yCAPhB;AAQE,wBAAoB,KARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY,CACV;AACE,YAAQ,OADV;AAEE,aAAS,6BAFX;AAGE,oBAAgB,4DAHlB;AAIE,uBAAmB,SAJrB;AAKE,cAAU,GALZ;AAME,8BAA0B,IAN5B;AAOE,YAAQ,GAPV;AAQE,kBAAc,GARhB;AASE,sBAAkB,KATpB;AAUE,mBAAe,MAVjB;AAWE,qBAAiB;AAXnB,GADU;AA/Bd,CA/dqB,EA8gBrB;AACE,UAAQ,UADV;AAEE,gBAAc,OAFhB;AAGE,gBAAc,MAHhB;AAIE,eAAa,OAJf;AAKE,gBAAc,OALhB;AAME,YAAU,MANZ;AAOE,eAAa;AACX,YAAQ,UADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,WALA;AAMX,eAAW,YANA;AAOX,eAAW,+BAPA;AAQX,qBAAiB,IARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,QAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,mCALjB;AAME,mBAAe,2BANjB;AAOE,kBAAc,wCAPhB;AAQE,wBAAoB,KARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY;AA/Bd,CA9gBqB,EA+iBrB;AACE,UAAQ,QADV;AAEE,gBAAc,KAFhB;AAGE,gBAAc,OAHhB;AAIE,eAAa,OAJf;AAKE,gBAAc,OALhB;AAME,YAAU,MANZ;AAOE,eAAa;AACX,YAAQ,OADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,MAJD;AAKX,eAAW,KALA;AAMX,eAAW,YANA;AAOX,eAAW,gCAPA;AAQX,qBAAiB,IARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,QADV;AAEE,sBAAkB,UAFpB;AAGE,mBAAe,WAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,aALjB;AAME,mBAAe,KANjB;AAOE,kBAAc,OAPhB;AAQE,wBAAoB,SARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY;AA/Bd,CA/iBqB,EAglBrB;AACE,UAAQ,uBADV;AAEE,gBAAc,KAFhB;AAGE,gBAAc,kBAHhB;AAIE,eAAa,QAJf;AAKE,gBAAc,QALhB;AAME,YAAU,eANZ;AAOE,eAAa;AACX,YAAQ,WADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,WALA;AAMX,eAAW,YANA;AAOX,eAAW,6BAPA;AAQX,qBAAiB,SARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,MADV;AAEE,sBAAkB,WAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,mBALjB;AAME,mBAAe,KANjB;AAOE,kBAAc,aAPhB;AAQE,wBAAoB,MARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY;AA/Bd,CAhlBqB,EAinBrB;AACE,UAAQ,gBADV;AAEE,gBAAc,OAFhB;AAGE,gBAAc,MAHhB;AAIE,eAAa,OAJf;AAKE,gBAAc,OALhB;AAME,YAAU,MANZ;AAOE,eAAa;AACX,YAAQ,UADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,WALA;AAMX,eAAW,YANA;AAOX,eAAW,+BAPA;AAQX,qBAAiB,IARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,QAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,mCALjB;AAME,mBAAe,2BANjB;AAOE,kBAAc,wCAPhB;AAQE,wBAAoB,KARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY,CACV;AACE,YAAQ,aADV;AAEE,aAAS,iBAFX;AAGE,oBAAgB,mBAHlB;AAIE,uBAAmB,SAJrB;AAKE,cAAU,KALZ;AAME,8BAA0B,KAN5B;AAOE,YAAQ,GAPV;AAQE,kBAAc,GARhB;AASE,sBAAkB,IATpB;AAUE,mBAAe,MAVjB;AAWE,qBAAiB;AAXnB,GADU;AA/Bd,CAjnBqB,EAgqBrB;AACE,UAAQ,kBADV;AAEE,gBAAc,OAFhB;AAGE,gBAAc,MAHhB;AAIE,eAAa,MAJf;AAKE,gBAAc,SALhB;AAME,YAAU,MANZ;AAOE,eAAa;AACX,YAAQ,YADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,MAJD;AAKX,eAAW,WALA;AAMX,eAAW,SANA;AAOX,eAAW,uBAPA;AAQX,qBAAiB,IARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,QAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,mCALjB;AAME,mBAAe,2BANjB;AAOE,kBAAc,wCAPhB;AAQE,wBAAoB,KARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY;AA/Bd,CAhqBqB,EAisBrB;AACE,UAAQ,MADV;AAEE,gBAAc,OAFhB;AAGE,gBAAc,OAHhB;AAIE,eAAa,OAJf;AAKE,gBAAc,QALhB;AAME,YAAU,MANZ;AAOE,eAAa;AACX,YAAQ,SADG;AAEX,uBAAmB,GAFR;AAGX,sBAAkB,GAHP;AAIX,gBAAY,GAJD;AAKX,eAAW,SALA;AAMX,eAAW,SANA;AAOX,eAAW,SAPA;AAQX,qBAAiB,SARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,gBADV;AAEE,sBAAkB,QAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,IAJpB;AAKE,mBAAe,eALjB;AAME,mBAAe,cANjB;AAOE,kBAAc,sBAPhB;AAQE,wBAAoB,KARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY;AA/Bd,CAjsBqB,EAkuBrB;AACE,UAAQ,WADV;AAEE,gBAAc,MAFhB;AAGE,gBAAc,MAHhB;AAIE,eAAa,QAJf;AAKE,gBAAc,OALhB;AAME,YAAU,MANZ;AAOE,eAAa;AACX,YAAQ,OADG;AAEX,uBAAmB,IAFR;AAGX,sBAAkB,KAHP;AAIX,gBAAY,OAJD;AAKX,eAAW,WALA;AAMX,eAAW,YANA;AAOX,eAAW,0CAPA;AAQX,qBAAiB,IARN;AASX,kBAAc;AATH,GAPf;AAkBE,aAAW,CACT;AACE,YAAQ,OADV;AAEE,sBAAkB,QAFpB;AAGE,mBAAe,UAHjB;AAIE,sBAAkB,KAJpB;AAKE,mBAAe,mCALjB;AAME,mBAAe,2BANjB;AAOE,kBAAc,wCAPhB;AAQE,wBAAoB,KARtB;AASE,gBAAY;AATd,GADS,CAlBb;AA+BE,cAAY;AA/Bd,CAluBqB,CAAhB",
      "sourceRoot": "D:\\WApp\\ravn-challenge-v2-disraeliari\\server\\src\\models",
      "sourcesContent": [
        "export const peoples = [\r\n  {\r\n    \"name\": \"Luke Skywalker\",\r\n    \"hair_color\": \"blond\",\r\n    \"skin_color\": \"fair\",\r\n    \"eye_color\": \"blue\",\r\n    \"birth_year\": \"19BBY\",\r\n    \"gender\": \"male\",\r\n    \"homeworld\": {\r\n      \"name\": \"Tatooine\",\r\n      \"rotation_period\": \"23\",\r\n      \"orbital_period\": \"304\",\r\n      \"diameter\": \"10465\",\r\n      \"climate\": \"arid\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"desert\",\r\n      \"surface_water\": \"1\",\r\n      \"population\": \"200000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Human\",\r\n        \"classification\": \"mammal\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"180\",\r\n        \"skin_colors\": \"caucasian, black, asian, hispanic\",\r\n        \"hair_colors\": \"blonde, brown, black, red\",\r\n        \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\r\n        \"average_lifespan\": \"120\",\r\n        \"language\": \"Galactic Basic\"\r\n      }\r\n    ],\r\n    \"vehicles\": [\r\n      {\r\n        \"name\": \"Vulture Droid\",\r\n        \"model\": \"Vulture-class droid starfighter\",\r\n        \"manufacturer\": \"Haor Chall Engineering, Baktoid Armor Workshop\",\r\n        \"cost_in_credits\": \"unknown\",\r\n        \"length\": \"3.5\",\r\n        \"max_atmosphering_speed\": \"1200\",\r\n        \"crew\": \"0\",\r\n        \"passengers\": \"0\",\r\n        \"cargo_capacity\": \"0\",\r\n        \"consumables\": \"none\",\r\n        \"vehicle_class\": \"starfighter\"\r\n      },\r\n      {\r\n        \"name\": \"Imperial Speeder Bike\",\r\n        \"model\": \"74-Z speeder bike\",\r\n        \"manufacturer\": \"Aratech Repulsor Company\",\r\n        \"cost_in_credits\": \"8000\",\r\n        \"length\": \"3\",\r\n        \"max_atmosphering_speed\": \"360\",\r\n        \"crew\": \"1\",\r\n        \"passengers\": \"1\",\r\n        \"cargo_capacity\": \"4\",\r\n        \"consumables\": \"1 day\",\r\n        \"vehicle_class\": \"speeder\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"C-3PO\",\r\n    \"hair_color\": \"n/a\",\r\n    \"skin_color\": \"gold\",\r\n    \"eye_color\": \"yellow\",\r\n    \"birth_year\": \"112BBY\",\r\n    \"gender\": \"n/a\",\r\n    \"homeworld\": {\r\n      \"name\": \"Tatooine\",\r\n      \"rotation_period\": \"23\",\r\n      \"orbital_period\": \"304\",\r\n      \"diameter\": \"10465\",\r\n      \"climate\": \"arid\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"desert\",\r\n      \"surface_water\": \"1\",\r\n      \"population\": \"200000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Droid\",\r\n        \"classification\": \"artificial\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"n/a\",\r\n        \"skin_colors\": \"n/a\",\r\n        \"hair_colors\": \"n/a\",\r\n        \"eye_colors\": \"n/a\",\r\n        \"average_lifespan\": \"indefinite\",\r\n        \"language\": \"n/a\",\r\n      }\r\n    ],\r\n    \"vehicles\": []\r\n  },\r\n  {\r\n    \"name\": \"R2-D2\",\r\n    \"hair_color\": \"n/a\",\r\n    \"skin_color\": \"white, blue\",\r\n    \"eye_color\": \"red\",\r\n    \"birth_year\": \"33BBY\",\r\n    \"gender\": \"n/a\",\r\n    \"homeworld\": {\r\n      \"name\": \"Naboo\",\r\n      \"rotation_period\": \"26\",\r\n      \"orbital_period\": \"312\",\r\n      \"diameter\": \"12120\",\r\n      \"climate\": \"temperate\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"grassy hills, swamps, forests, mountains\",\r\n      \"surface_water\": \"12\",\r\n      \"population\": \"4500000000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Droid\",\r\n        \"classification\": \"artificial\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"n/a\",\r\n        \"skin_colors\": \"n/a\",\r\n        \"hair_colors\": \"n/a\",\r\n        \"eye_colors\": \"n/a\",\r\n        \"average_lifespan\": \"indefinite\",\r\n        \"language\": \"n/a\",\r\n      }\r\n    ],\r\n    \"vehicles\": []\r\n  },\r\n  {\r\n    \"name\": \"Darth Vader\",\r\n    \"hair_color\": \"none\",\r\n    \"skin_color\": \"white\",\r\n    \"eye_color\": \"yellow\",\r\n    \"birth_year\": \"41.9BBY\",\r\n    \"gender\": \"male\",\r\n    \"homeworld\": {\r\n      \"name\": \"Tatooine\",\r\n      \"rotation_period\": \"23\",\r\n      \"orbital_period\": \"304\",\r\n      \"diameter\": \"10465\",\r\n      \"climate\": \"arid\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"desert\",\r\n      \"surface_water\": \"1\",\r\n      \"population\": \"200000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Human\",\r\n        \"classification\": \"mammal\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"180\",\r\n        \"skin_colors\": \"caucasian, black, asian, hispanic\",\r\n        \"hair_colors\": \"blonde, brown, black, red\",\r\n        \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\r\n        \"average_lifespan\": \"120\",\r\n        \"language\": \"Galactic Basic\"\r\n      }\r\n    ],\r\n    \"vehicles\": []\r\n  },\r\n  {\r\n    \"name\": \"Leia Organa\",\r\n    \"hair_color\": \"brown\",\r\n    \"skin_color\": \"light\",\r\n    \"eye_color\": \"brown\",\r\n    \"birth_year\": \"19BBY\",\r\n    \"gender\": \"female\",\r\n    \"homeworld\": {\r\n      \"name\": \"Alderaan\",\r\n      \"rotation_period\": \"24\",\r\n      \"orbital_period\": \"364\",\r\n      \"diameter\": \"12500\",\r\n      \"climate\": \"temperate\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"grasslands, mountains\",\r\n      \"surface_water\": \"40\",\r\n      \"population\": \"2000000000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Human\",\r\n        \"classification\": \"mammal\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"180\",\r\n        \"skin_colors\": \"caucasian, black, asian, hispanic\",\r\n        \"hair_colors\": \"blonde, brown, black, red\",\r\n        \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\r\n        \"average_lifespan\": \"120\",\r\n        \"language\": \"Galactic Basic\"\r\n      }\r\n    ],\r\n    \"vehicles\": [\r\n      {\r\n        \"name\": \"Imperial Speeder Bike\",\r\n        \"model\": \"74-Z speeder bike\",\r\n        \"manufacturer\": \"Aratech Repulsor Company\",\r\n        \"cost_in_credits\": \"8000\",\r\n        \"length\": \"3\",\r\n        \"max_atmosphering_speed\": \"360\",\r\n        \"crew\": \"1\",\r\n        \"passengers\": \"1\",\r\n        \"cargo_capacity\": \"4\",\r\n        \"consumables\": \"1 day\",\r\n        \"vehicle_class\": \"speeder\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Owen Lars\",\r\n    \"hair_color\": \"brown, grey\",\r\n    \"skin_color\": \"light\",\r\n    \"eye_color\": \"blue\",\r\n    \"birth_year\": \"52BBY\",\r\n    \"gender\": \"male\",\r\n    \"homeworld\": {\r\n      \"name\": \"Tatooine\",\r\n      \"rotation_period\": \"23\",\r\n      \"orbital_period\": \"304\",\r\n      \"diameter\": \"10465\",\r\n      \"climate\": \"arid\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"desert\",\r\n      \"surface_water\": \"1\",\r\n      \"population\": \"200000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Human\",\r\n        \"classification\": \"mammal\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"180\",\r\n        \"skin_colors\": \"caucasian, black, asian, hispanic\",\r\n        \"hair_colors\": \"blonde, brown, black, red\",\r\n        \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\r\n        \"average_lifespan\": \"120\",\r\n        \"language\": \"Galactic Basic\"\r\n      }\r\n    ],\r\n    \"vehicles\": []\r\n  },\r\n  {\r\n    \"name\": \"Beru Whitesun lars\",\r\n    \"hair_color\": \"brown\",\r\n    \"skin_color\": \"light\",\r\n    \"eye_color\": \"blue\",\r\n    \"birth_year\": \"47BBY\",\r\n    \"gender\": \"female\",\r\n    \"homeworld\": {\r\n      \"name\": \"Tatooine\",\r\n      \"rotation_period\": \"23\",\r\n      \"orbital_period\": \"304\",\r\n      \"diameter\": \"10465\",\r\n      \"climate\": \"arid\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"desert\",\r\n      \"surface_water\": \"1\",\r\n      \"population\": \"200000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Human\",\r\n        \"classification\": \"mammal\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"180\",\r\n        \"skin_colors\": \"caucasian, black, asian, hispanic\",\r\n        \"hair_colors\": \"blonde, brown, black, red\",\r\n        \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\r\n        \"average_lifespan\": \"120\",\r\n        \"language\": \"Galactic Basic\"\r\n      }\r\n    ],\r\n    \"vehicles\": []\r\n  },\r\n  {\r\n    \"name\": \"R5-D4\",\r\n    \"hair_color\": \"n/a\",\r\n    \"skin_color\": \"white, red\",\r\n    \"eye_color\": \"red\",\r\n    \"birth_year\": \"unknown\",\r\n    \"gender\": \"n/a\",\r\n    \"homeworld\": {\r\n      \"name\": \"Tatooine\",\r\n      \"rotation_period\": \"23\",\r\n      \"orbital_period\": \"304\",\r\n      \"diameter\": \"10465\",\r\n      \"climate\": \"arid\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"desert\",\r\n      \"surface_water\": \"1\",\r\n      \"population\": \"200000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Droid\",\r\n        \"classification\": \"artificial\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"n/a\",\r\n        \"skin_colors\": \"n/a\",\r\n        \"hair_colors\": \"n/a\",\r\n        \"eye_colors\": \"n/a\",\r\n        \"average_lifespan\": \"indefinite\",\r\n        \"homeworld\": null,\r\n      }\r\n    ],\r\n    \"vehicles\": []\r\n  },\r\n  {\r\n    \"name\": \"Biggs Darklighter\",\r\n    \"hair_color\": \"black\",\r\n    \"skin_color\": \"light\",\r\n    \"eye_color\": \"brown\",\r\n    \"birth_year\": \"24BBY\",\r\n    \"gender\": \"male\",\r\n    \"homeworld\": {\r\n      \"name\": \"Tatooine\",\r\n      \"rotation_period\": \"23\",\r\n      \"orbital_period\": \"304\",\r\n      \"diameter\": \"10465\",\r\n      \"climate\": \"arid\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"desert\",\r\n      \"surface_water\": \"1\",\r\n      \"population\": \"200000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Human\",\r\n        \"classification\": \"mammal\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"180\",\r\n        \"skin_colors\": \"caucasian, black, asian, hispanic\",\r\n        \"hair_colors\": \"blonde, brown, black, red\",\r\n        \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\r\n        \"average_lifespan\": \"120\",\r\n        \"language\": \"Galactic Basic\"\r\n      }\r\n    ],\r\n    \"vehicles\": []\r\n  },\r\n  {\r\n    \"name\": \"Obi-Wan Kenobi\",\r\n    \"hair_color\": \"auburn, white\",\r\n    \"skin_color\": \"fair\",\r\n    \"eye_color\": \"blue-gray\",\r\n    \"birth_year\": \"57BBY\",\r\n    \"gender\": \"male\",\r\n    \"homeworld\": {\r\n      \"name\": \"Stewjon\",\r\n      \"rotation_period\": \"unknown\",\r\n      \"orbital_period\": \"unknown\",\r\n      \"diameter\": \"0\",\r\n      \"climate\": \"temperate\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"grass\",\r\n      \"surface_water\": \"unknown\",\r\n      \"population\": \"unknown\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Human\",\r\n        \"classification\": \"mammal\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"180\",\r\n        \"skin_colors\": \"caucasian, black, asian, hispanic\",\r\n        \"hair_colors\": \"blonde, brown, black, red\",\r\n        \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\r\n        \"average_lifespan\": \"120\",\r\n        \"language\": \"Galactic Basic\"\r\n      }\r\n    ],\r\n    \"vehicles\": [\r\n      {\r\n        \"name\": \"Tribubble bongo\",\r\n        \"model\": \"Tribubble bongo\",\r\n        \"manufacturer\": \"Otoh Gunga Bongameken Cooperative\",\r\n        \"cost_in_credits\": \"unknown\",\r\n        \"length\": \"15\",\r\n        \"max_atmosphering_speed\": \"85\",\r\n        \"crew\": \"1\",\r\n        \"passengers\": \"2\",\r\n        \"cargo_capacity\": \"1600\",\r\n        \"consumables\": \"unknown\",\r\n        \"vehicle_class\": \"submarine\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Anakin Skywalker\",\r\n    \"hair_color\": \"blond\",\r\n    \"skin_color\": \"fair\",\r\n    \"eye_color\": \"blue\",\r\n    \"birth_year\": \"41.9BBY\",\r\n    \"gender\": \"male\",\r\n    \"homeworld\": {\r\n      \"name\": \"Tatooine\",\r\n      \"rotation_period\": \"23\",\r\n      \"orbital_period\": \"304\",\r\n      \"diameter\": \"10465\",\r\n      \"climate\": \"arid\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"desert\",\r\n      \"surface_water\": \"1\",\r\n      \"population\": \"200000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Human\",\r\n        \"classification\": \"mammal\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"180\",\r\n        \"skin_colors\": \"caucasian, black, asian, hispanic\",\r\n        \"hair_colors\": \"blonde, brown, black, red\",\r\n        \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\r\n        \"average_lifespan\": \"120\",\r\n        \"language\": \"Galactic Basic\"\r\n      }\r\n    ],\r\n    \"vehicles\": [\r\n      {\r\n        \"name\": \"Zephyr-G swoop bike\",\r\n        \"model\": \"Zephyr-G swoop bike\",\r\n        \"manufacturer\": \"Mobquet Swoops and Speeders\",\r\n        \"cost_in_credits\": \"5750\",\r\n        \"length\": \"3.68\",\r\n        \"max_atmosphering_speed\": \"350\",\r\n        \"crew\": \"1\",\r\n        \"passengers\": \"1\",\r\n        \"cargo_capacity\": \"200\",\r\n        \"consumables\": \"none\",\r\n        \"vehicle_class\": \"repulsorcraft\"\r\n      },\r\n      {\r\n        \"name\": \"XJ-6 airspeeder\",\r\n        \"model\": \"XJ-6 airspeeder\",\r\n        \"manufacturer\": \"Narglatch AirTech prefabricated kit\",\r\n        \"cost_in_credits\": \"unknown\",\r\n        \"length\": \"6.23\",\r\n        \"max_atmosphering_speed\": \"720\",\r\n        \"crew\": \"1\",\r\n        \"passengers\": \"1\",\r\n        \"cargo_capacity\": \"unknown\",\r\n        \"consumables\": \"unknown\",\r\n        \"vehicle_class\": \"airspeeder\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Wilhuff Tarkin\",\r\n    \"hair_color\": \"auburn, grey\",\r\n    \"skin_color\": \"fair\",\r\n    \"eye_color\": \"blue\",\r\n    \"birth_year\": \"64BBY\",\r\n    \"gender\": \"male\",\r\n    \"homeworld\": {\r\n      \"name\": \"Eriadu\",\r\n      \"rotation_period\": \"24\",\r\n      \"orbital_period\": \"360\",\r\n      \"diameter\": \"13490\",\r\n      \"climate\": \"polluted\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"cityscape\",\r\n      \"surface_water\": \"unknown\",\r\n      \"population\": \"22000000000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Human\",\r\n        \"classification\": \"mammal\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"180\",\r\n        \"skin_colors\": \"caucasian, black, asian, hispanic\",\r\n        \"hair_colors\": \"blonde, brown, black, red\",\r\n        \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\r\n        \"average_lifespan\": \"120\",\r\n        \"language\": \"Galactic Basic\"\r\n      }\r\n    ],\r\n    \"vehicles\": []\r\n  },\r\n  {\r\n    \"name\": \"Chewbacca\",\r\n    \"hair_color\": \"brown\",\r\n    \"skin_color\": \"unknown\",\r\n    \"eye_color\": \"blue\",\r\n    \"birth_year\": \"200BBY\",\r\n    \"gender\": \"male\",\r\n    \"homeworld\": {\r\n      \"name\": \"Kashyyyk\",\r\n      \"rotation_period\": \"26\",\r\n      \"orbital_period\": \"381\",\r\n      \"diameter\": \"12765\",\r\n      \"climate\": \"tropical\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"jungle, forests, lakes, rivers\",\r\n      \"surface_water\": \"60\",\r\n      \"population\": \"45000000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Wookiee\",\r\n        \"classification\": \"mammal\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"210\",\r\n        \"skin_colors\": \"gray\",\r\n        \"hair_colors\": \"black, brown\",\r\n        \"eye_colors\": \"blue, green, yellow, brown, golden, red\",\r\n        \"average_lifespan\": \"400\",\r\n        \"language\": \"Shyriiwook\"\r\n      }\r\n    ],\r\n    \"vehicles\": [\r\n      {\r\n        \"name\": \"AT-ST\",\r\n        \"model\": \"All Terrain Scout Transport\",\r\n        \"manufacturer\": \"Kuat Drive Yards, Imperial Department of Military Research\",\r\n        \"cost_in_credits\": \"unknown\",\r\n        \"length\": \"2\",\r\n        \"max_atmosphering_speed\": \"90\",\r\n        \"crew\": \"2\",\r\n        \"passengers\": \"0\",\r\n        \"cargo_capacity\": \"200\",\r\n        \"consumables\": \"none\",\r\n        \"vehicle_class\": \"walker\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Han Solo\",\r\n    \"hair_color\": \"brown\",\r\n    \"skin_color\": \"fair\",\r\n    \"eye_color\": \"brown\",\r\n    \"birth_year\": \"29BBY\",\r\n    \"gender\": \"male\",\r\n    \"homeworld\": {\r\n      \"name\": \"Corellia\",\r\n      \"rotation_period\": \"25\",\r\n      \"orbital_period\": \"329\",\r\n      \"diameter\": \"11000\",\r\n      \"climate\": \"temperate\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"plains, urban, hills, forests\",\r\n      \"surface_water\": \"70\",\r\n      \"population\": \"3000000000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Human\",\r\n        \"classification\": \"mammal\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"180\",\r\n        \"skin_colors\": \"caucasian, black, asian, hispanic\",\r\n        \"hair_colors\": \"blonde, brown, black, red\",\r\n        \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\r\n        \"average_lifespan\": \"120\",\r\n        \"language\": \"Galactic Basic\"\r\n      }\r\n    ],\r\n    \"vehicles\": []\r\n  },\r\n  {\r\n    \"name\": \"Greedo\",\r\n    \"hair_color\": \"n/a\",\r\n    \"skin_color\": \"green\",\r\n    \"eye_color\": \"black\",\r\n    \"birth_year\": \"44BBY\",\r\n    \"gender\": \"male\",\r\n    \"homeworld\": {\r\n      \"name\": \"Rodia\",\r\n      \"rotation_period\": \"29\",\r\n      \"orbital_period\": \"305\",\r\n      \"diameter\": \"7549\",\r\n      \"climate\": \"hot\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"jungles, oceans, urban, swamps\",\r\n      \"surface_water\": \"60\",\r\n      \"population\": \"1300000000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Rodian\",\r\n        \"classification\": \"sentient\",\r\n        \"designation\": \"reptilian\",\r\n        \"average_height\": \"170\",\r\n        \"skin_colors\": \"green, blue\",\r\n        \"hair_colors\": \"n/a\",\r\n        \"eye_colors\": \"black\",\r\n        \"average_lifespan\": \"unknown\",\r\n        \"language\": \"Galactic Basic\"\r\n      }\r\n    ],\r\n    \"vehicles\": []\r\n  },\r\n  {\r\n    \"name\": \"Jabba Desilijic Tiure\",\r\n    \"hair_color\": \"n/a\",\r\n    \"skin_color\": \"green-tan, brown\",\r\n    \"eye_color\": \"orange\",\r\n    \"birth_year\": \"600BBY\",\r\n    \"gender\": \"hermaphrodite\",\r\n    \"homeworld\": {\r\n      \"name\": \"Nal Hutta\",\r\n      \"rotation_period\": \"87\",\r\n      \"orbital_period\": \"413\",\r\n      \"diameter\": \"12150\",\r\n      \"climate\": \"temperate\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"urban, oceans, swamps, bogs\",\r\n      \"surface_water\": \"unknown\",\r\n      \"population\": \"7000000000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Hutt\",\r\n        \"classification\": \"gastropod\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"300\",\r\n        \"skin_colors\": \"green, brown, tan\",\r\n        \"hair_colors\": \"n/a\",\r\n        \"eye_colors\": \"yellow, red\",\r\n        \"average_lifespan\": \"1000\",\r\n        \"language\": \"Huttese\"\r\n      }\r\n    ],\r\n    \"vehicles\": []\r\n  },\r\n  {\r\n    \"name\": \"Wedge Antilles\",\r\n    \"hair_color\": \"brown\",\r\n    \"skin_color\": \"fair\",\r\n    \"eye_color\": \"hazel\",\r\n    \"birth_year\": \"21BBY\",\r\n    \"gender\": \"male\",\r\n    \"homeworld\": {\r\n      \"name\": \"Corellia\",\r\n      \"rotation_period\": \"25\",\r\n      \"orbital_period\": \"329\",\r\n      \"diameter\": \"11000\",\r\n      \"climate\": \"temperate\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"plains, urban, hills, forests\",\r\n      \"surface_water\": \"70\",\r\n      \"population\": \"3000000000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Human\",\r\n        \"classification\": \"mammal\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"180\",\r\n        \"skin_colors\": \"caucasian, black, asian, hispanic\",\r\n        \"hair_colors\": \"blonde, brown, black, red\",\r\n        \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\r\n        \"average_lifespan\": \"120\",\r\n        \"language\": \"Galactic Basic\"\r\n      }\r\n    ],\r\n    \"vehicles\": [\r\n      {\r\n        \"name\": \"Snowspeeder\",\r\n        \"model\": \"t-47 airspeeder\",\r\n        \"manufacturer\": \"Incom corporation\",\r\n        \"cost_in_credits\": \"unknown\",\r\n        \"length\": \"4.5\",\r\n        \"max_atmosphering_speed\": \"650\",\r\n        \"crew\": \"2\",\r\n        \"passengers\": \"0\",\r\n        \"cargo_capacity\": \"10\",\r\n        \"consumables\": \"none\",\r\n        \"vehicle_class\": \"airspeeder\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Jek Tono Porkins\",\r\n    \"hair_color\": \"brown\",\r\n    \"skin_color\": \"fair\",\r\n    \"eye_color\": \"blue\",\r\n    \"birth_year\": \"unknown\",\r\n    \"gender\": \"male\",\r\n    \"homeworld\": {\r\n      \"name\": \"Bestine IV\",\r\n      \"rotation_period\": \"26\",\r\n      \"orbital_period\": \"680\",\r\n      \"diameter\": \"6400\",\r\n      \"climate\": \"temperate\",\r\n      \"gravity\": \"unknown\",\r\n      \"terrain\": \"rocky islands, oceans\",\r\n      \"surface_water\": \"98\",\r\n      \"population\": \"62000000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Human\",\r\n        \"classification\": \"mammal\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"180\",\r\n        \"skin_colors\": \"caucasian, black, asian, hispanic\",\r\n        \"hair_colors\": \"blonde, brown, black, red\",\r\n        \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\r\n        \"average_lifespan\": \"120\",\r\n        \"language\": \"Galactic Basic\"\r\n      }\r\n    ],\r\n    \"vehicles\": []\r\n  },\r\n  {\r\n    \"name\": \"Yoda\",\r\n    \"hair_color\": \"white\",\r\n    \"skin_color\": \"green\",\r\n    \"eye_color\": \"brown\",\r\n    \"birth_year\": \"896BBY\",\r\n    \"gender\": \"male\",\r\n    \"homeworld\": {\r\n      \"name\": \"unknown\",\r\n      \"rotation_period\": \"0\",\r\n      \"orbital_period\": \"0\",\r\n      \"diameter\": \"0\",\r\n      \"climate\": \"unknown\",\r\n      \"gravity\": \"unknown\",\r\n      \"terrain\": \"unknown\",\r\n      \"surface_water\": \"unknown\",\r\n      \"population\": \"unknown\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Yoda's species\",\r\n        \"classification\": \"mammal\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"66\",\r\n        \"skin_colors\": \"green, yellow\",\r\n        \"hair_colors\": \"brown, white\",\r\n        \"eye_colors\": \"brown, green, yellow\",\r\n        \"average_lifespan\": \"900\",\r\n        \"language\": \"Galactic basic\"\r\n      }\r\n    ],\r\n    \"vehicles\": []\r\n  },\r\n  {\r\n    \"name\": \"Palpatine\",\r\n    \"hair_color\": \"grey\",\r\n    \"skin_color\": \"pale\",\r\n    \"eye_color\": \"yellow\",\r\n    \"birth_year\": \"82BBY\",\r\n    \"gender\": \"male\",\r\n    \"homeworld\": {\r\n      \"name\": \"Naboo\",\r\n      \"rotation_period\": \"26\",\r\n      \"orbital_period\": \"312\",\r\n      \"diameter\": \"12120\",\r\n      \"climate\": \"temperate\",\r\n      \"gravity\": \"1 standard\",\r\n      \"terrain\": \"grassy hills, swamps, forests, mountains\",\r\n      \"surface_water\": \"12\",\r\n      \"population\": \"4500000000\"\r\n    },\r\n    \"species\": [\r\n      {\r\n        \"name\": \"Human\",\r\n        \"classification\": \"mammal\",\r\n        \"designation\": \"sentient\",\r\n        \"average_height\": \"180\",\r\n        \"skin_colors\": \"caucasian, black, asian, hispanic\",\r\n        \"hair_colors\": \"blonde, brown, black, red\",\r\n        \"eye_colors\": \"brown, blue, green, hazel, grey, amber\",\r\n        \"average_lifespan\": \"120\",\r\n        \"language\": \"Galactic Basic\"\r\n      }\r\n    ],\r\n    \"vehicles\": []\r\n  }\r\n]\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580060150531
  },
  "{\"sourceRoot\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\",\"filename\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\myApps\\pcm-challenge\\server",
      "filename": "D:\\myApps\\pcm-challenge\\server\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\myApps\\pcm-challenge\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\myApps\\pcm-challenge\\server\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\myApps\\pcm-challenge\\server\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _expressGraphql = _interopRequireDefault(require(\"express-graphql\"));\n\nvar _schema = _interopRequireDefault(require(\"./schema\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar cors = require('cors');\n\nvar app = (0, _express[\"default\"])();\n/*app.get('/', (req, res) => {\r\n  res.json({\r\n    errors:[{\"message\":\"Must provide query string.\"}]\r\n  })\r\n});*/\n\nvar getErrorCode = require('./utils/errors');\n\napp.use(cors());\napp.use('/', (0, _expressGraphql[\"default\"])({\n  graphiql: true,\n  schema: _schema[\"default\"],\n  formatError: function formatError(err) {\n    var error = getErrorCode(err.message);\n    return {\n      message: error.message,\n      statusCode: error.statusCode\n    };\n  }\n}));\napp.listen(4000, function () {\n  return console.log('Server on port 4000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvcnMiLCJyZXF1aXJlIiwiYXBwIiwiZ2V0RXJyb3JDb2RlIiwidXNlIiwiZ3JhcGhpcWwiLCJzY2hlbWEiLCJmb3JtYXRFcnJvciIsImVyciIsImVycm9yIiwibWVzc2FnZSIsInN0YXR1c0NvZGUiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOzs7O0FBQ0EsSUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFFQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVo7QUFFQTs7Ozs7O0FBTUEsSUFBTUMsWUFBWSxHQUFHRixPQUFPLENBQUMsZ0JBQUQsQ0FBNUI7O0FBRUFDLEdBQUcsQ0FBQ0UsR0FBSixDQUFRSixJQUFJLEVBQVo7QUFDQUUsR0FBRyxDQUFDRSxHQUFKLENBQVEsR0FBUixFQUFhLGdDQUFZO0FBQ3ZCQyxFQUFBQSxRQUFRLEVBQUUsSUFEYTtBQUV2QkMsRUFBQUEsTUFBTSxFQUFFQSxrQkFGZTtBQUd2QkMsRUFBQUEsV0FBVyxFQUFFLHFCQUFDQyxHQUFELEVBQVM7QUFDcEIsUUFBTUMsS0FBSyxHQUFHTixZQUFZLENBQUNLLEdBQUcsQ0FBQ0UsT0FBTCxDQUExQjtBQUNBLFdBQVE7QUFBRUEsTUFBQUEsT0FBTyxFQUFFRCxLQUFLLENBQUNDLE9BQWpCO0FBQTBCQyxNQUFBQSxVQUFVLEVBQUVGLEtBQUssQ0FBQ0U7QUFBNUMsS0FBUjtBQUNEO0FBTnNCLENBQVosQ0FBYjtBQVNBVCxHQUFHLENBQUNVLE1BQUosQ0FBVyxJQUFYLEVBQWlCO0FBQUEsU0FBTUMsT0FBTyxDQUFDQyxHQUFSLENBQVkscUJBQVosQ0FBTjtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxteUFwcHNcXHBjbS1jaGFsbGVuZ2VcXHNlcnZlclxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBncmFwaHFsSFRUUCBmcm9tICdleHByZXNzLWdyYXBocWwnO1xyXG5pbXBvcnQgc2NoZW1hIGZyb20gJy4vc2NoZW1hJztcclxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuXHJcbi8qYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xyXG4gIHJlcy5qc29uKHtcclxuICAgIGVycm9yczpbe1wibWVzc2FnZVwiOlwiTXVzdCBwcm92aWRlIHF1ZXJ5IHN0cmluZy5cIn1dXHJcbiAgfSlcclxufSk7Ki9cclxuXHJcbmNvbnN0IGdldEVycm9yQ29kZSA9IHJlcXVpcmUoJy4vdXRpbHMvZXJyb3JzJylcclxuXHJcbmFwcC51c2UoY29ycygpKTtcclxuYXBwLnVzZSgnLycsIGdyYXBocWxIVFRQKHtcclxuICBncmFwaGlxbDogdHJ1ZSxcclxuICBzY2hlbWE6IHNjaGVtYSxcclxuICBmb3JtYXRFcnJvcjogKGVycikgPT4ge1xyXG4gICAgY29uc3QgZXJyb3IgPSBnZXRFcnJvckNvZGUoZXJyLm1lc3NhZ2UpXHJcbiAgICByZXR1cm4gKHsgbWVzc2FnZTogZXJyb3IubWVzc2FnZSwgc3RhdHVzQ29kZTogZXJyb3Iuc3RhdHVzQ29kZSB9KVxyXG4gIH1cclxufSkpO1xyXG5cclxuYXBwLmxpc3Rlbig0MDAwLCAoKSA9PiBjb25zb2xlLmxvZygnU2VydmVyIG9uIHBvcnQgNDAwMCcpKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "cors",
        "require",
        "app",
        "getErrorCode",
        "use",
        "graphiql",
        "schema",
        "formatError",
        "err",
        "error",
        "message",
        "statusCode",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AACA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AAEA;;;;;;AAMA,IAAMC,YAAY,GAAGF,OAAO,CAAC,gBAAD,CAA5B;;AAEAC,GAAG,CAACE,GAAJ,CAAQJ,IAAI,EAAZ;AACAE,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAa,gCAAY;AACvBC,EAAAA,QAAQ,EAAE,IADa;AAEvBC,EAAAA,MAAM,EAAEA,kBAFe;AAGvBC,EAAAA,WAAW,EAAE,qBAACC,GAAD,EAAS;AACpB,QAAMC,KAAK,GAAGN,YAAY,CAACK,GAAG,CAACE,OAAL,CAA1B;AACA,WAAQ;AAAEA,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAjB;AAA0BC,MAAAA,UAAU,EAAEF,KAAK,CAACE;AAA5C,KAAR;AACD;AANsB,CAAZ,CAAb;AASAT,GAAG,CAACU,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAN;AAAA,CAAjB",
      "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src",
      "sourcesContent": [
        "import express from 'express';\r\nimport graphqlHTTP from 'express-graphql';\r\nimport schema from './schema';\r\nconst cors = require('cors');\r\n\r\nconst app = express();\r\n\r\n/*app.get('/', (req, res) => {\r\n  res.json({\r\n    errors:[{\"message\":\"Must provide query string.\"}]\r\n  })\r\n});*/\r\n\r\nconst getErrorCode = require('./utils/errors')\r\n\r\napp.use(cors());\r\napp.use('/', graphqlHTTP({\r\n  graphiql: true,\r\n  schema: schema,\r\n  formatError: (err) => {\r\n    const error = getErrorCode(err.message)\r\n    return ({ message: error.message, statusCode: error.statusCode })\r\n  }\r\n}));\r\n\r\napp.listen(4000, () => console.log('Server on port 4000'));\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582312384783
  },
  "{\"sourceRoot\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\",\"filename\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\\\\src\\\\schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\myApps\\pcm-challenge\\server",
      "filename": "D:\\myApps\\pcm-challenge\\server\\src\\schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\myApps\\pcm-challenge\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\myApps\\pcm-challenge\\server\\src\\schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\myApps\\pcm-challenge\\server\\src\\schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _graphqlTools = require(\"graphql-tools\");\n\nvar _resolvers = require(\"./resolvers\");\n\nvar typeDefs = \"\\n  scalar DateTime\\n  type Query {\\n    platos: [Plato]\\n    pedidos: [Pedido]\\n    plato(PlaIde: Int!): Plato\\n    platosPorCategoria(PlaFec: DateTime!, PlaCat: String!): [Plato]\\n    PedidosPorEstado(PedFec: DateTime!, PedEst: String!): [Pedido]\\n    pedido(PedIde: Int!): Pedido\\n    menuDiario(PlaFec: DateTime!): [Plato]\\n  }\\n\\n  type Plato {\\n    PlaIde: ID!\\n    PlaNom: String\\n    PlaDes: String\\n    PlaFec: DateTime\\n    PlaCat: String\\n  }\\n\\n  type Pedido {\\n    PedIde: ID!\\n    PedPlaEnt: Plato\\n    PedEnt: Int\\n    PedPlaFon: Plato\\n    PedFon: Int\\n    PedPlaRef: Plato\\n    PedRef: Int\\n    PedFec: DateTime\\n    PedEst: String\\n  }\\n\\n  input PlatoEntrada {\\n    PlaNom: String\\n    PlaDes: String\\n    PlaFec: DateTime\\n    PlaCat: String\\n  }\\n\\n  input PedidoEntrada {\\n    PedEnt: Int\\n    PedFon: Int\\n    PedRef: Int\\n    PedFec: DateTime\\n    PedEst: String\\n  }\\n\\n  type Mutation {\\n    agregarPlato(PlaNom: String!, PlaDes: String, PlaFec: DateTime!, PlaCat: String!): Plato\\n    agregarPedido(PedEnt: Int!, PedFon: Int!, PedRef: Int!, PedFec: DateTime!, PedEst: String!): Pedido\\n    actualizarPlato(PlaIde: ID!, input: PlatoEntrada): Plato\\n    actualizarPedido(PedIde: ID!, input: PedidoEntrada): Pedido\\n  }\\n\";\n\nvar _default = (0, _graphqlTools.makeExecutableSchema)({\n  typeDefs: typeDefs,\n  resolvers: _resolvers.resolvers\n});\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJ0eXBlRGVmcyIsInJlc29sdmVycyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBLElBQU1BLFFBQVEsa3VDQUFkOztlQXVEZSx3Q0FBcUI7QUFDbENBLEVBQUFBLFFBQVEsRUFBRUEsUUFEd0I7QUFFbENDLEVBQUFBLFNBQVMsRUFBRUE7QUFGdUIsQ0FBckIsQyIsInNvdXJjZVJvb3QiOiJEOlxcbXlBcHBzXFxwY20tY2hhbGxlbmdlXFxzZXJ2ZXJcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1ha2VFeGVjdXRhYmxlU2NoZW1hIH0gZnJvbSAnZ3JhcGhxbC10b29scyc7XHJcbmltcG9ydCB7IHJlc29sdmVycyB9IGZyb20gJy4vcmVzb2x2ZXJzJztcclxuXHJcbmNvbnN0IHR5cGVEZWZzID0gYFxyXG4gIHNjYWxhciBEYXRlVGltZVxyXG4gIHR5cGUgUXVlcnkge1xyXG4gICAgcGxhdG9zOiBbUGxhdG9dXHJcbiAgICBwZWRpZG9zOiBbUGVkaWRvXVxyXG4gICAgcGxhdG8oUGxhSWRlOiBJbnQhKTogUGxhdG9cclxuICAgIHBsYXRvc1BvckNhdGVnb3JpYShQbGFGZWM6IERhdGVUaW1lISwgUGxhQ2F0OiBTdHJpbmchKTogW1BsYXRvXVxyXG4gICAgUGVkaWRvc1BvckVzdGFkbyhQZWRGZWM6IERhdGVUaW1lISwgUGVkRXN0OiBTdHJpbmchKTogW1BlZGlkb11cclxuICAgIHBlZGlkbyhQZWRJZGU6IEludCEpOiBQZWRpZG9cclxuICAgIG1lbnVEaWFyaW8oUGxhRmVjOiBEYXRlVGltZSEpOiBbUGxhdG9dXHJcbiAgfVxyXG5cclxuICB0eXBlIFBsYXRvIHtcclxuICAgIFBsYUlkZTogSUQhXHJcbiAgICBQbGFOb206IFN0cmluZ1xyXG4gICAgUGxhRGVzOiBTdHJpbmdcclxuICAgIFBsYUZlYzogRGF0ZVRpbWVcclxuICAgIFBsYUNhdDogU3RyaW5nXHJcbiAgfVxyXG5cclxuICB0eXBlIFBlZGlkbyB7XHJcbiAgICBQZWRJZGU6IElEIVxyXG4gICAgUGVkUGxhRW50OiBQbGF0b1xyXG4gICAgUGVkRW50OiBJbnRcclxuICAgIFBlZFBsYUZvbjogUGxhdG9cclxuICAgIFBlZEZvbjogSW50XHJcbiAgICBQZWRQbGFSZWY6IFBsYXRvXHJcbiAgICBQZWRSZWY6IEludFxyXG4gICAgUGVkRmVjOiBEYXRlVGltZVxyXG4gICAgUGVkRXN0OiBTdHJpbmdcclxuICB9XHJcblxyXG4gIGlucHV0IFBsYXRvRW50cmFkYSB7XHJcbiAgICBQbGFOb206IFN0cmluZ1xyXG4gICAgUGxhRGVzOiBTdHJpbmdcclxuICAgIFBsYUZlYzogRGF0ZVRpbWVcclxuICAgIFBsYUNhdDogU3RyaW5nXHJcbiAgfVxyXG5cclxuICBpbnB1dCBQZWRpZG9FbnRyYWRhIHtcclxuICAgIFBlZEVudDogSW50XHJcbiAgICBQZWRGb246IEludFxyXG4gICAgUGVkUmVmOiBJbnRcclxuICAgIFBlZEZlYzogRGF0ZVRpbWVcclxuICAgIFBlZEVzdDogU3RyaW5nXHJcbiAgfVxyXG5cclxuICB0eXBlIE11dGF0aW9uIHtcclxuICAgIGFncmVnYXJQbGF0byhQbGFOb206IFN0cmluZyEsIFBsYURlczogU3RyaW5nLCBQbGFGZWM6IERhdGVUaW1lISwgUGxhQ2F0OiBTdHJpbmchKTogUGxhdG9cclxuICAgIGFncmVnYXJQZWRpZG8oUGVkRW50OiBJbnQhLCBQZWRGb246IEludCEsIFBlZFJlZjogSW50ISwgUGVkRmVjOiBEYXRlVGltZSEsIFBlZEVzdDogU3RyaW5nISk6IFBlZGlkb1xyXG4gICAgYWN0dWFsaXphclBsYXRvKFBsYUlkZTogSUQhLCBpbnB1dDogUGxhdG9FbnRyYWRhKTogUGxhdG9cclxuICAgIGFjdHVhbGl6YXJQZWRpZG8oUGVkSWRlOiBJRCEsIGlucHV0OiBQZWRpZG9FbnRyYWRhKTogUGVkaWRvXHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbWFrZUV4ZWN1dGFibGVTY2hlbWEoe1xyXG4gIHR5cGVEZWZzOiB0eXBlRGVmcyxcclxuICByZXNvbHZlcnM6IHJlc29sdmVyc1xyXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "typeDefs",
        "resolvers"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,QAAQ,kuCAAd;;eAuDe,wCAAqB;AAClCA,EAAAA,QAAQ,EAAEA,QADwB;AAElCC,EAAAA,SAAS,EAAEA;AAFuB,CAArB,C",
      "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src",
      "sourcesContent": [
        "import { makeExecutableSchema } from 'graphql-tools';\r\nimport { resolvers } from './resolvers';\r\n\r\nconst typeDefs = `\r\n  scalar DateTime\r\n  type Query {\r\n    platos: [Plato]\r\n    pedidos: [Pedido]\r\n    plato(PlaIde: Int!): Plato\r\n    platosPorCategoria(PlaFec: DateTime!, PlaCat: String!): [Plato]\r\n    PedidosPorEstado(PedFec: DateTime!, PedEst: String!): [Pedido]\r\n    pedido(PedIde: Int!): Pedido\r\n    menuDiario(PlaFec: DateTime!): [Plato]\r\n  }\r\n\r\n  type Plato {\r\n    PlaIde: ID!\r\n    PlaNom: String\r\n    PlaDes: String\r\n    PlaFec: DateTime\r\n    PlaCat: String\r\n  }\r\n\r\n  type Pedido {\r\n    PedIde: ID!\r\n    PedPlaEnt: Plato\r\n    PedEnt: Int\r\n    PedPlaFon: Plato\r\n    PedFon: Int\r\n    PedPlaRef: Plato\r\n    PedRef: Int\r\n    PedFec: DateTime\r\n    PedEst: String\r\n  }\r\n\r\n  input PlatoEntrada {\r\n    PlaNom: String\r\n    PlaDes: String\r\n    PlaFec: DateTime\r\n    PlaCat: String\r\n  }\r\n\r\n  input PedidoEntrada {\r\n    PedEnt: Int\r\n    PedFon: Int\r\n    PedRef: Int\r\n    PedFec: DateTime\r\n    PedEst: String\r\n  }\r\n\r\n  type Mutation {\r\n    agregarPlato(PlaNom: String!, PlaDes: String, PlaFec: DateTime!, PlaCat: String!): Plato\r\n    agregarPedido(PedEnt: Int!, PedFon: Int!, PedRef: Int!, PedFec: DateTime!, PedEst: String!): Pedido\r\n    actualizarPlato(PlaIde: ID!, input: PlatoEntrada): Plato\r\n    actualizarPedido(PedIde: ID!, input: PedidoEntrada): Pedido\r\n  }\r\n`;\r\n\r\nexport default makeExecutableSchema({\r\n  typeDefs: typeDefs,\r\n  resolvers: resolvers\r\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1582142622672
  },
  "{\"sourceRoot\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\",\"filename\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\\\\src\\\\resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\myApps\\pcm-challenge\\server",
      "filename": "D:\\myApps\\pcm-challenge\\server\\src\\resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\myApps\\pcm-challenge\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\myApps\\pcm-challenge\\server\\src\\resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\myApps\\pcm-challenge\\server\\src\\resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolvers = void 0;\n\nvar _plato = require(\"./models/plato\");\n\nvar _pedido = require(\"./models/pedido\");\n\nvar _lodash = require(\"lodash\");\n\nvar _graphqlTypeDatetime = _interopRequireDefault(require(\"graphql-type-datetime\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar resolvers = {\n  DateTime: _graphqlTypeDatetime[\"default\"],\n  Query: {\n    platos: function platos() {\n      return _plato.platos;\n    },\n    pedidos: function pedidos() {\n      return _pedido.pedidos;\n    },\n\n    /*plato(obj, args, context, info) {\r\n      return find(platos, { PlaIde: args.PlaIde });\r\n    },*/\n    plato: function plato(_, _ref) {\n      var PlaIde = _ref.PlaIde;\n      return (0, _lodash.find)(_plato.platos, {\n        PlaIde: PlaIde\n      });\n    },\n    platosPorCategoria: function platosPorCategoria(_, _ref2) {\n      var PlaFec = _ref2.PlaFec,\n          PlaCat = _ref2.PlaCat;\n      return (0, _lodash.filter)(_plato.platos, {\n        PlaFec: PlaFec,\n        PlaCat: PlaCat\n      });\n    },\n    PedidosPorEstado: function PedidosPorEstado(_, _ref3) {\n      var PedFec = _ref3.PedFec,\n          PedEst = _ref3.PedEst;\n      return (0, _lodash.filter)(_pedido.pedidos, {\n        PedFec: PedFec,\n        PedEst: PedEst\n      });\n    },\n    pedido: function pedido(_, _ref4) {\n      var PedIde = _ref4.PedIde;\n      return (0, _lodash.find)(_pedido.pedidos, {\n        PedIde: PedIde\n      });\n    },\n    menuDiario: function menuDiario(_, _ref5) {\n      var PlaFec = _ref5.PlaFec;\n      return (0, _lodash.filter)(_plato.platos, {\n        PlaFec: PlaFec\n      });\n    }\n  },\n\n  /*Pedido: {\r\n    PedPlaEnt(pedido) {\r\n      return find(platos, { PlaIde: pedido.PedEnt }); ;\r\n    }\r\n  },*/\n  Pedido: {\n    PedPlaEnt: function PedPlaEnt(pedido) {\n      return (0, _lodash.find)(_plato.platos, {\n        PlaIde: pedido.PedEnt\n      });\n    },\n    PedPlaFon: function PedPlaFon(pedido) {\n      return (0, _lodash.find)(_plato.platos, {\n        PlaIde: pedido.PedFon\n      });\n    },\n    PedPlaRef: function PedPlaRef(pedido) {\n      return (0, _lodash.find)(_plato.platos, {\n        PlaIde: pedido.PedRef\n      });\n    }\n  },\n  Mutation: {\n    agregarPlato: function agregarPlato(root, args) {\n      var nuevoPlato = {\n        PlaIde: _plato.platos.length,\n        PlaNom: args.PlaNom,\n        PlaDes: args.PlaDes,\n        PlaFec: args.PlaFec,\n        PlaCat: args.PlaCat\n      };\n\n      if ((0, _lodash.filter)(_plato.platos, {\n        PlaFec: args.PlaFec,\n        PlaCat: \"E\"\n      }).length > 1) {\n        throw new Error('MAXENTRADAS');\n      }\n\n      if ((0, _lodash.filter)(_plato.platos, {\n        PlaFec: args.PlaFec,\n        PlaCat: \"P\"\n      }).length > 1) {\n        throw new Error('MAXPFONDO');\n      }\n\n      if ((0, _lodash.filter)(_plato.platos, {\n        PlaFec: args.PlaFec,\n        PlaCat: \"R\"\n      }).length > 0) {\n        throw new Error('MAXREFRESCO');\n      }\n\n      _plato.platos.push(nuevoPlato);\n\n      return nuevoPlato;\n    },\n    actualizarPlato: function actualizarPlato(_, _ref6) {\n      var PlaIde = _ref6.PlaIde,\n          input = _ref6.input;\n\n      if (!_plato.platos[Number(PlaIde) - 1]) {\n        throw new Error('Plato no encontrado con identificador ' + PlaIde);\n      }\n\n      var plato = (0, _lodash.find)(_plato.platos, {\n        PlaIde: Number(PlaIde)\n      });\n      plato.PlaNom = input.PlaNom;\n      plato.PlaDes = input.PlaDes;\n      plato.PlaFec = input.PlaFec;\n      plato.PlaCat = input.PlaCat;\n      _plato.platos[Number(PlaIde)] = plato;\n      return plato;\n    },\n    agregarPedido: function agregarPedido(root, args) {\n      var nuevoPedido = {\n        PedIde: _pedido.pedidos.length,\n        PedEnt: args.PedEnt,\n        PedFon: args.PedFon,\n        PedRef: args.PedRef,\n        PedFec: args.PedFec,\n        PedEst: args.PedEst\n      };\n\n      _pedido.pedidos.push(nuevoPedido);\n\n      return nuevoPedido;\n    },\n    actualizarPedido: function actualizarPedido(_, _ref7) {\n      var PedIde = _ref7.PedIde,\n          input = _ref7.input;\n\n      if (!_pedido.pedidos[Number(PedIde) - 1]) {\n        throw new Error('Pedido no encontrado con identificador ' + PedIde);\n      }\n\n      var pedido = (0, _lodash.find)(_pedido.pedidos, {\n        PedIde: Number(PedIde)\n      });\n      pedido.PedEnt = input.PedEnt;\n      pedido.PedFon = input.PedFon;\n      pedido.PedRef = input.PedRef;\n      pedido.PedFec = input.PedFec;\n      pedido.PedEst = input.PedEst;\n      _pedido.pedidos[Number(PedIde)] = pedido;\n      return pedido;\n    }\n  }\n};\nexports.resolvers = resolvers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "resolvers",
        "DateTime",
        "GraphQLDateTime",
        "Query",
        "platos",
        "pedidos",
        "plato",
        "_",
        "PlaIde",
        "platosPorCategoria",
        "PlaFec",
        "PlaCat",
        "PedidosPorEstado",
        "PedFec",
        "PedEst",
        "pedido",
        "PedIde",
        "menuDiario",
        "Pedido",
        "PedPlaEnt",
        "PedEnt",
        "PedPlaFon",
        "PedFon",
        "PedPlaRef",
        "PedRef",
        "Mutation",
        "agregarPlato",
        "root",
        "args",
        "nuevoPlato",
        "length",
        "PlaNom",
        "PlaDes",
        "Error",
        "push",
        "actualizarPlato",
        "input",
        "Number",
        "agregarPedido",
        "nuevoPedido",
        "actualizarPedido"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEO,IAAMA,SAAS,GAAG;AACvBC,EAAAA,QAAQ,EAAEC,+BADa;AAEvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAA,aAAMA,aAAN;AAAA,KADH;AAELC,IAAAA,OAAO,EAAE;AAAA,aAAMA,eAAN;AAAA,KAFJ;;AAGL;;;AAGAC,IAAAA,KAAK,EAAE,eAACC,CAAD;AAAA,UAAMC,MAAN,QAAMA,MAAN;AAAA,aAAmB,kBAAKJ,aAAL,EAAa;AAAEI,QAAAA,MAAM,EAANA;AAAF,OAAb,CAAnB;AAAA,KANF;AAOLC,IAAAA,kBAAkB,EAAE,4BAACF,CAAD;AAAA,UAAMG,MAAN,SAAMA,MAAN;AAAA,UAAcC,MAAd,SAAcA,MAAd;AAAA,aAA2B,oBAAOP,aAAP,EAAe;AAAEM,QAAAA,MAAM,EAANA,MAAF;AAAUC,QAAAA,MAAM,EAANA;AAAV,OAAf,CAA3B;AAAA,KAPf;AAQLC,IAAAA,gBAAgB,EAAE,0BAACL,CAAD;AAAA,UAAMM,MAAN,SAAMA,MAAN;AAAA,UAAcC,MAAd,SAAcA,MAAd;AAAA,aAA2B,oBAAOT,eAAP,EAAgB;AAAEQ,QAAAA,MAAM,EAANA,MAAF;AAAUC,QAAAA,MAAM,EAANA;AAAV,OAAhB,CAA3B;AAAA,KARb;AASLC,IAAAA,MAAM,EAAE,gBAACR,CAAD;AAAA,UAAMS,MAAN,SAAMA,MAAN;AAAA,aAAmB,kBAAKX,eAAL,EAAc;AAAEW,QAAAA,MAAM,EAANA;AAAF,OAAd,CAAnB;AAAA,KATH;AAULC,IAAAA,UAAU,EAAE,oBAACV,CAAD;AAAA,UAAMG,MAAN,SAAMA,MAAN;AAAA,aAAmB,oBAAON,aAAP,EAAe;AAAEM,QAAAA,MAAM,EAANA;AAAF,OAAf,CAAnB;AAAA;AAVP,GAFgB;;AAcvB;;;;;AAKAQ,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,mBAAAJ,MAAM;AAAA,aAAI,kBAAKX,aAAL,EAAa;AAAEI,QAAAA,MAAM,EAAEO,MAAM,CAACK;AAAjB,OAAb,CAAJ;AAAA,KADX;AAENC,IAAAA,SAAS,EAAE,mBAAAN,MAAM;AAAA,aAAI,kBAAKX,aAAL,EAAa;AAAEI,QAAAA,MAAM,EAAEO,MAAM,CAACO;AAAjB,OAAb,CAAJ;AAAA,KAFX;AAGNC,IAAAA,SAAS,EAAE,mBAAAR,MAAM;AAAA,aAAI,kBAAKX,aAAL,EAAa;AAAEI,QAAAA,MAAM,EAAEO,MAAM,CAACS;AAAjB,OAAb,CAAJ;AAAA;AAHX,GAnBe;AAwBvBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,sBAACC,IAAD,EAAOC,IAAP,EAAgB;AAC5B,UAAMC,UAAU,GAAG;AAAErB,QAAAA,MAAM,EAAEJ,cAAO0B,MAAjB;AAAyBC,QAAAA,MAAM,EAAEH,IAAI,CAACG,MAAtC;AAA8CC,QAAAA,MAAM,EAAEJ,IAAI,CAACI,MAA3D;AAAmEtB,QAAAA,MAAM,EAAEkB,IAAI,CAAClB,MAAhF;AAAwFC,QAAAA,MAAM,EAAEiB,IAAI,CAACjB;AAArG,OAAnB;;AAEA,UAAI,oBAAOP,aAAP,EAAe;AAAEM,QAAAA,MAAM,EAAEkB,IAAI,CAAClB,MAAf;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAf,EAAqDmB,MAArD,GAA8D,CAAlE,EAAqE;AACnE,cAAM,IAAIG,KAAJ,CAAU,aAAV,CAAN;AACD;;AAED,UAAI,oBAAO7B,aAAP,EAAe;AAAEM,QAAAA,MAAM,EAAEkB,IAAI,CAAClB,MAAf;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAf,EAAqDmB,MAArD,GAA8D,CAAlE,EAAqE;AACnE,cAAM,IAAIG,KAAJ,CAAU,WAAV,CAAN;AACD;;AAED,UAAI,oBAAO7B,aAAP,EAAe;AAAEM,QAAAA,MAAM,EAAEkB,IAAI,CAAClB,MAAf;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAf,EAAqDmB,MAArD,GAA8D,CAAlE,EAAqE;AACnE,cAAM,IAAIG,KAAJ,CAAU,aAAV,CAAN;AACD;;AAED7B,oBAAO8B,IAAP,CAAYL,UAAZ;;AACA,aAAOA,UAAP;AACD,KAlBO;AAmBRM,IAAAA,eAAe,EAAE,yBAAC5B,CAAD,SAA0B;AAAA,UAApBC,MAAoB,SAApBA,MAAoB;AAAA,UAAZ4B,KAAY,SAAZA,KAAY;;AACzC,UAAG,CAAChC,cAAOiC,MAAM,CAAC7B,MAAD,CAAN,GAAe,CAAtB,CAAJ,EAA6B;AAC3B,cAAM,IAAIyB,KAAJ,CAAU,2CAA2CzB,MAArD,CAAN;AACD;;AACD,UAAMF,KAAK,GAAG,kBAAKF,aAAL,EAAa;AAAEI,QAAAA,MAAM,EAAE6B,MAAM,CAAC7B,MAAD;AAAhB,OAAb,CAAd;AAEAF,MAAAA,KAAK,CAACyB,MAAN,GAAeK,KAAK,CAACL,MAArB;AACAzB,MAAAA,KAAK,CAAC0B,MAAN,GAAeI,KAAK,CAACJ,MAArB;AACA1B,MAAAA,KAAK,CAACI,MAAN,GAAe0B,KAAK,CAAC1B,MAArB;AACAJ,MAAAA,KAAK,CAACK,MAAN,GAAeyB,KAAK,CAACzB,MAArB;AAEAP,oBAAOiC,MAAM,CAAC7B,MAAD,CAAb,IAAyBF,KAAzB;AAEA,aAAOA,KAAP;AACD,KAjCO;AAkCRgC,IAAAA,aAAa,EAAE,uBAACX,IAAD,EAAOC,IAAP,EAAgB;AAC7B,UAAMW,WAAW,GAAG;AAAEvB,QAAAA,MAAM,EAAEX,gBAAQyB,MAAlB;AAA0BV,QAAAA,MAAM,EAAEQ,IAAI,CAACR,MAAvC;AAA+CE,QAAAA,MAAM,EAAEM,IAAI,CAACN,MAA5D;AAAoEE,QAAAA,MAAM,EAAEI,IAAI,CAACJ,MAAjF;AAAyFX,QAAAA,MAAM,EAAEe,IAAI,CAACf,MAAtG;AAA8GC,QAAAA,MAAM,EAAEc,IAAI,CAACd;AAA3H,OAApB;;AACAT,sBAAQ6B,IAAR,CAAaK,WAAb;;AACA,aAAOA,WAAP;AACD,KAtCO;AAuCRC,IAAAA,gBAAgB,EAAE,0BAACjC,CAAD,SAA0B;AAAA,UAApBS,MAAoB,SAApBA,MAAoB;AAAA,UAAZoB,KAAY,SAAZA,KAAY;;AAC1C,UAAG,CAAC/B,gBAAQgC,MAAM,CAACrB,MAAD,CAAN,GAAe,CAAvB,CAAJ,EAA8B;AAC5B,cAAM,IAAIiB,KAAJ,CAAU,4CAA4CjB,MAAtD,CAAN;AACD;;AACD,UAAMD,MAAM,GAAG,kBAAKV,eAAL,EAAc;AAAEW,QAAAA,MAAM,EAAEqB,MAAM,CAACrB,MAAD;AAAhB,OAAd,CAAf;AAEAD,MAAAA,MAAM,CAACK,MAAP,GAAgBgB,KAAK,CAAChB,MAAtB;AACAL,MAAAA,MAAM,CAACO,MAAP,GAAgBc,KAAK,CAACd,MAAtB;AACAP,MAAAA,MAAM,CAACS,MAAP,GAAgBY,KAAK,CAACZ,MAAtB;AACAT,MAAAA,MAAM,CAACF,MAAP,GAAgBuB,KAAK,CAACvB,MAAtB;AACAE,MAAAA,MAAM,CAACD,MAAP,GAAgBsB,KAAK,CAACtB,MAAtB;AAEAT,sBAAQgC,MAAM,CAACrB,MAAD,CAAd,IAA0BD,MAA1B;AAEA,aAAOA,MAAP;AACD;AAtDO;AAxBa,CAAlB",
      "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src",
      "sourcesContent": [
        "import { platos } from './models/plato';\r\nimport { pedidos } from './models/pedido';\r\nimport { find, filter } from 'lodash';\r\nimport GraphQLDateTime from 'graphql-type-datetime';\r\n\r\nexport const resolvers = {\r\n  DateTime: GraphQLDateTime,\r\n  Query: {\r\n    platos: () => platos,\r\n    pedidos: () => pedidos,\r\n    /*plato(obj, args, context, info) {\r\n      return find(platos, { PlaIde: args.PlaIde });\r\n    },*/\r\n    plato: (_, { PlaIde }) => find(platos, { PlaIde }),\r\n    platosPorCategoria: (_, { PlaFec, PlaCat }) => filter(platos, { PlaFec, PlaCat }),\r\n    PedidosPorEstado: (_, { PedFec, PedEst }) => filter(pedidos, { PedFec, PedEst }),\r\n    pedido: (_, { PedIde }) => find(pedidos, { PedIde }),\r\n    menuDiario: (_, { PlaFec }) => filter(platos, { PlaFec })\r\n  },\r\n  /*Pedido: {\r\n    PedPlaEnt(pedido) {\r\n      return find(platos, { PlaIde: pedido.PedEnt }); ;\r\n    }\r\n  },*/\r\n  Pedido: {\r\n    PedPlaEnt: pedido => find(platos, { PlaIde: pedido.PedEnt }),\r\n    PedPlaFon: pedido => find(platos, { PlaIde: pedido.PedFon }),\r\n    PedPlaRef: pedido => find(platos, { PlaIde: pedido.PedRef }),\r\n  },\r\n  Mutation: {\r\n    agregarPlato: (root, args) => {\r\n      const nuevoPlato = { PlaIde: platos.length, PlaNom: args.PlaNom, PlaDes: args.PlaDes, PlaFec: args.PlaFec, PlaCat: args.PlaCat };\r\n\r\n      if (filter(platos, { PlaFec: args.PlaFec, PlaCat: \"E\" }).length > 1) {\r\n        throw new Error('MAXENTRADAS');\r\n      }\r\n\r\n      if (filter(platos, { PlaFec: args.PlaFec, PlaCat: \"P\" }).length > 1) {\r\n        throw new Error('MAXPFONDO');\r\n      }\r\n\r\n      if (filter(platos, { PlaFec: args.PlaFec, PlaCat: \"R\" }).length > 0) {\r\n        throw new Error('MAXREFRESCO');\r\n      }\r\n\r\n      platos.push(nuevoPlato);\r\n      return nuevoPlato;\r\n    },\r\n    actualizarPlato: (_, { PlaIde, input }) => {\r\n      if(!platos[Number(PlaIde)-1]){\r\n        throw new Error('Plato no encontrado con identificador ' + PlaIde);\r\n      }\r\n      const plato = find(platos, { PlaIde: Number(PlaIde) });\r\n      \r\n      plato.PlaNom = input.PlaNom;\r\n      plato.PlaDes = input.PlaDes;\r\n      plato.PlaFec = input.PlaFec;\r\n      plato.PlaCat = input.PlaCat;\r\n\r\n      platos[Number(PlaIde)] = plato\r\n  \r\n      return plato;\r\n    },\r\n    agregarPedido: (root, args) => {\r\n      const nuevoPedido = { PedIde: pedidos.length, PedEnt: args.PedEnt, PedFon: args.PedFon, PedRef: args.PedRef, PedFec: args.PedFec, PedEst: args.PedEst };\r\n      pedidos.push(nuevoPedido);\r\n      return nuevoPedido; \r\n    },\r\n    actualizarPedido: (_, { PedIde, input }) => {\r\n      if(!pedidos[Number(PedIde)-1]){\r\n        throw new Error('Pedido no encontrado con identificador ' + PedIde);\r\n      }\r\n      const pedido = find(pedidos, { PedIde: Number(PedIde) });\r\n      \r\n      pedido.PedEnt = input.PedEnt;\r\n      pedido.PedFon = input.PedFon;\r\n      pedido.PedRef = input.PedRef;\r\n      pedido.PedFec = input.PedFec;\r\n      pedido.PedEst = input.PedEst;\r\n\r\n      pedidos[Number(PedIde)] = pedido\r\n  \r\n      return pedido;\r\n    }\r\n  }\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582313178477
  },
  "{\"sourceRoot\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\",\"filename\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\\\\src\\\\models\\\\plato.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\myApps\\pcm-challenge\\server",
      "filename": "D:\\myApps\\pcm-challenge\\server\\src\\models\\plato.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\myApps\\pcm-challenge\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\myApps\\pcm-challenge\\server\\src\\models\\plato.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\myApps\\pcm-challenge\\server\\src\\models\\plato.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src\\models",
        "sourceFileName": "plato.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.platos = void 0;\nvar platos = [{\n  \"PlaIde\": 0,\n  \"PlaNom\": \"Ensalada cuatro estaciones\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 1,\n  \"PlaNom\": \"Arroz a la cubana\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 2,\n  \"PlaNom\": \"Lomo de merluza a la romana con guarnición\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 3,\n  \"PlaNom\": \"Pechuga de pollo a la plancha con verduras\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 4,\n  \"PlaNom\": \"Café/Infusión\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\n  \"PlaCat\": \"R\"\n}, {\n  \"PlaIde\": 5,\n  \"PlaNom\": \"ECrema de setas con croutons\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 6,\n  \"PlaNom\": \"Guiso de garbanzos y espinacas\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 7,\n  \"PlaNom\": \"Filete de ternera a la plancha con judías verdes y rodaja de tomate\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 8,\n  \"PlaNom\": \"Lomo de merluza a la romana con guarnición\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 9,\n  \"PlaNom\": \"Zumo de naranja\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\n  \"PlaCat\": \"R\"\n}, {\n  \"PlaIde\": 10,\n  \"PlaNom\": \"Arroz a la cubana\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 11,\n  \"PlaNom\": \"Nachos con chili con carne, queso cheddar y crema agria\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 12,\n  \"PlaNom\": \"Pollo asado con patatas panaderas al horno\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 13,\n  \"PlaNom\": \"Pechuga de pollo a la plancha con verduras\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 14,\n  \"PlaNom\": \"ruta de temporada\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\n  \"PlaCat\": \"R\"\n}, {\n  \"PlaIde\": 15,\n  \"PlaNom\": \"Ensalada cuatro estaciones\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 16,\n  \"PlaNom\": \"Ensalada de pasta, lechugas, tomate y queso de cabra\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 17,\n  \"PlaNom\": \"Burrito Pulled Pork BBQ\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 18,\n  \"PlaNom\": \"Hamburguesa del día\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 19,\n  \"PlaNom\": \"Vasito de brownie\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\n  \"PlaCat\": \"R\"\n}];\nexports.platos = platos;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsYXRvLmpzIl0sIm5hbWVzIjpbInBsYXRvcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsTUFBTSxHQUFHLENBQ3BCO0FBQ0UsWUFBVSxDQURaO0FBRUUsWUFBVSw0QkFGWjtBQUdFLFlBQVUsRUFIWjtBQUlFLFlBQVUsMEJBSlo7QUFLRSxZQUFVO0FBTFosQ0FEb0IsRUFRcEI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLG1CQUZaO0FBR0UsWUFBVSxFQUhaO0FBSUUsWUFBVSwwQkFKWjtBQUtFLFlBQVU7QUFMWixDQVJvQixFQWVwQjtBQUNFLFlBQVUsQ0FEWjtBQUVFLFlBQVUsNENBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBZm9CLEVBc0JwQjtBQUNFLFlBQVUsQ0FEWjtBQUVFLFlBQVUsNENBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBdEJvQixFQTZCcEI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLGVBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBN0JvQixFQW9DcEI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLDhCQUZaO0FBR0UsWUFBVSxFQUhaO0FBSUUsWUFBVSwwQkFKWjtBQUtFLFlBQVU7QUFMWixDQXBDb0IsRUEyQ3BCO0FBQ0UsWUFBVSxDQURaO0FBRUUsWUFBVSxnQ0FGWjtBQUdFLFlBQVUsRUFIWjtBQUlFLFlBQVUsMEJBSlo7QUFLRSxZQUFVO0FBTFosQ0EzQ29CLEVBa0RwQjtBQUNFLFlBQVUsQ0FEWjtBQUVFLFlBQVUscUVBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBbERvQixFQXlEcEI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLDRDQUZaO0FBR0UsWUFBVSxFQUhaO0FBSUUsWUFBVSwwQkFKWjtBQUtFLFlBQVU7QUFMWixDQXpEb0IsRUFnRXBCO0FBQ0UsWUFBVSxDQURaO0FBRUUsWUFBVSxpQkFGWjtBQUdFLFlBQVUsRUFIWjtBQUlFLFlBQVUsMEJBSlo7QUFLRSxZQUFVO0FBTFosQ0FoRW9CLEVBdUVwQjtBQUNFLFlBQVUsRUFEWjtBQUVFLFlBQVUsbUJBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBdkVvQixFQThFcEI7QUFDRSxZQUFVLEVBRFo7QUFFRSxZQUFVLHlEQUZaO0FBR0UsWUFBVSxFQUhaO0FBSUUsWUFBVSwwQkFKWjtBQUtFLFlBQVU7QUFMWixDQTlFb0IsRUFxRnBCO0FBQ0UsWUFBVSxFQURaO0FBRUUsWUFBVSw0Q0FGWjtBQUdFLFlBQVUsRUFIWjtBQUlFLFlBQVUsMEJBSlo7QUFLRSxZQUFVO0FBTFosQ0FyRm9CLEVBNEZwQjtBQUNFLFlBQVUsRUFEWjtBQUVFLFlBQVUsNENBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBNUZvQixFQW1HcEI7QUFDRSxZQUFVLEVBRFo7QUFFRSxZQUFVLG1CQUZaO0FBR0UsWUFBVSxFQUhaO0FBSUUsWUFBVSwwQkFKWjtBQUtFLFlBQVU7QUFMWixDQW5Hb0IsRUEwR3BCO0FBQ0UsWUFBVSxFQURaO0FBRUUsWUFBVSw0QkFGWjtBQUdFLFlBQVUsRUFIWjtBQUlFLFlBQVUsMEJBSlo7QUFLRSxZQUFVO0FBTFosQ0ExR29CLEVBaUhwQjtBQUNFLFlBQVUsRUFEWjtBQUVFLFlBQVUsc0RBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBakhvQixFQXdIcEI7QUFDRSxZQUFVLEVBRFo7QUFFRSxZQUFVLHlCQUZaO0FBR0UsWUFBVSxFQUhaO0FBSUUsWUFBVSwwQkFKWjtBQUtFLFlBQVU7QUFMWixDQXhIb0IsRUErSHBCO0FBQ0UsWUFBVSxFQURaO0FBRUUsWUFBVSxxQkFGWjtBQUdFLFlBQVUsRUFIWjtBQUlFLFlBQVUsMEJBSlo7QUFLRSxZQUFVO0FBTFosQ0EvSG9CLEVBc0lwQjtBQUNFLFlBQVUsRUFEWjtBQUVFLFlBQVUsbUJBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBdElvQixDQUFmIiwic291cmNlUm9vdCI6IkQ6XFxteUFwcHNcXHBjbS1jaGFsbGVuZ2VcXHNlcnZlclxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcGxhdG9zID0gW1xyXG4gIHtcclxuICAgIFwiUGxhSWRlXCI6IDAsXHJcbiAgICBcIlBsYU5vbVwiOiBcIkVuc2FsYWRhIGN1YXRybyBlc3RhY2lvbmVzXCIsXHJcbiAgICBcIlBsYURlc1wiOiBcIlwiLFxyXG4gICAgXCJQbGFGZWNcIjogXCIyMDIwLTAxLTE0VDA4OjAwOjAwLjAwMFpcIixcclxuICAgIFwiUGxhQ2F0XCI6IFwiRVwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcIlBsYUlkZVwiOiAxLFxyXG4gICAgXCJQbGFOb21cIjogXCJBcnJveiBhIGxhIGN1YmFuYVwiLFxyXG4gICAgXCJQbGFEZXNcIjogXCJcIixcclxuICAgIFwiUGxhRmVjXCI6IFwiMjAyMC0wMS0xNFQwODowMDowMC4wMDBaXCIsXHJcbiAgICBcIlBsYUNhdFwiOiBcIkVcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJQbGFJZGVcIjogMixcclxuICAgIFwiUGxhTm9tXCI6IFwiTG9tbyBkZSBtZXJsdXphIGEgbGEgcm9tYW5hIGNvbiBndWFybmljacOzblwiLFxyXG4gICAgXCJQbGFEZXNcIjogXCJcIixcclxuICAgIFwiUGxhRmVjXCI6IFwiMjAyMC0wMS0xNFQwODowMDowMC4wMDBaXCIsXHJcbiAgICBcIlBsYUNhdFwiOiBcIlBcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJQbGFJZGVcIjogMyxcclxuICAgIFwiUGxhTm9tXCI6IFwiUGVjaHVnYSBkZSBwb2xsbyBhIGxhIHBsYW5jaGEgY29uIHZlcmR1cmFzXCIsXHJcbiAgICBcIlBsYURlc1wiOiBcIlwiLFxyXG4gICAgXCJQbGFGZWNcIjogXCIyMDIwLTAxLTE0VDA4OjAwOjAwLjAwMFpcIixcclxuICAgIFwiUGxhQ2F0XCI6IFwiUFwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcIlBsYUlkZVwiOiA0LFxyXG4gICAgXCJQbGFOb21cIjogXCJDYWbDqS9JbmZ1c2nDs25cIixcclxuICAgIFwiUGxhRGVzXCI6IFwiXCIsXHJcbiAgICBcIlBsYUZlY1wiOiBcIjIwMjAtMDEtMTRUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgXCJQbGFDYXRcIjogXCJSXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwiUGxhSWRlXCI6IDUsXHJcbiAgICBcIlBsYU5vbVwiOiBcIkVDcmVtYSBkZSBzZXRhcyBjb24gY3JvdXRvbnNcIixcclxuICAgIFwiUGxhRGVzXCI6IFwiXCIsXHJcbiAgICBcIlBsYUZlY1wiOiBcIjIwMjAtMDEtMTVUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgXCJQbGFDYXRcIjogXCJFXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwiUGxhSWRlXCI6IDYsXHJcbiAgICBcIlBsYU5vbVwiOiBcIkd1aXNvIGRlIGdhcmJhbnpvcyB5IGVzcGluYWNhc1wiLFxyXG4gICAgXCJQbGFEZXNcIjogXCJcIixcclxuICAgIFwiUGxhRmVjXCI6IFwiMjAyMC0wMS0xNVQwODowMDowMC4wMDBaXCIsXHJcbiAgICBcIlBsYUNhdFwiOiBcIkVcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJQbGFJZGVcIjogNyxcclxuICAgIFwiUGxhTm9tXCI6IFwiRmlsZXRlIGRlIHRlcm5lcmEgYSBsYSBwbGFuY2hhIGNvbiBqdWTDrWFzIHZlcmRlcyB5IHJvZGFqYSBkZSB0b21hdGVcIixcclxuICAgIFwiUGxhRGVzXCI6IFwiXCIsXHJcbiAgICBcIlBsYUZlY1wiOiBcIjIwMjAtMDEtMTVUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgXCJQbGFDYXRcIjogXCJQXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwiUGxhSWRlXCI6IDgsXHJcbiAgICBcIlBsYU5vbVwiOiBcIkxvbW8gZGUgbWVybHV6YSBhIGxhIHJvbWFuYSBjb24gZ3Vhcm5pY2nDs25cIixcclxuICAgIFwiUGxhRGVzXCI6IFwiXCIsXHJcbiAgICBcIlBsYUZlY1wiOiBcIjIwMjAtMDEtMTVUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgXCJQbGFDYXRcIjogXCJQXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwiUGxhSWRlXCI6IDksXHJcbiAgICBcIlBsYU5vbVwiOiBcIlp1bW8gZGUgbmFyYW5qYVwiLFxyXG4gICAgXCJQbGFEZXNcIjogXCJcIixcclxuICAgIFwiUGxhRmVjXCI6IFwiMjAyMC0wMS0xNVQwODowMDowMC4wMDBaXCIsXHJcbiAgICBcIlBsYUNhdFwiOiBcIlJcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJQbGFJZGVcIjogMTAsXHJcbiAgICBcIlBsYU5vbVwiOiBcIkFycm96IGEgbGEgY3ViYW5hXCIsXHJcbiAgICBcIlBsYURlc1wiOiBcIlwiLFxyXG4gICAgXCJQbGFGZWNcIjogXCIyMDIwLTAxLTE2VDA4OjAwOjAwLjAwMFpcIixcclxuICAgIFwiUGxhQ2F0XCI6IFwiRVwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcIlBsYUlkZVwiOiAxMSxcclxuICAgIFwiUGxhTm9tXCI6IFwiTmFjaG9zIGNvbiBjaGlsaSBjb24gY2FybmUsIHF1ZXNvIGNoZWRkYXIgeSBjcmVtYSBhZ3JpYVwiLFxyXG4gICAgXCJQbGFEZXNcIjogXCJcIixcclxuICAgIFwiUGxhRmVjXCI6IFwiMjAyMC0wMS0xNlQwODowMDowMC4wMDBaXCIsXHJcbiAgICBcIlBsYUNhdFwiOiBcIkVcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJQbGFJZGVcIjogMTIsXHJcbiAgICBcIlBsYU5vbVwiOiBcIlBvbGxvIGFzYWRvIGNvbiBwYXRhdGFzIHBhbmFkZXJhcyBhbCBob3Jub1wiLFxyXG4gICAgXCJQbGFEZXNcIjogXCJcIixcclxuICAgIFwiUGxhRmVjXCI6IFwiMjAyMC0wMS0xNlQwODowMDowMC4wMDBaXCIsXHJcbiAgICBcIlBsYUNhdFwiOiBcIlBcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJQbGFJZGVcIjogMTMsXHJcbiAgICBcIlBsYU5vbVwiOiBcIlBlY2h1Z2EgZGUgcG9sbG8gYSBsYSBwbGFuY2hhIGNvbiB2ZXJkdXJhc1wiLFxyXG4gICAgXCJQbGFEZXNcIjogXCJcIixcclxuICAgIFwiUGxhRmVjXCI6IFwiMjAyMC0wMS0xNlQwODowMDowMC4wMDBaXCIsXHJcbiAgICBcIlBsYUNhdFwiOiBcIlBcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJQbGFJZGVcIjogMTQsXHJcbiAgICBcIlBsYU5vbVwiOiBcInJ1dGEgZGUgdGVtcG9yYWRhXCIsXHJcbiAgICBcIlBsYURlc1wiOiBcIlwiLFxyXG4gICAgXCJQbGFGZWNcIjogXCIyMDIwLTAxLTE2VDA4OjAwOjAwLjAwMFpcIixcclxuICAgIFwiUGxhQ2F0XCI6IFwiUlwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcIlBsYUlkZVwiOiAxNSxcclxuICAgIFwiUGxhTm9tXCI6IFwiRW5zYWxhZGEgY3VhdHJvIGVzdGFjaW9uZXNcIixcclxuICAgIFwiUGxhRGVzXCI6IFwiXCIsXHJcbiAgICBcIlBsYUZlY1wiOiBcIjIwMjAtMDEtMTdUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgXCJQbGFDYXRcIjogXCJFXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwiUGxhSWRlXCI6IDE2LFxyXG4gICAgXCJQbGFOb21cIjogXCJFbnNhbGFkYSBkZSBwYXN0YSwgbGVjaHVnYXMsIHRvbWF0ZSB5IHF1ZXNvIGRlIGNhYnJhXCIsXHJcbiAgICBcIlBsYURlc1wiOiBcIlwiLFxyXG4gICAgXCJQbGFGZWNcIjogXCIyMDIwLTAxLTE3VDA4OjAwOjAwLjAwMFpcIixcclxuICAgIFwiUGxhQ2F0XCI6IFwiRVwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcIlBsYUlkZVwiOiAxNyxcclxuICAgIFwiUGxhTm9tXCI6IFwiQnVycml0byBQdWxsZWQgUG9yayBCQlFcIixcclxuICAgIFwiUGxhRGVzXCI6IFwiXCIsXHJcbiAgICBcIlBsYUZlY1wiOiBcIjIwMjAtMDEtMTdUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgXCJQbGFDYXRcIjogXCJQXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwiUGxhSWRlXCI6IDE4LFxyXG4gICAgXCJQbGFOb21cIjogXCJIYW1idXJndWVzYSBkZWwgZMOtYVwiLFxyXG4gICAgXCJQbGFEZXNcIjogXCJcIixcclxuICAgIFwiUGxhRmVjXCI6IFwiMjAyMC0wMS0xN1QwODowMDowMC4wMDBaXCIsXHJcbiAgICBcIlBsYUNhdFwiOiBcIlBcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJQbGFJZGVcIjogMTksXHJcbiAgICBcIlBsYU5vbVwiOiBcIlZhc2l0byBkZSBicm93bmllXCIsXHJcbiAgICBcIlBsYURlc1wiOiBcIlwiLFxyXG4gICAgXCJQbGFGZWNcIjogXCIyMDIwLTAxLTE3VDA4OjAwOjAwLjAwMFpcIixcclxuICAgIFwiUGxhQ2F0XCI6IFwiUlwiXHJcbiAgfVxyXG5dIl19",
    "map": {
      "version": 3,
      "sources": [
        "plato.js"
      ],
      "names": [
        "platos"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,MAAM,GAAG,CACpB;AACE,YAAU,CADZ;AAEE,YAAU,4BAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CADoB,EAQpB;AACE,YAAU,CADZ;AAEE,YAAU,mBAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CARoB,EAepB;AACE,YAAU,CADZ;AAEE,YAAU,4CAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAfoB,EAsBpB;AACE,YAAU,CADZ;AAEE,YAAU,4CAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAtBoB,EA6BpB;AACE,YAAU,CADZ;AAEE,YAAU,eAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CA7BoB,EAoCpB;AACE,YAAU,CADZ;AAEE,YAAU,8BAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CApCoB,EA2CpB;AACE,YAAU,CADZ;AAEE,YAAU,gCAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CA3CoB,EAkDpB;AACE,YAAU,CADZ;AAEE,YAAU,qEAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAlDoB,EAyDpB;AACE,YAAU,CADZ;AAEE,YAAU,4CAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAzDoB,EAgEpB;AACE,YAAU,CADZ;AAEE,YAAU,iBAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAhEoB,EAuEpB;AACE,YAAU,EADZ;AAEE,YAAU,mBAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAvEoB,EA8EpB;AACE,YAAU,EADZ;AAEE,YAAU,yDAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CA9EoB,EAqFpB;AACE,YAAU,EADZ;AAEE,YAAU,4CAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CArFoB,EA4FpB;AACE,YAAU,EADZ;AAEE,YAAU,4CAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CA5FoB,EAmGpB;AACE,YAAU,EADZ;AAEE,YAAU,mBAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAnGoB,EA0GpB;AACE,YAAU,EADZ;AAEE,YAAU,4BAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CA1GoB,EAiHpB;AACE,YAAU,EADZ;AAEE,YAAU,sDAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAjHoB,EAwHpB;AACE,YAAU,EADZ;AAEE,YAAU,yBAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAxHoB,EA+HpB;AACE,YAAU,EADZ;AAEE,YAAU,qBAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CA/HoB,EAsIpB;AACE,YAAU,EADZ;AAEE,YAAU,mBAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAtIoB,CAAf",
      "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src\\models",
      "sourcesContent": [
        "export const platos = [\r\n  {\r\n    \"PlaIde\": 0,\r\n    \"PlaNom\": \"Ensalada cuatro estaciones\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 1,\r\n    \"PlaNom\": \"Arroz a la cubana\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 2,\r\n    \"PlaNom\": \"Lomo de merluza a la romana con guarnición\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 3,\r\n    \"PlaNom\": \"Pechuga de pollo a la plancha con verduras\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 4,\r\n    \"PlaNom\": \"Café/Infusión\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\r\n    \"PlaCat\": \"R\"\r\n  },\r\n  {\r\n    \"PlaIde\": 5,\r\n    \"PlaNom\": \"ECrema de setas con croutons\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 6,\r\n    \"PlaNom\": \"Guiso de garbanzos y espinacas\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 7,\r\n    \"PlaNom\": \"Filete de ternera a la plancha con judías verdes y rodaja de tomate\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 8,\r\n    \"PlaNom\": \"Lomo de merluza a la romana con guarnición\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 9,\r\n    \"PlaNom\": \"Zumo de naranja\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\r\n    \"PlaCat\": \"R\"\r\n  },\r\n  {\r\n    \"PlaIde\": 10,\r\n    \"PlaNom\": \"Arroz a la cubana\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 11,\r\n    \"PlaNom\": \"Nachos con chili con carne, queso cheddar y crema agria\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 12,\r\n    \"PlaNom\": \"Pollo asado con patatas panaderas al horno\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 13,\r\n    \"PlaNom\": \"Pechuga de pollo a la plancha con verduras\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 14,\r\n    \"PlaNom\": \"ruta de temporada\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\r\n    \"PlaCat\": \"R\"\r\n  },\r\n  {\r\n    \"PlaIde\": 15,\r\n    \"PlaNom\": \"Ensalada cuatro estaciones\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 16,\r\n    \"PlaNom\": \"Ensalada de pasta, lechugas, tomate y queso de cabra\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 17,\r\n    \"PlaNom\": \"Burrito Pulled Pork BBQ\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 18,\r\n    \"PlaNom\": \"Hamburguesa del día\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 19,\r\n    \"PlaNom\": \"Vasito de brownie\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\r\n    \"PlaCat\": \"R\"\r\n  }\r\n]"
      ]
    },
    "sourceType": "script",
    "mtime": 1581947596077
  },
  "{\"sourceRoot\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\",\"filename\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\\\\src\\\\models\\\\pedido.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\myApps\\pcm-challenge\\server",
      "filename": "D:\\myApps\\pcm-challenge\\server\\src\\models\\pedido.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\myApps\\pcm-challenge\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\myApps\\pcm-challenge\\server\\src\\models\\pedido.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\myApps\\pcm-challenge\\server\\src\\models\\pedido.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src\\models",
        "sourceFileName": "pedido.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pedidos = void 0;\nvar pedidos = [{\n  \"PedIde\": 0,\n  \"PedEnt\": 1,\n  \"PedFon\": 3,\n  \"PedRef\": 5,\n  \"PedFec\": \"2020-02-18T08:00:00.000Z\",\n  \"PedEst\": \"E\"\n}, {\n  \"PedIde\": 1,\n  \"PedEnt\": 2,\n  \"PedFon\": 4,\n  \"PedRef\": 5,\n  \"PedFec\": \"2020-02-18T08:00:00.000Z\",\n  \"PedEst\": \"E\"\n}, {\n  \"PedIde\": 2,\n  \"PedEnt\": 6,\n  \"PedFon\": 9,\n  \"PedRef\": 10,\n  \"PedFec\": \"2020-02-18T08:00:00.000Z\",\n  \"PedEst\": \"L\"\n}, {\n  \"PedIde\": 3,\n  \"PedEnt\": 11,\n  \"PedFon\": 13,\n  \"PedRef\": 15,\n  \"PedFec\": \"2020-02-18T08:00:00.000Z\",\n  \"PedEst\": \"L\"\n}, {\n  \"PedIde\": 4,\n  \"PedEnt\": 16,\n  \"PedFon\": 18,\n  \"PedRef\": 19,\n  \"PedFec\": \"2020-02-18T08:00:00.000Z\",\n  \"PedEst\": \"N\"\n}];\nexports.pedidos = pedidos;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlZGlkby5qcyJdLCJuYW1lcyI6WyJwZWRpZG9zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxJQUFNQSxPQUFPLEdBQUcsQ0FDbkI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLENBRlo7QUFHRSxZQUFVLENBSFo7QUFJRSxZQUFVLENBSlo7QUFLRSxZQUFVLDBCQUxaO0FBTUUsWUFBVTtBQU5aLENBRG1CLEVBU25CO0FBQ0UsWUFBVSxDQURaO0FBRUUsWUFBVSxDQUZaO0FBR0UsWUFBVSxDQUhaO0FBSUUsWUFBVSxDQUpaO0FBS0UsWUFBVSwwQkFMWjtBQU1FLFlBQVU7QUFOWixDQVRtQixFQWlCbkI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLENBRlo7QUFHRSxZQUFVLENBSFo7QUFJRSxZQUFVLEVBSlo7QUFLRSxZQUFVLDBCQUxaO0FBTUUsWUFBVTtBQU5aLENBakJtQixFQXlCbkI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLEVBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLEVBSlo7QUFLRSxZQUFVLDBCQUxaO0FBTUUsWUFBVTtBQU5aLENBekJtQixFQWlDbkI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLEVBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLEVBSlo7QUFLRSxZQUFVLDBCQUxaO0FBTUUsWUFBVTtBQU5aLENBakNtQixDQUFoQiIsInNvdXJjZVJvb3QiOiJEOlxcbXlBcHBzXFxwY20tY2hhbGxlbmdlXFxzZXJ2ZXJcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHBlZGlkb3MgPSBbXHJcbiAgICB7XHJcbiAgICAgIFwiUGVkSWRlXCI6IDAsXHJcbiAgICAgIFwiUGVkRW50XCI6IDEsXHJcbiAgICAgIFwiUGVkRm9uXCI6IDMsXHJcbiAgICAgIFwiUGVkUmVmXCI6IDUsXHJcbiAgICAgIFwiUGVkRmVjXCI6IFwiMjAyMC0wMi0xOFQwODowMDowMC4wMDBaXCIsXHJcbiAgICAgIFwiUGVkRXN0XCI6IFwiRVwiXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBcIlBlZElkZVwiOiAxLFxyXG4gICAgICBcIlBlZEVudFwiOiAyLFxyXG4gICAgICBcIlBlZEZvblwiOiA0LFxyXG4gICAgICBcIlBlZFJlZlwiOiA1LFxyXG4gICAgICBcIlBlZEZlY1wiOiBcIjIwMjAtMDItMThUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgICBcIlBlZEVzdFwiOiBcIkVcIlxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgXCJQZWRJZGVcIjogMixcclxuICAgICAgXCJQZWRFbnRcIjogNixcclxuICAgICAgXCJQZWRGb25cIjogOSxcclxuICAgICAgXCJQZWRSZWZcIjogMTAsXHJcbiAgICAgIFwiUGVkRmVjXCI6IFwiMjAyMC0wMi0xOFQwODowMDowMC4wMDBaXCIsXHJcbiAgICAgIFwiUGVkRXN0XCI6IFwiTFwiXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBcIlBlZElkZVwiOiAzLFxyXG4gICAgICBcIlBlZEVudFwiOiAxMSxcclxuICAgICAgXCJQZWRGb25cIjogMTMsXHJcbiAgICAgIFwiUGVkUmVmXCI6IDE1LFxyXG4gICAgICBcIlBlZEZlY1wiOiBcIjIwMjAtMDItMThUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgICBcIlBlZEVzdFwiOiBcIkxcIlxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgXCJQZWRJZGVcIjogNCxcclxuICAgICAgXCJQZWRFbnRcIjogMTYsXHJcbiAgICAgIFwiUGVkRm9uXCI6IDE4LFxyXG4gICAgICBcIlBlZFJlZlwiOiAxOSxcclxuICAgICAgXCJQZWRGZWNcIjogXCIyMDIwLTAyLTE4VDA4OjAwOjAwLjAwMFpcIixcclxuICAgICAgXCJQZWRFc3RcIjogXCJOXCJcclxuICAgIH1cclxuICBdIl19",
    "map": {
      "version": 3,
      "sources": [
        "pedido.js"
      ],
      "names": [
        "pedidos"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,OAAO,GAAG,CACnB;AACE,YAAU,CADZ;AAEE,YAAU,CAFZ;AAGE,YAAU,CAHZ;AAIE,YAAU,CAJZ;AAKE,YAAU,0BALZ;AAME,YAAU;AANZ,CADmB,EASnB;AACE,YAAU,CADZ;AAEE,YAAU,CAFZ;AAGE,YAAU,CAHZ;AAIE,YAAU,CAJZ;AAKE,YAAU,0BALZ;AAME,YAAU;AANZ,CATmB,EAiBnB;AACE,YAAU,CADZ;AAEE,YAAU,CAFZ;AAGE,YAAU,CAHZ;AAIE,YAAU,EAJZ;AAKE,YAAU,0BALZ;AAME,YAAU;AANZ,CAjBmB,EAyBnB;AACE,YAAU,CADZ;AAEE,YAAU,EAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,EAJZ;AAKE,YAAU,0BALZ;AAME,YAAU;AANZ,CAzBmB,EAiCnB;AACE,YAAU,CADZ;AAEE,YAAU,EAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,EAJZ;AAKE,YAAU,0BALZ;AAME,YAAU;AANZ,CAjCmB,CAAhB",
      "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src\\models",
      "sourcesContent": [
        "export const pedidos = [\r\n    {\r\n      \"PedIde\": 0,\r\n      \"PedEnt\": 1,\r\n      \"PedFon\": 3,\r\n      \"PedRef\": 5,\r\n      \"PedFec\": \"2020-02-18T08:00:00.000Z\",\r\n      \"PedEst\": \"E\"\r\n    },\r\n    {\r\n      \"PedIde\": 1,\r\n      \"PedEnt\": 2,\r\n      \"PedFon\": 4,\r\n      \"PedRef\": 5,\r\n      \"PedFec\": \"2020-02-18T08:00:00.000Z\",\r\n      \"PedEst\": \"E\"\r\n    },\r\n    {\r\n      \"PedIde\": 2,\r\n      \"PedEnt\": 6,\r\n      \"PedFon\": 9,\r\n      \"PedRef\": 10,\r\n      \"PedFec\": \"2020-02-18T08:00:00.000Z\",\r\n      \"PedEst\": \"L\"\r\n    },\r\n    {\r\n      \"PedIde\": 3,\r\n      \"PedEnt\": 11,\r\n      \"PedFon\": 13,\r\n      \"PedRef\": 15,\r\n      \"PedFec\": \"2020-02-18T08:00:00.000Z\",\r\n      \"PedEst\": \"L\"\r\n    },\r\n    {\r\n      \"PedIde\": 4,\r\n      \"PedEnt\": 16,\r\n      \"PedFon\": 18,\r\n      \"PedRef\": 19,\r\n      \"PedFec\": \"2020-02-18T08:00:00.000Z\",\r\n      \"PedEst\": \"N\"\r\n    }\r\n  ]"
      ]
    },
    "sourceType": "script",
    "mtime": 1582055055052
  },
  "{\"sourceRoot\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\\\\src\\\\utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\",\"filename\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\\\\src\\\\utils\\\\errors.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src\\utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\myApps\\pcm-challenge\\server",
      "filename": "D:\\myApps\\pcm-challenge\\server\\src\\utils\\errors.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\myApps\\pcm-challenge\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\myApps\\pcm-challenge\\server\\src\\utils\\errors.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\myApps\\pcm-challenge\\server\\src\\utils\\errors.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src\\utils",
        "sourceFileName": "errors.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _require = require('./constants'),\n    errorType = _require.errorType;\n\nvar getErrorCode = function getErrorCode(errorName) {\n  if (errorType[errorName] == undefined) {\n    errorName = 'UNAUTHORIZED';\n  }\n\n  return errorType[errorName];\n};\n\nmodule.exports = getErrorCode;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9ycy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiZXJyb3JUeXBlIiwiZ2V0RXJyb3JDb2RlIiwiZXJyb3JOYW1lIiwidW5kZWZpbmVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7ZUFBc0JBLE9BQU8sQ0FBQyxhQUFELEM7SUFBckJDLFMsWUFBQUEsUzs7QUFFUixJQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBZSxDQUFBQyxTQUFTLEVBQUk7QUFDOUIsTUFBSUYsU0FBUyxDQUFDRSxTQUFELENBQVQsSUFBd0JDLFNBQTVCLEVBQXVDO0FBQ25DRCxJQUFBQSxTQUFTLEdBQUcsY0FBWjtBQUNIOztBQUNELFNBQU9GLFNBQVMsQ0FBQ0UsU0FBRCxDQUFoQjtBQUNILENBTEQ7O0FBT0FFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkosWUFBakIiLCJzb3VyY2VSb290IjoiRDpcXG15QXBwc1xccGNtLWNoYWxsZW5nZVxcc2VydmVyXFxzcmNcXHV0aWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBlcnJvclR5cGUgfSA9IHJlcXVpcmUoJy4vY29uc3RhbnRzJylcclxuXHJcbmNvbnN0IGdldEVycm9yQ29kZSA9IGVycm9yTmFtZSA9PiB7XHJcbiAgICBpZiAoZXJyb3JUeXBlW2Vycm9yTmFtZV0gPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgZXJyb3JOYW1lID0gJ1VOQVVUSE9SSVpFRCc7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZXJyb3JUeXBlW2Vycm9yTmFtZV07XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZ2V0RXJyb3JDb2RlIl19",
    "map": {
      "version": 3,
      "sources": [
        "errors.js"
      ],
      "names": [
        "require",
        "errorType",
        "getErrorCode",
        "errorName",
        "undefined",
        "module",
        "exports"
      ],
      "mappings": ";;eAAsBA,OAAO,CAAC,aAAD,C;IAArBC,S,YAAAA,S;;AAER,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,SAAS,EAAI;AAC9B,MAAIF,SAAS,CAACE,SAAD,CAAT,IAAwBC,SAA5B,EAAuC;AACnCD,IAAAA,SAAS,GAAG,cAAZ;AACH;;AACD,SAAOF,SAAS,CAACE,SAAD,CAAhB;AACH,CALD;;AAOAE,MAAM,CAACC,OAAP,GAAiBJ,YAAjB",
      "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src\\utils",
      "sourcesContent": [
        "const { errorType } = require('./constants')\r\n\r\nconst getErrorCode = errorName => {\r\n    if (errorType[errorName] == undefined) {\r\n        errorName = 'UNAUTHORIZED';\r\n    }\r\n    return errorType[errorName];\r\n}\r\n\r\nmodule.exports = getErrorCode"
      ]
    },
    "sourceType": "script",
    "mtime": 1582313226382
  },
  "{\"sourceRoot\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\\\\src\\\\utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\",\"filename\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\\\\src\\\\utils\\\\constants.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\myApps\\\\pcm-challenge\\\\server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src\\utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\myApps\\pcm-challenge\\server",
      "filename": "D:\\myApps\\pcm-challenge\\server\\src\\utils\\constants.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\myApps\\pcm-challenge\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\myApps\\pcm-challenge\\server\\src\\utils\\constants.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\myApps\\pcm-challenge\\server\\src\\utils\\constants.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src\\utils",
        "sourceFileName": "constants.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nexports.errorName = {\n  UNAUTHORIZED: 'UNHANDLED',\n  MAXENTRADAS: 'MAXENTRADAS',\n  MAXPFONDO: 'MAXPFONDO',\n  MAXREFRESCO: 'MAXREFRESCO'\n};\nexports.errorType = {\n  UNAUTHORIZED: {\n    message: 'Un error inesperado a sucedido.',\n    statusCode: 404\n  },\n  MAXENTRADAS: {\n    message: 'Ya se registraron las entradas máximas (2) del día.',\n    statusCode: 401\n  },\n  MAXPFONDO: {\n    message: 'Ya se registraron los platos de fondos máximos (2) del día.',\n    statusCode: 401\n  },\n  MAXREFRESCO: {\n    message: 'Ya se registro el Refresco del día.',\n    statusCode: 401\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0YW50cy5qcyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiZXJyb3JOYW1lIiwiVU5BVVRIT1JJWkVEIiwiTUFYRU5UUkFEQVMiLCJNQVhQRk9ORE8iLCJNQVhSRUZSRVNDTyIsImVycm9yVHlwZSIsIm1lc3NhZ2UiLCJzdGF0dXNDb2RlIl0sIm1hcHBpbmdzIjoiOztBQUNBQSxPQUFPLENBQUNDLFNBQVIsR0FBb0I7QUFDaEJDLEVBQUFBLFlBQVksRUFBRSxXQURFO0FBRWhCQyxFQUFBQSxXQUFXLEVBQUUsYUFGRztBQUdoQkMsRUFBQUEsU0FBUyxFQUFFLFdBSEs7QUFJaEJDLEVBQUFBLFdBQVcsRUFBRTtBQUpHLENBQXBCO0FBT0VMLE9BQU8sQ0FBQ00sU0FBUixHQUFvQjtBQUNsQkosRUFBQUEsWUFBWSxFQUFFO0FBQ1ZLLElBQUFBLE9BQU8sRUFBRSxpQ0FEQztBQUVWQyxJQUFBQSxVQUFVLEVBQUU7QUFGRixHQURJO0FBS2xCTCxFQUFBQSxXQUFXLEVBQUU7QUFDVEksSUFBQUEsT0FBTyxFQUFFLHFEQURBO0FBRVRDLElBQUFBLFVBQVUsRUFBRTtBQUZILEdBTEs7QUFTbEJKLEVBQUFBLFNBQVMsRUFBRTtBQUNQRyxJQUFBQSxPQUFPLEVBQUUsNkRBREY7QUFFUEMsSUFBQUEsVUFBVSxFQUFFO0FBRkwsR0FUTztBQWFsQkgsRUFBQUEsV0FBVyxFQUFFO0FBQ1RFLElBQUFBLE9BQU8sRUFBRSxxQ0FEQTtBQUVUQyxJQUFBQSxVQUFVLEVBQUU7QUFGSDtBQWJLLENBQXBCIiwic291cmNlUm9vdCI6IkQ6XFxteUFwcHNcXHBjbS1jaGFsbGVuZ2VcXHNlcnZlclxcc3JjXFx1dGlscyIsInNvdXJjZXNDb250ZW50IjpbIiAgXHJcbmV4cG9ydHMuZXJyb3JOYW1lID0ge1xyXG4gICAgVU5BVVRIT1JJWkVEOiAnVU5IQU5ETEVEJyxcclxuICAgIE1BWEVOVFJBREFTOiAnTUFYRU5UUkFEQVMnLFxyXG4gICAgTUFYUEZPTkRPOiAnTUFYUEZPTkRPJyxcclxuICAgIE1BWFJFRlJFU0NPOiAnTUFYUkVGUkVTQ08nXHJcbiAgfVxyXG4gIFxyXG4gIGV4cG9ydHMuZXJyb3JUeXBlID0ge1xyXG4gICAgVU5BVVRIT1JJWkVEOiB7XHJcbiAgICAgICAgbWVzc2FnZTogJ1VuIGVycm9yIGluZXNwZXJhZG8gYSBzdWNlZGlkby4nLFxyXG4gICAgICAgIHN0YXR1c0NvZGU6IDQwNFxyXG4gICAgfSxcclxuICAgIE1BWEVOVFJBREFTOiB7XHJcbiAgICAgICAgbWVzc2FnZTogJ1lhIHNlIHJlZ2lzdHJhcm9uIGxhcyBlbnRyYWRhcyBtw6F4aW1hcyAoMikgZGVsIGTDrWEuJyxcclxuICAgICAgICBzdGF0dXNDb2RlOiA0MDFcclxuICAgIH0sXHJcbiAgICBNQVhQRk9ORE86IHtcclxuICAgICAgICBtZXNzYWdlOiAnWWEgc2UgcmVnaXN0cmFyb24gbG9zIHBsYXRvcyBkZSBmb25kb3MgbcOheGltb3MgKDIpIGRlbCBkw61hLicsXHJcbiAgICAgICAgc3RhdHVzQ29kZTogNDAxXHJcbiAgICB9LFxyXG4gICAgTUFYUkVGUkVTQ086IHtcclxuICAgICAgICBtZXNzYWdlOiAnWWEgc2UgcmVnaXN0cm8gZWwgUmVmcmVzY28gZGVsIGTDrWEuJyxcclxuICAgICAgICBzdGF0dXNDb2RlOiA0MDFcclxuICAgIH1cclxuICB9Il19",
    "map": {
      "version": 3,
      "sources": [
        "constants.js"
      ],
      "names": [
        "exports",
        "errorName",
        "UNAUTHORIZED",
        "MAXENTRADAS",
        "MAXPFONDO",
        "MAXREFRESCO",
        "errorType",
        "message",
        "statusCode"
      ],
      "mappings": ";;AACAA,OAAO,CAACC,SAAR,GAAoB;AAChBC,EAAAA,YAAY,EAAE,WADE;AAEhBC,EAAAA,WAAW,EAAE,aAFG;AAGhBC,EAAAA,SAAS,EAAE,WAHK;AAIhBC,EAAAA,WAAW,EAAE;AAJG,CAApB;AAOEL,OAAO,CAACM,SAAR,GAAoB;AAClBJ,EAAAA,YAAY,EAAE;AACVK,IAAAA,OAAO,EAAE,iCADC;AAEVC,IAAAA,UAAU,EAAE;AAFF,GADI;AAKlBL,EAAAA,WAAW,EAAE;AACTI,IAAAA,OAAO,EAAE,qDADA;AAETC,IAAAA,UAAU,EAAE;AAFH,GALK;AASlBJ,EAAAA,SAAS,EAAE;AACPG,IAAAA,OAAO,EAAE,6DADF;AAEPC,IAAAA,UAAU,EAAE;AAFL,GATO;AAalBH,EAAAA,WAAW,EAAE;AACTE,IAAAA,OAAO,EAAE,qCADA;AAETC,IAAAA,UAAU,EAAE;AAFH;AAbK,CAApB",
      "sourceRoot": "D:\\myApps\\pcm-challenge\\server\\src\\utils",
      "sourcesContent": [
        "  \r\nexports.errorName = {\r\n    UNAUTHORIZED: 'UNHANDLED',\r\n    MAXENTRADAS: 'MAXENTRADAS',\r\n    MAXPFONDO: 'MAXPFONDO',\r\n    MAXREFRESCO: 'MAXREFRESCO'\r\n  }\r\n  \r\n  exports.errorType = {\r\n    UNAUTHORIZED: {\r\n        message: 'Un error inesperado a sucedido.',\r\n        statusCode: 404\r\n    },\r\n    MAXENTRADAS: {\r\n        message: 'Ya se registraron las entradas máximas (2) del día.',\r\n        statusCode: 401\r\n    },\r\n    MAXPFONDO: {\r\n        message: 'Ya se registraron los platos de fondos máximos (2) del día.',\r\n        statusCode: 401\r\n    },\r\n    MAXREFRESCO: {\r\n        message: 'Ya se registro el Refresco del día.',\r\n        statusCode: 401\r\n    }\r\n  }"
      ]
    },
    "sourceType": "script",
    "mtime": 1582313215048
  },
  "{\"sourceRoot\":\"D:\\\\myApps\\\\pcm-challenge\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\myApps\\\\pcm-challenge\",\"filename\":\"D:\\\\myApps\\\\pcm-challenge\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\myApps\\\\pcm-challenge\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\myApps\\pcm-challenge\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\myApps\\pcm-challenge",
      "filename": "D:\\myApps\\pcm-challenge\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\myApps\\pcm-challenge",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\myApps\\pcm-challenge\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\myApps\\pcm-challenge\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\myApps\\pcm-challenge\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _expressGraphql = _interopRequireDefault(require(\"express-graphql\"));\n\nvar _schema = _interopRequireDefault(require(\"./schema\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar path = require('path');\n\nvar cors = require('cors');\n\nvar app = (0, _express[\"default\"])(); // Serve the static files from the React app\n\nconsole.log(__dirname);\napp.use(_express[\"default\"][\"static\"](path.join(__dirname, 'build')));\n/*app.get('/', (req, res) => {\r\n  res.json({\r\n    errors:[{\"message\":\"Must provide query string.\"}]\r\n  })\r\n});*/\n// Handles any requests that don't match the ones above\n\nvar getErrorCode = require('./utils/errors');\n\napp.use(cors());\napp.use('/graphiql', (0, _expressGraphql[\"default\"])({\n  graphiql: true,\n  schema: _schema[\"default\"],\n  formatError: function formatError(err) {\n    var error = getErrorCode(err.message);\n    return {\n      message: error.message,\n      statusCode: error.statusCode\n    };\n  }\n}));\napp.use(_express[\"default\"][\"static\"]('public'));\napp.get('*', function (req, res) {\n  res.sendFile(path.resolve(__dirname, 'public', 'index.html'));\n});\napp.listen(4000, function () {\n  return console.log('Server on port 4000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBhdGgiLCJyZXF1aXJlIiwiY29ycyIsImFwcCIsImNvbnNvbGUiLCJsb2ciLCJfX2Rpcm5hbWUiLCJ1c2UiLCJleHByZXNzIiwiam9pbiIsImdldEVycm9yQ29kZSIsImdyYXBoaXFsIiwic2NoZW1hIiwiZm9ybWF0RXJyb3IiLCJlcnIiLCJlcnJvciIsIm1lc3NhZ2UiLCJzdGF0dXNDb2RlIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZEZpbGUiLCJyZXNvbHZlIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOzs7O0FBQ0EsSUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUVBLElBQU1FLEdBQUcsR0FBRywwQkFBWixDLENBRUE7O0FBQ0FDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQUFaO0FBQ0FILEdBQUcsQ0FBQ0ksR0FBSixDQUFRQyw4QkFBZVIsSUFBSSxDQUFDUyxJQUFMLENBQVVILFNBQVYsRUFBcUIsT0FBckIsQ0FBZixDQUFSO0FBRUE7Ozs7O0FBTUE7O0FBRUEsSUFBTUksWUFBWSxHQUFHVCxPQUFPLENBQUMsZ0JBQUQsQ0FBNUI7O0FBRUFFLEdBQUcsQ0FBQ0ksR0FBSixDQUFRTCxJQUFJLEVBQVo7QUFFQUMsR0FBRyxDQUFDSSxHQUFKLENBQVEsV0FBUixFQUFxQixnQ0FBWTtBQUMvQkksRUFBQUEsUUFBUSxFQUFFLElBRHFCO0FBRS9CQyxFQUFBQSxNQUFNLEVBQUVBLGtCQUZ1QjtBQUcvQkMsRUFBQUEsV0FBVyxFQUFFLHFCQUFDQyxHQUFELEVBQVM7QUFDcEIsUUFBTUMsS0FBSyxHQUFHTCxZQUFZLENBQUNJLEdBQUcsQ0FBQ0UsT0FBTCxDQUExQjtBQUNBLFdBQVE7QUFBRUEsTUFBQUEsT0FBTyxFQUFFRCxLQUFLLENBQUNDLE9BQWpCO0FBQTBCQyxNQUFBQSxVQUFVLEVBQUVGLEtBQUssQ0FBQ0U7QUFBNUMsS0FBUjtBQUNEO0FBTjhCLENBQVosQ0FBckI7QUFTQWQsR0FBRyxDQUFDSSxHQUFKLENBQVFDLDhCQUFlLFFBQWYsQ0FBUjtBQUVBTCxHQUFHLENBQUNlLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQVk7QUFDeEJBLEVBQUFBLEdBQUcsQ0FBQ0MsUUFBSixDQUFhckIsSUFBSSxDQUFDc0IsT0FBTCxDQUFhaEIsU0FBYixFQUF3QixRQUF4QixFQUFrQyxZQUFsQyxDQUFiO0FBQ0EsQ0FGRDtBQUlBSCxHQUFHLENBQUNvQixNQUFKLENBQVcsSUFBWCxFQUFpQjtBQUFBLFNBQU1uQixPQUFPLENBQUNDLEdBQVIsQ0FBWSxxQkFBWixDQUFOO0FBQUEsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXG15QXBwc1xccGNtLWNoYWxsZW5nZVxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBncmFwaHFsSFRUUCBmcm9tICdleHByZXNzLWdyYXBocWwnO1xyXG5pbXBvcnQgc2NoZW1hIGZyb20gJy4vc2NoZW1hJztcclxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcclxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuXHJcbi8vIFNlcnZlIHRoZSBzdGF0aWMgZmlsZXMgZnJvbSB0aGUgUmVhY3QgYXBwXHJcbmNvbnNvbGUubG9nKF9fZGlybmFtZSk7XHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgJ2J1aWxkJykpKTtcclxuXHJcbi8qYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xyXG4gIHJlcy5qc29uKHtcclxuICAgIGVycm9yczpbe1wibWVzc2FnZVwiOlwiTXVzdCBwcm92aWRlIHF1ZXJ5IHN0cmluZy5cIn1dXHJcbiAgfSlcclxufSk7Ki9cclxuXHJcbi8vIEhhbmRsZXMgYW55IHJlcXVlc3RzIHRoYXQgZG9uJ3QgbWF0Y2ggdGhlIG9uZXMgYWJvdmVcclxuXHJcbmNvbnN0IGdldEVycm9yQ29kZSA9IHJlcXVpcmUoJy4vdXRpbHMvZXJyb3JzJylcclxuXHJcbmFwcC51c2UoY29ycygpKTtcclxuXHJcbmFwcC51c2UoJy9ncmFwaGlxbCcsIGdyYXBocWxIVFRQKHtcclxuICBncmFwaGlxbDogdHJ1ZSxcclxuICBzY2hlbWE6IHNjaGVtYSxcclxuICBmb3JtYXRFcnJvcjogKGVycikgPT4ge1xyXG4gICAgY29uc3QgZXJyb3IgPSBnZXRFcnJvckNvZGUoZXJyLm1lc3NhZ2UpXHJcbiAgICByZXR1cm4gKHsgbWVzc2FnZTogZXJyb3IubWVzc2FnZSwgc3RhdHVzQ29kZTogZXJyb3Iuc3RhdHVzQ29kZSB9KVxyXG4gIH1cclxufSkpO1xyXG5cclxuYXBwLnVzZShleHByZXNzLnN0YXRpYygncHVibGljJykpO1xyXG5cclxuYXBwLmdldCgnKicsIChyZXEscmVzKSA9PntcclxuXHRyZXMuc2VuZEZpbGUocGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJ3B1YmxpYycsICdpbmRleC5odG1sJykpO1xyXG59KTtcclxuXHJcbmFwcC5saXN0ZW4oNDAwMCwgKCkgPT4gY29uc29sZS5sb2coJ1NlcnZlciBvbiBwb3J0IDQwMDAnKSk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "path",
        "require",
        "cors",
        "app",
        "console",
        "log",
        "__dirname",
        "use",
        "express",
        "join",
        "getErrorCode",
        "graphiql",
        "schema",
        "formatError",
        "err",
        "error",
        "message",
        "statusCode",
        "get",
        "req",
        "res",
        "sendFile",
        "resolve",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AACA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAME,GAAG,GAAG,0BAAZ,C,CAEA;;AACAC,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACAH,GAAG,CAACI,GAAJ,CAAQC,8BAAeR,IAAI,CAACS,IAAL,CAAUH,SAAV,EAAqB,OAArB,CAAf,CAAR;AAEA;;;;;AAMA;;AAEA,IAAMI,YAAY,GAAGT,OAAO,CAAC,gBAAD,CAA5B;;AAEAE,GAAG,CAACI,GAAJ,CAAQL,IAAI,EAAZ;AAEAC,GAAG,CAACI,GAAJ,CAAQ,WAAR,EAAqB,gCAAY;AAC/BI,EAAAA,QAAQ,EAAE,IADqB;AAE/BC,EAAAA,MAAM,EAAEA,kBAFuB;AAG/BC,EAAAA,WAAW,EAAE,qBAACC,GAAD,EAAS;AACpB,QAAMC,KAAK,GAAGL,YAAY,CAACI,GAAG,CAACE,OAAL,CAA1B;AACA,WAAQ;AAAEA,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAjB;AAA0BC,MAAAA,UAAU,EAAEF,KAAK,CAACE;AAA5C,KAAR;AACD;AAN8B,CAAZ,CAArB;AASAd,GAAG,CAACI,GAAJ,CAAQC,8BAAe,QAAf,CAAR;AAEAL,GAAG,CAACe,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAKC,GAAL,EAAY;AACxBA,EAAAA,GAAG,CAACC,QAAJ,CAAarB,IAAI,CAACsB,OAAL,CAAahB,SAAb,EAAwB,QAAxB,EAAkC,YAAlC,CAAb;AACA,CAFD;AAIAH,GAAG,CAACoB,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMnB,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAN;AAAA,CAAjB",
      "sourceRoot": "D:\\myApps\\pcm-challenge\\src",
      "sourcesContent": [
        "import express from 'express';\r\nimport graphqlHTTP from 'express-graphql';\r\nimport schema from './schema';\r\nconst path = require('path');\r\nconst cors = require('cors');\r\n\r\nconst app = express();\r\n\r\n// Serve the static files from the React app\r\nconsole.log(__dirname);\r\napp.use(express.static(path.join(__dirname, 'build')));\r\n\r\n/*app.get('/', (req, res) => {\r\n  res.json({\r\n    errors:[{\"message\":\"Must provide query string.\"}]\r\n  })\r\n});*/\r\n\r\n// Handles any requests that don't match the ones above\r\n\r\nconst getErrorCode = require('./utils/errors')\r\n\r\napp.use(cors());\r\n\r\napp.use('/graphiql', graphqlHTTP({\r\n  graphiql: true,\r\n  schema: schema,\r\n  formatError: (err) => {\r\n    const error = getErrorCode(err.message)\r\n    return ({ message: error.message, statusCode: error.statusCode })\r\n  }\r\n}));\r\n\r\napp.use(express.static('public'));\r\n\r\napp.get('*', (req,res) =>{\r\n\tres.sendFile(path.resolve(__dirname, 'public', 'index.html'));\r\n});\r\n\r\napp.listen(4000, () => console.log('Server on port 4000'));\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582318918404
  },
  "{\"sourceRoot\":\"D:\\\\myApps\\\\pcm-challenge\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\myApps\\\\pcm-challenge\",\"filename\":\"D:\\\\myApps\\\\pcm-challenge\\\\src\\\\schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\myApps\\\\pcm-challenge\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\myApps\\pcm-challenge\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\myApps\\pcm-challenge",
      "filename": "D:\\myApps\\pcm-challenge\\src\\schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\myApps\\pcm-challenge",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\myApps\\pcm-challenge\\src\\schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\myApps\\pcm-challenge\\src\\schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\myApps\\pcm-challenge\\src",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _graphqlTools = require(\"graphql-tools\");\n\nvar _resolvers = require(\"./resolvers\");\n\nvar typeDefs = \"\\n  scalar DateTime\\n  type Query {\\n    platos: [Plato]\\n    pedidos: [Pedido]\\n    plato(PlaIde: Int!): Plato\\n    platosPorCategoria(PlaFec: DateTime!, PlaCat: String!): [Plato]\\n    PedidosPorEstado(PedFec: DateTime!, PedEst: String!): [Pedido]\\n    pedido(PedIde: Int!): Pedido\\n    menuDiario(PlaFec: DateTime!): [Plato]\\n  }\\n\\n  type Plato {\\n    PlaIde: ID!\\n    PlaNom: String\\n    PlaDes: String\\n    PlaFec: DateTime\\n    PlaCat: String\\n  }\\n\\n  type Pedido {\\n    PedIde: ID!\\n    PedPlaEnt: Plato\\n    PedEnt: Int\\n    PedPlaFon: Plato\\n    PedFon: Int\\n    PedPlaRef: Plato\\n    PedRef: Int\\n    PedFec: DateTime\\n    PedEst: String\\n  }\\n\\n  input PlatoEntrada {\\n    PlaNom: String\\n    PlaDes: String\\n    PlaFec: DateTime\\n    PlaCat: String\\n  }\\n\\n  input PedidoEntrada {\\n    PedEnt: Int\\n    PedFon: Int\\n    PedRef: Int\\n    PedFec: DateTime\\n    PedEst: String\\n  }\\n\\n  type Mutation {\\n    agregarPlato(PlaNom: String!, PlaDes: String, PlaFec: DateTime!, PlaCat: String!): Plato\\n    agregarPedido(PedEnt: Int!, PedFon: Int!, PedRef: Int!, PedFec: DateTime!, PedEst: String!): Pedido\\n    actualizarPlato(PlaIde: ID!, input: PlatoEntrada): Plato\\n    actualizarPedido(PedIde: ID!, input: PedidoEntrada): Pedido\\n  }\\n\";\n\nvar _default = (0, _graphqlTools.makeExecutableSchema)({\n  typeDefs: typeDefs,\n  resolvers: _resolvers.resolvers\n});\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJ0eXBlRGVmcyIsInJlc29sdmVycyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBLElBQU1BLFFBQVEsa3VDQUFkOztlQXVEZSx3Q0FBcUI7QUFDbENBLEVBQUFBLFFBQVEsRUFBRUEsUUFEd0I7QUFFbENDLEVBQUFBLFNBQVMsRUFBRUE7QUFGdUIsQ0FBckIsQyIsInNvdXJjZVJvb3QiOiJEOlxcbXlBcHBzXFxwY20tY2hhbGxlbmdlXFxzcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYWtlRXhlY3V0YWJsZVNjaGVtYSB9IGZyb20gJ2dyYXBocWwtdG9vbHMnO1xyXG5pbXBvcnQgeyByZXNvbHZlcnMgfSBmcm9tICcuL3Jlc29sdmVycyc7XHJcblxyXG5jb25zdCB0eXBlRGVmcyA9IGBcclxuICBzY2FsYXIgRGF0ZVRpbWVcclxuICB0eXBlIFF1ZXJ5IHtcclxuICAgIHBsYXRvczogW1BsYXRvXVxyXG4gICAgcGVkaWRvczogW1BlZGlkb11cclxuICAgIHBsYXRvKFBsYUlkZTogSW50ISk6IFBsYXRvXHJcbiAgICBwbGF0b3NQb3JDYXRlZ29yaWEoUGxhRmVjOiBEYXRlVGltZSEsIFBsYUNhdDogU3RyaW5nISk6IFtQbGF0b11cclxuICAgIFBlZGlkb3NQb3JFc3RhZG8oUGVkRmVjOiBEYXRlVGltZSEsIFBlZEVzdDogU3RyaW5nISk6IFtQZWRpZG9dXHJcbiAgICBwZWRpZG8oUGVkSWRlOiBJbnQhKTogUGVkaWRvXHJcbiAgICBtZW51RGlhcmlvKFBsYUZlYzogRGF0ZVRpbWUhKTogW1BsYXRvXVxyXG4gIH1cclxuXHJcbiAgdHlwZSBQbGF0byB7XHJcbiAgICBQbGFJZGU6IElEIVxyXG4gICAgUGxhTm9tOiBTdHJpbmdcclxuICAgIFBsYURlczogU3RyaW5nXHJcbiAgICBQbGFGZWM6IERhdGVUaW1lXHJcbiAgICBQbGFDYXQ6IFN0cmluZ1xyXG4gIH1cclxuXHJcbiAgdHlwZSBQZWRpZG8ge1xyXG4gICAgUGVkSWRlOiBJRCFcclxuICAgIFBlZFBsYUVudDogUGxhdG9cclxuICAgIFBlZEVudDogSW50XHJcbiAgICBQZWRQbGFGb246IFBsYXRvXHJcbiAgICBQZWRGb246IEludFxyXG4gICAgUGVkUGxhUmVmOiBQbGF0b1xyXG4gICAgUGVkUmVmOiBJbnRcclxuICAgIFBlZEZlYzogRGF0ZVRpbWVcclxuICAgIFBlZEVzdDogU3RyaW5nXHJcbiAgfVxyXG5cclxuICBpbnB1dCBQbGF0b0VudHJhZGEge1xyXG4gICAgUGxhTm9tOiBTdHJpbmdcclxuICAgIFBsYURlczogU3RyaW5nXHJcbiAgICBQbGFGZWM6IERhdGVUaW1lXHJcbiAgICBQbGFDYXQ6IFN0cmluZ1xyXG4gIH1cclxuXHJcbiAgaW5wdXQgUGVkaWRvRW50cmFkYSB7XHJcbiAgICBQZWRFbnQ6IEludFxyXG4gICAgUGVkRm9uOiBJbnRcclxuICAgIFBlZFJlZjogSW50XHJcbiAgICBQZWRGZWM6IERhdGVUaW1lXHJcbiAgICBQZWRFc3Q6IFN0cmluZ1xyXG4gIH1cclxuXHJcbiAgdHlwZSBNdXRhdGlvbiB7XHJcbiAgICBhZ3JlZ2FyUGxhdG8oUGxhTm9tOiBTdHJpbmchLCBQbGFEZXM6IFN0cmluZywgUGxhRmVjOiBEYXRlVGltZSEsIFBsYUNhdDogU3RyaW5nISk6IFBsYXRvXHJcbiAgICBhZ3JlZ2FyUGVkaWRvKFBlZEVudDogSW50ISwgUGVkRm9uOiBJbnQhLCBQZWRSZWY6IEludCEsIFBlZEZlYzogRGF0ZVRpbWUhLCBQZWRFc3Q6IFN0cmluZyEpOiBQZWRpZG9cclxuICAgIGFjdHVhbGl6YXJQbGF0byhQbGFJZGU6IElEISwgaW5wdXQ6IFBsYXRvRW50cmFkYSk6IFBsYXRvXHJcbiAgICBhY3R1YWxpemFyUGVkaWRvKFBlZElkZTogSUQhLCBpbnB1dDogUGVkaWRvRW50cmFkYSk6IFBlZGlkb1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG1ha2VFeGVjdXRhYmxlU2NoZW1hKHtcclxuICB0eXBlRGVmczogdHlwZURlZnMsXHJcbiAgcmVzb2x2ZXJzOiByZXNvbHZlcnNcclxufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "typeDefs",
        "resolvers"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,IAAMA,QAAQ,kuCAAd;;eAuDe,wCAAqB;AAClCA,EAAAA,QAAQ,EAAEA,QADwB;AAElCC,EAAAA,SAAS,EAAEA;AAFuB,CAArB,C",
      "sourceRoot": "D:\\myApps\\pcm-challenge\\src",
      "sourcesContent": [
        "import { makeExecutableSchema } from 'graphql-tools';\r\nimport { resolvers } from './resolvers';\r\n\r\nconst typeDefs = `\r\n  scalar DateTime\r\n  type Query {\r\n    platos: [Plato]\r\n    pedidos: [Pedido]\r\n    plato(PlaIde: Int!): Plato\r\n    platosPorCategoria(PlaFec: DateTime!, PlaCat: String!): [Plato]\r\n    PedidosPorEstado(PedFec: DateTime!, PedEst: String!): [Pedido]\r\n    pedido(PedIde: Int!): Pedido\r\n    menuDiario(PlaFec: DateTime!): [Plato]\r\n  }\r\n\r\n  type Plato {\r\n    PlaIde: ID!\r\n    PlaNom: String\r\n    PlaDes: String\r\n    PlaFec: DateTime\r\n    PlaCat: String\r\n  }\r\n\r\n  type Pedido {\r\n    PedIde: ID!\r\n    PedPlaEnt: Plato\r\n    PedEnt: Int\r\n    PedPlaFon: Plato\r\n    PedFon: Int\r\n    PedPlaRef: Plato\r\n    PedRef: Int\r\n    PedFec: DateTime\r\n    PedEst: String\r\n  }\r\n\r\n  input PlatoEntrada {\r\n    PlaNom: String\r\n    PlaDes: String\r\n    PlaFec: DateTime\r\n    PlaCat: String\r\n  }\r\n\r\n  input PedidoEntrada {\r\n    PedEnt: Int\r\n    PedFon: Int\r\n    PedRef: Int\r\n    PedFec: DateTime\r\n    PedEst: String\r\n  }\r\n\r\n  type Mutation {\r\n    agregarPlato(PlaNom: String!, PlaDes: String, PlaFec: DateTime!, PlaCat: String!): Plato\r\n    agregarPedido(PedEnt: Int!, PedFon: Int!, PedRef: Int!, PedFec: DateTime!, PedEst: String!): Pedido\r\n    actualizarPlato(PlaIde: ID!, input: PlatoEntrada): Plato\r\n    actualizarPedido(PedIde: ID!, input: PedidoEntrada): Pedido\r\n  }\r\n`;\r\n\r\nexport default makeExecutableSchema({\r\n  typeDefs: typeDefs,\r\n  resolvers: resolvers\r\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1582142622672
  },
  "{\"sourceRoot\":\"D:\\\\myApps\\\\pcm-challenge\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\myApps\\\\pcm-challenge\",\"filename\":\"D:\\\\myApps\\\\pcm-challenge\\\\src\\\\resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\myApps\\\\pcm-challenge\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\myApps\\pcm-challenge\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\myApps\\pcm-challenge",
      "filename": "D:\\myApps\\pcm-challenge\\src\\resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\myApps\\pcm-challenge",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\myApps\\pcm-challenge\\src\\resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\myApps\\pcm-challenge\\src\\resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\myApps\\pcm-challenge\\src",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolvers = void 0;\n\nvar _plato = require(\"./models/plato\");\n\nvar _pedido = require(\"./models/pedido\");\n\nvar _lodash = require(\"lodash\");\n\nvar _graphqlTypeDatetime = _interopRequireDefault(require(\"graphql-type-datetime\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar resolvers = {\n  DateTime: _graphqlTypeDatetime[\"default\"],\n  Query: {\n    platos: function platos() {\n      return _plato.platos;\n    },\n    pedidos: function pedidos() {\n      return _pedido.pedidos;\n    },\n\n    /*plato(obj, args, context, info) {\r\n      return find(platos, { PlaIde: args.PlaIde });\r\n    },*/\n    plato: function plato(_, _ref) {\n      var PlaIde = _ref.PlaIde;\n      return (0, _lodash.find)(_plato.platos, {\n        PlaIde: PlaIde\n      });\n    },\n    platosPorCategoria: function platosPorCategoria(_, _ref2) {\n      var PlaFec = _ref2.PlaFec,\n          PlaCat = _ref2.PlaCat;\n      return (0, _lodash.filter)(_plato.platos, {\n        PlaFec: PlaFec,\n        PlaCat: PlaCat\n      });\n    },\n    PedidosPorEstado: function PedidosPorEstado(_, _ref3) {\n      var PedFec = _ref3.PedFec,\n          PedEst = _ref3.PedEst;\n      return (0, _lodash.filter)(_pedido.pedidos, {\n        PedFec: PedFec,\n        PedEst: PedEst\n      });\n    },\n    pedido: function pedido(_, _ref4) {\n      var PedIde = _ref4.PedIde;\n      return (0, _lodash.find)(_pedido.pedidos, {\n        PedIde: PedIde\n      });\n    },\n    menuDiario: function menuDiario(_, _ref5) {\n      var PlaFec = _ref5.PlaFec;\n      return (0, _lodash.filter)(_plato.platos, {\n        PlaFec: PlaFec\n      });\n    }\n  },\n\n  /*Pedido: {\r\n    PedPlaEnt(pedido) {\r\n      return find(platos, { PlaIde: pedido.PedEnt }); ;\r\n    }\r\n  },*/\n  Pedido: {\n    PedPlaEnt: function PedPlaEnt(pedido) {\n      return (0, _lodash.find)(_plato.platos, {\n        PlaIde: pedido.PedEnt\n      });\n    },\n    PedPlaFon: function PedPlaFon(pedido) {\n      return (0, _lodash.find)(_plato.platos, {\n        PlaIde: pedido.PedFon\n      });\n    },\n    PedPlaRef: function PedPlaRef(pedido) {\n      return (0, _lodash.find)(_plato.platos, {\n        PlaIde: pedido.PedRef\n      });\n    }\n  },\n  Mutation: {\n    agregarPlato: function agregarPlato(root, args) {\n      var nuevoPlato = {\n        PlaIde: _plato.platos.length,\n        PlaNom: args.PlaNom,\n        PlaDes: args.PlaDes,\n        PlaFec: args.PlaFec,\n        PlaCat: args.PlaCat\n      };\n      /*if (filter(platos, { PlaFec: args.PlaFec, PlaCat: \"E\" }).length > 1) {\r\n        throw new Error('MAXENTRADAS');\r\n      }\r\n        if (filter(platos, { PlaFec: args.PlaFec, PlaCat: \"P\" }).length > 1) {\r\n        throw new Error('MAXPFONDO');\r\n      }\r\n        if (filter(platos, { PlaFec: args.PlaFec, PlaCat: \"R\" }).length > 0) {\r\n        throw new Error('MAXREFRESCO');\r\n      }*/\n\n      _plato.platos.push(nuevoPlato);\n\n      return nuevoPlato;\n    },\n    actualizarPlato: function actualizarPlato(_, _ref6) {\n      var PlaIde = _ref6.PlaIde,\n          input = _ref6.input;\n\n      if (!_plato.platos[Number(PlaIde) - 1]) {\n        throw new Error('Plato no encontrado con identificador ' + PlaIde);\n      }\n\n      var plato = (0, _lodash.find)(_plato.platos, {\n        PlaIde: Number(PlaIde)\n      });\n      plato.PlaNom = input.PlaNom;\n      plato.PlaDes = input.PlaDes;\n      plato.PlaFec = input.PlaFec;\n      plato.PlaCat = input.PlaCat;\n      _plato.platos[Number(PlaIde)] = plato;\n      return plato;\n    },\n    agregarPedido: function agregarPedido(root, args) {\n      var nuevoPedido = {\n        PedIde: _pedido.pedidos.length,\n        PedEnt: args.PedEnt,\n        PedFon: args.PedFon,\n        PedRef: args.PedRef,\n        PedFec: args.PedFec,\n        PedEst: args.PedEst\n      };\n\n      _pedido.pedidos.push(nuevoPedido);\n\n      return nuevoPedido;\n    },\n    actualizarPedido: function actualizarPedido(_, _ref7) {\n      var PedIde = _ref7.PedIde,\n          input = _ref7.input;\n\n      if (!_pedido.pedidos[Number(PedIde) - 1]) {\n        throw new Error('Pedido no encontrado con identificador ' + PedIde);\n      }\n\n      var pedido = (0, _lodash.find)(_pedido.pedidos, {\n        PedIde: Number(PedIde)\n      });\n      pedido.PedEnt = input.PedEnt;\n      pedido.PedFon = input.PedFon;\n      pedido.PedRef = input.PedRef;\n      pedido.PedFec = input.PedFec;\n      pedido.PedEst = input.PedEst;\n      _pedido.pedidos[Number(PedIde)] = pedido;\n      return pedido;\n    }\n  }\n};\nexports.resolvers = resolvers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "resolvers",
        "DateTime",
        "GraphQLDateTime",
        "Query",
        "platos",
        "pedidos",
        "plato",
        "_",
        "PlaIde",
        "platosPorCategoria",
        "PlaFec",
        "PlaCat",
        "PedidosPorEstado",
        "PedFec",
        "PedEst",
        "pedido",
        "PedIde",
        "menuDiario",
        "Pedido",
        "PedPlaEnt",
        "PedEnt",
        "PedPlaFon",
        "PedFon",
        "PedPlaRef",
        "PedRef",
        "Mutation",
        "agregarPlato",
        "root",
        "args",
        "nuevoPlato",
        "length",
        "PlaNom",
        "PlaDes",
        "push",
        "actualizarPlato",
        "input",
        "Number",
        "Error",
        "agregarPedido",
        "nuevoPedido",
        "actualizarPedido"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEO,IAAMA,SAAS,GAAG;AACvBC,EAAAA,QAAQ,EAAEC,+BADa;AAEvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAA,aAAMA,aAAN;AAAA,KADH;AAELC,IAAAA,OAAO,EAAE;AAAA,aAAMA,eAAN;AAAA,KAFJ;;AAGL;;;AAGAC,IAAAA,KAAK,EAAE,eAACC,CAAD;AAAA,UAAMC,MAAN,QAAMA,MAAN;AAAA,aAAmB,kBAAKJ,aAAL,EAAa;AAAEI,QAAAA,MAAM,EAANA;AAAF,OAAb,CAAnB;AAAA,KANF;AAOLC,IAAAA,kBAAkB,EAAE,4BAACF,CAAD;AAAA,UAAMG,MAAN,SAAMA,MAAN;AAAA,UAAcC,MAAd,SAAcA,MAAd;AAAA,aAA2B,oBAAOP,aAAP,EAAe;AAAEM,QAAAA,MAAM,EAANA,MAAF;AAAUC,QAAAA,MAAM,EAANA;AAAV,OAAf,CAA3B;AAAA,KAPf;AAQLC,IAAAA,gBAAgB,EAAE,0BAACL,CAAD;AAAA,UAAMM,MAAN,SAAMA,MAAN;AAAA,UAAcC,MAAd,SAAcA,MAAd;AAAA,aAA2B,oBAAOT,eAAP,EAAgB;AAAEQ,QAAAA,MAAM,EAANA,MAAF;AAAUC,QAAAA,MAAM,EAANA;AAAV,OAAhB,CAA3B;AAAA,KARb;AASLC,IAAAA,MAAM,EAAE,gBAACR,CAAD;AAAA,UAAMS,MAAN,SAAMA,MAAN;AAAA,aAAmB,kBAAKX,eAAL,EAAc;AAAEW,QAAAA,MAAM,EAANA;AAAF,OAAd,CAAnB;AAAA,KATH;AAULC,IAAAA,UAAU,EAAE,oBAACV,CAAD;AAAA,UAAMG,MAAN,SAAMA,MAAN;AAAA,aAAmB,oBAAON,aAAP,EAAe;AAAEM,QAAAA,MAAM,EAANA;AAAF,OAAf,CAAnB;AAAA;AAVP,GAFgB;;AAcvB;;;;;AAKAQ,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,mBAAAJ,MAAM;AAAA,aAAI,kBAAKX,aAAL,EAAa;AAAEI,QAAAA,MAAM,EAAEO,MAAM,CAACK;AAAjB,OAAb,CAAJ;AAAA,KADX;AAENC,IAAAA,SAAS,EAAE,mBAAAN,MAAM;AAAA,aAAI,kBAAKX,aAAL,EAAa;AAAEI,QAAAA,MAAM,EAAEO,MAAM,CAACO;AAAjB,OAAb,CAAJ;AAAA,KAFX;AAGNC,IAAAA,SAAS,EAAE,mBAAAR,MAAM;AAAA,aAAI,kBAAKX,aAAL,EAAa;AAAEI,QAAAA,MAAM,EAAEO,MAAM,CAACS;AAAjB,OAAb,CAAJ;AAAA;AAHX,GAnBe;AAwBvBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,sBAACC,IAAD,EAAOC,IAAP,EAAgB;AAC5B,UAAMC,UAAU,GAAG;AAAErB,QAAAA,MAAM,EAAEJ,cAAO0B,MAAjB;AAAyBC,QAAAA,MAAM,EAAEH,IAAI,CAACG,MAAtC;AAA8CC,QAAAA,MAAM,EAAEJ,IAAI,CAACI,MAA3D;AAAmEtB,QAAAA,MAAM,EAAEkB,IAAI,CAAClB,MAAhF;AAAwFC,QAAAA,MAAM,EAAEiB,IAAI,CAACjB;AAArG,OAAnB;AAEA;;;;;;;;;;AAYAP,oBAAO6B,IAAP,CAAYJ,UAAZ;;AACA,aAAOA,UAAP;AACD,KAlBO;AAmBRK,IAAAA,eAAe,EAAE,yBAAC3B,CAAD,SAA0B;AAAA,UAApBC,MAAoB,SAApBA,MAAoB;AAAA,UAAZ2B,KAAY,SAAZA,KAAY;;AACzC,UAAG,CAAC/B,cAAOgC,MAAM,CAAC5B,MAAD,CAAN,GAAe,CAAtB,CAAJ,EAA6B;AAC3B,cAAM,IAAI6B,KAAJ,CAAU,2CAA2C7B,MAArD,CAAN;AACD;;AACD,UAAMF,KAAK,GAAG,kBAAKF,aAAL,EAAa;AAAEI,QAAAA,MAAM,EAAE4B,MAAM,CAAC5B,MAAD;AAAhB,OAAb,CAAd;AAEAF,MAAAA,KAAK,CAACyB,MAAN,GAAeI,KAAK,CAACJ,MAArB;AACAzB,MAAAA,KAAK,CAAC0B,MAAN,GAAeG,KAAK,CAACH,MAArB;AACA1B,MAAAA,KAAK,CAACI,MAAN,GAAeyB,KAAK,CAACzB,MAArB;AACAJ,MAAAA,KAAK,CAACK,MAAN,GAAewB,KAAK,CAACxB,MAArB;AAEAP,oBAAOgC,MAAM,CAAC5B,MAAD,CAAb,IAAyBF,KAAzB;AAEA,aAAOA,KAAP;AACD,KAjCO;AAkCRgC,IAAAA,aAAa,EAAE,uBAACX,IAAD,EAAOC,IAAP,EAAgB;AAC7B,UAAMW,WAAW,GAAG;AAAEvB,QAAAA,MAAM,EAAEX,gBAAQyB,MAAlB;AAA0BV,QAAAA,MAAM,EAAEQ,IAAI,CAACR,MAAvC;AAA+CE,QAAAA,MAAM,EAAEM,IAAI,CAACN,MAA5D;AAAoEE,QAAAA,MAAM,EAAEI,IAAI,CAACJ,MAAjF;AAAyFX,QAAAA,MAAM,EAAEe,IAAI,CAACf,MAAtG;AAA8GC,QAAAA,MAAM,EAAEc,IAAI,CAACd;AAA3H,OAApB;;AACAT,sBAAQ4B,IAAR,CAAaM,WAAb;;AACA,aAAOA,WAAP;AACD,KAtCO;AAuCRC,IAAAA,gBAAgB,EAAE,0BAACjC,CAAD,SAA0B;AAAA,UAApBS,MAAoB,SAApBA,MAAoB;AAAA,UAAZmB,KAAY,SAAZA,KAAY;;AAC1C,UAAG,CAAC9B,gBAAQ+B,MAAM,CAACpB,MAAD,CAAN,GAAe,CAAvB,CAAJ,EAA8B;AAC5B,cAAM,IAAIqB,KAAJ,CAAU,4CAA4CrB,MAAtD,CAAN;AACD;;AACD,UAAMD,MAAM,GAAG,kBAAKV,eAAL,EAAc;AAAEW,QAAAA,MAAM,EAAEoB,MAAM,CAACpB,MAAD;AAAhB,OAAd,CAAf;AAEAD,MAAAA,MAAM,CAACK,MAAP,GAAgBe,KAAK,CAACf,MAAtB;AACAL,MAAAA,MAAM,CAACO,MAAP,GAAgBa,KAAK,CAACb,MAAtB;AACAP,MAAAA,MAAM,CAACS,MAAP,GAAgBW,KAAK,CAACX,MAAtB;AACAT,MAAAA,MAAM,CAACF,MAAP,GAAgBsB,KAAK,CAACtB,MAAtB;AACAE,MAAAA,MAAM,CAACD,MAAP,GAAgBqB,KAAK,CAACrB,MAAtB;AAEAT,sBAAQ+B,MAAM,CAACpB,MAAD,CAAd,IAA0BD,MAA1B;AAEA,aAAOA,MAAP;AACD;AAtDO;AAxBa,CAAlB",
      "sourceRoot": "D:\\myApps\\pcm-challenge\\src",
      "sourcesContent": [
        "import { platos } from './models/plato';\r\nimport { pedidos } from './models/pedido';\r\nimport { find, filter } from 'lodash';\r\nimport GraphQLDateTime from 'graphql-type-datetime';\r\n\r\nexport const resolvers = {\r\n  DateTime: GraphQLDateTime,\r\n  Query: {\r\n    platos: () => platos,\r\n    pedidos: () => pedidos,\r\n    /*plato(obj, args, context, info) {\r\n      return find(platos, { PlaIde: args.PlaIde });\r\n    },*/\r\n    plato: (_, { PlaIde }) => find(platos, { PlaIde }),\r\n    platosPorCategoria: (_, { PlaFec, PlaCat }) => filter(platos, { PlaFec, PlaCat }),\r\n    PedidosPorEstado: (_, { PedFec, PedEst }) => filter(pedidos, { PedFec, PedEst }),\r\n    pedido: (_, { PedIde }) => find(pedidos, { PedIde }),\r\n    menuDiario: (_, { PlaFec }) => filter(platos, { PlaFec })\r\n  },\r\n  /*Pedido: {\r\n    PedPlaEnt(pedido) {\r\n      return find(platos, { PlaIde: pedido.PedEnt }); ;\r\n    }\r\n  },*/\r\n  Pedido: {\r\n    PedPlaEnt: pedido => find(platos, { PlaIde: pedido.PedEnt }),\r\n    PedPlaFon: pedido => find(platos, { PlaIde: pedido.PedFon }),\r\n    PedPlaRef: pedido => find(platos, { PlaIde: pedido.PedRef }),\r\n  },\r\n  Mutation: {\r\n    agregarPlato: (root, args) => {\r\n      const nuevoPlato = { PlaIde: platos.length, PlaNom: args.PlaNom, PlaDes: args.PlaDes, PlaFec: args.PlaFec, PlaCat: args.PlaCat };\r\n\r\n      /*if (filter(platos, { PlaFec: args.PlaFec, PlaCat: \"E\" }).length > 1) {\r\n        throw new Error('MAXENTRADAS');\r\n      }\r\n\r\n      if (filter(platos, { PlaFec: args.PlaFec, PlaCat: \"P\" }).length > 1) {\r\n        throw new Error('MAXPFONDO');\r\n      }\r\n\r\n      if (filter(platos, { PlaFec: args.PlaFec, PlaCat: \"R\" }).length > 0) {\r\n        throw new Error('MAXREFRESCO');\r\n      }*/\r\n\r\n      platos.push(nuevoPlato);\r\n      return nuevoPlato;\r\n    },\r\n    actualizarPlato: (_, { PlaIde, input }) => {\r\n      if(!platos[Number(PlaIde)-1]){\r\n        throw new Error('Plato no encontrado con identificador ' + PlaIde);\r\n      }\r\n      const plato = find(platos, { PlaIde: Number(PlaIde) });\r\n      \r\n      plato.PlaNom = input.PlaNom;\r\n      plato.PlaDes = input.PlaDes;\r\n      plato.PlaFec = input.PlaFec;\r\n      plato.PlaCat = input.PlaCat;\r\n\r\n      platos[Number(PlaIde)] = plato\r\n  \r\n      return plato;\r\n    },\r\n    agregarPedido: (root, args) => {\r\n      const nuevoPedido = { PedIde: pedidos.length, PedEnt: args.PedEnt, PedFon: args.PedFon, PedRef: args.PedRef, PedFec: args.PedFec, PedEst: args.PedEst };\r\n      pedidos.push(nuevoPedido);\r\n      return nuevoPedido; \r\n    },\r\n    actualizarPedido: (_, { PedIde, input }) => {\r\n      if(!pedidos[Number(PedIde)-1]){\r\n        throw new Error('Pedido no encontrado con identificador ' + PedIde);\r\n      }\r\n      const pedido = find(pedidos, { PedIde: Number(PedIde) });\r\n      \r\n      pedido.PedEnt = input.PedEnt;\r\n      pedido.PedFon = input.PedFon;\r\n      pedido.PedRef = input.PedRef;\r\n      pedido.PedFec = input.PedFec;\r\n      pedido.PedEst = input.PedEst;\r\n\r\n      pedidos[Number(PedIde)] = pedido\r\n  \r\n      return pedido;\r\n    }\r\n  }\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582314035198
  },
  "{\"sourceRoot\":\"D:\\\\myApps\\\\pcm-challenge\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\myApps\\\\pcm-challenge\",\"filename\":\"D:\\\\myApps\\\\pcm-challenge\\\\src\\\\models\\\\plato.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\myApps\\\\pcm-challenge\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\myApps\\pcm-challenge\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\myApps\\pcm-challenge",
      "filename": "D:\\myApps\\pcm-challenge\\src\\models\\plato.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\myApps\\pcm-challenge",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\myApps\\pcm-challenge\\src\\models\\plato.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\myApps\\pcm-challenge\\src\\models\\plato.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\myApps\\pcm-challenge\\src\\models",
        "sourceFileName": "plato.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.platos = void 0;\nvar platos = [{\n  \"PlaIde\": 0,\n  \"PlaNom\": \"Ensalada cuatro estaciones\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 1,\n  \"PlaNom\": \"Arroz a la cubana\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 2,\n  \"PlaNom\": \"Lomo de merluza a la romana con guarnición\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 3,\n  \"PlaNom\": \"Pechuga de pollo a la plancha con verduras\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 4,\n  \"PlaNom\": \"Café/Infusión\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\n  \"PlaCat\": \"R\"\n}, {\n  \"PlaIde\": 5,\n  \"PlaNom\": \"ECrema de setas con croutons\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 6,\n  \"PlaNom\": \"Guiso de garbanzos y espinacas\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 7,\n  \"PlaNom\": \"Filete de ternera a la plancha con judías verdes y rodaja de tomate\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 8,\n  \"PlaNom\": \"Lomo de merluza a la romana con guarnición\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 9,\n  \"PlaNom\": \"Zumo de naranja\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\n  \"PlaCat\": \"R\"\n}, {\n  \"PlaIde\": 10,\n  \"PlaNom\": \"Arroz a la cubana\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 11,\n  \"PlaNom\": \"Nachos con chili con carne, queso cheddar y crema agria\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 12,\n  \"PlaNom\": \"Pollo asado con patatas panaderas al horno\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 13,\n  \"PlaNom\": \"Pechuga de pollo a la plancha con verduras\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 14,\n  \"PlaNom\": \"ruta de temporada\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\n  \"PlaCat\": \"R\"\n}, {\n  \"PlaIde\": 15,\n  \"PlaNom\": \"Ensalada cuatro estaciones\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 16,\n  \"PlaNom\": \"Ensalada de pasta, lechugas, tomate y queso de cabra\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\n  \"PlaCat\": \"E\"\n}, {\n  \"PlaIde\": 17,\n  \"PlaNom\": \"Burrito Pulled Pork BBQ\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 18,\n  \"PlaNom\": \"Hamburguesa del día\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\n  \"PlaCat\": \"P\"\n}, {\n  \"PlaIde\": 19,\n  \"PlaNom\": \"Vasito de brownie\",\n  \"PlaDes\": \"\",\n  \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\n  \"PlaCat\": \"R\"\n}];\nexports.platos = platos;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsYXRvLmpzIl0sIm5hbWVzIjpbInBsYXRvcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsTUFBTSxHQUFHLENBQ3BCO0FBQ0UsWUFBVSxDQURaO0FBRUUsWUFBVSw0QkFGWjtBQUdFLFlBQVUsRUFIWjtBQUlFLFlBQVUsMEJBSlo7QUFLRSxZQUFVO0FBTFosQ0FEb0IsRUFRcEI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLG1CQUZaO0FBR0UsWUFBVSxFQUhaO0FBSUUsWUFBVSwwQkFKWjtBQUtFLFlBQVU7QUFMWixDQVJvQixFQWVwQjtBQUNFLFlBQVUsQ0FEWjtBQUVFLFlBQVUsNENBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBZm9CLEVBc0JwQjtBQUNFLFlBQVUsQ0FEWjtBQUVFLFlBQVUsNENBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBdEJvQixFQTZCcEI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLGVBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBN0JvQixFQW9DcEI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLDhCQUZaO0FBR0UsWUFBVSxFQUhaO0FBSUUsWUFBVSwwQkFKWjtBQUtFLFlBQVU7QUFMWixDQXBDb0IsRUEyQ3BCO0FBQ0UsWUFBVSxDQURaO0FBRUUsWUFBVSxnQ0FGWjtBQUdFLFlBQVUsRUFIWjtBQUlFLFlBQVUsMEJBSlo7QUFLRSxZQUFVO0FBTFosQ0EzQ29CLEVBa0RwQjtBQUNFLFlBQVUsQ0FEWjtBQUVFLFlBQVUscUVBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBbERvQixFQXlEcEI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLDRDQUZaO0FBR0UsWUFBVSxFQUhaO0FBSUUsWUFBVSwwQkFKWjtBQUtFLFlBQVU7QUFMWixDQXpEb0IsRUFnRXBCO0FBQ0UsWUFBVSxDQURaO0FBRUUsWUFBVSxpQkFGWjtBQUdFLFlBQVUsRUFIWjtBQUlFLFlBQVUsMEJBSlo7QUFLRSxZQUFVO0FBTFosQ0FoRW9CLEVBdUVwQjtBQUNFLFlBQVUsRUFEWjtBQUVFLFlBQVUsbUJBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBdkVvQixFQThFcEI7QUFDRSxZQUFVLEVBRFo7QUFFRSxZQUFVLHlEQUZaO0FBR0UsWUFBVSxFQUhaO0FBSUUsWUFBVSwwQkFKWjtBQUtFLFlBQVU7QUFMWixDQTlFb0IsRUFxRnBCO0FBQ0UsWUFBVSxFQURaO0FBRUUsWUFBVSw0Q0FGWjtBQUdFLFlBQVUsRUFIWjtBQUlFLFlBQVUsMEJBSlo7QUFLRSxZQUFVO0FBTFosQ0FyRm9CLEVBNEZwQjtBQUNFLFlBQVUsRUFEWjtBQUVFLFlBQVUsNENBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBNUZvQixFQW1HcEI7QUFDRSxZQUFVLEVBRFo7QUFFRSxZQUFVLG1CQUZaO0FBR0UsWUFBVSxFQUhaO0FBSUUsWUFBVSwwQkFKWjtBQUtFLFlBQVU7QUFMWixDQW5Hb0IsRUEwR3BCO0FBQ0UsWUFBVSxFQURaO0FBRUUsWUFBVSw0QkFGWjtBQUdFLFlBQVUsRUFIWjtBQUlFLFlBQVUsMEJBSlo7QUFLRSxZQUFVO0FBTFosQ0ExR29CLEVBaUhwQjtBQUNFLFlBQVUsRUFEWjtBQUVFLFlBQVUsc0RBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBakhvQixFQXdIcEI7QUFDRSxZQUFVLEVBRFo7QUFFRSxZQUFVLHlCQUZaO0FBR0UsWUFBVSxFQUhaO0FBSUUsWUFBVSwwQkFKWjtBQUtFLFlBQVU7QUFMWixDQXhIb0IsRUErSHBCO0FBQ0UsWUFBVSxFQURaO0FBRUUsWUFBVSxxQkFGWjtBQUdFLFlBQVUsRUFIWjtBQUlFLFlBQVUsMEJBSlo7QUFLRSxZQUFVO0FBTFosQ0EvSG9CLEVBc0lwQjtBQUNFLFlBQVUsRUFEWjtBQUVFLFlBQVUsbUJBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLDBCQUpaO0FBS0UsWUFBVTtBQUxaLENBdElvQixDQUFmIiwic291cmNlUm9vdCI6IkQ6XFxteUFwcHNcXHBjbS1jaGFsbGVuZ2VcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHBsYXRvcyA9IFtcclxuICB7XHJcbiAgICBcIlBsYUlkZVwiOiAwLFxyXG4gICAgXCJQbGFOb21cIjogXCJFbnNhbGFkYSBjdWF0cm8gZXN0YWNpb25lc1wiLFxyXG4gICAgXCJQbGFEZXNcIjogXCJcIixcclxuICAgIFwiUGxhRmVjXCI6IFwiMjAyMC0wMS0xNFQwODowMDowMC4wMDBaXCIsXHJcbiAgICBcIlBsYUNhdFwiOiBcIkVcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJQbGFJZGVcIjogMSxcclxuICAgIFwiUGxhTm9tXCI6IFwiQXJyb3ogYSBsYSBjdWJhbmFcIixcclxuICAgIFwiUGxhRGVzXCI6IFwiXCIsXHJcbiAgICBcIlBsYUZlY1wiOiBcIjIwMjAtMDEtMTRUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgXCJQbGFDYXRcIjogXCJFXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwiUGxhSWRlXCI6IDIsXHJcbiAgICBcIlBsYU5vbVwiOiBcIkxvbW8gZGUgbWVybHV6YSBhIGxhIHJvbWFuYSBjb24gZ3Vhcm5pY2nDs25cIixcclxuICAgIFwiUGxhRGVzXCI6IFwiXCIsXHJcbiAgICBcIlBsYUZlY1wiOiBcIjIwMjAtMDEtMTRUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgXCJQbGFDYXRcIjogXCJQXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwiUGxhSWRlXCI6IDMsXHJcbiAgICBcIlBsYU5vbVwiOiBcIlBlY2h1Z2EgZGUgcG9sbG8gYSBsYSBwbGFuY2hhIGNvbiB2ZXJkdXJhc1wiLFxyXG4gICAgXCJQbGFEZXNcIjogXCJcIixcclxuICAgIFwiUGxhRmVjXCI6IFwiMjAyMC0wMS0xNFQwODowMDowMC4wMDBaXCIsXHJcbiAgICBcIlBsYUNhdFwiOiBcIlBcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJQbGFJZGVcIjogNCxcclxuICAgIFwiUGxhTm9tXCI6IFwiQ2Fmw6kvSW5mdXNpw7NuXCIsXHJcbiAgICBcIlBsYURlc1wiOiBcIlwiLFxyXG4gICAgXCJQbGFGZWNcIjogXCIyMDIwLTAxLTE0VDA4OjAwOjAwLjAwMFpcIixcclxuICAgIFwiUGxhQ2F0XCI6IFwiUlwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcIlBsYUlkZVwiOiA1LFxyXG4gICAgXCJQbGFOb21cIjogXCJFQ3JlbWEgZGUgc2V0YXMgY29uIGNyb3V0b25zXCIsXHJcbiAgICBcIlBsYURlc1wiOiBcIlwiLFxyXG4gICAgXCJQbGFGZWNcIjogXCIyMDIwLTAxLTE1VDA4OjAwOjAwLjAwMFpcIixcclxuICAgIFwiUGxhQ2F0XCI6IFwiRVwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcIlBsYUlkZVwiOiA2LFxyXG4gICAgXCJQbGFOb21cIjogXCJHdWlzbyBkZSBnYXJiYW56b3MgeSBlc3BpbmFjYXNcIixcclxuICAgIFwiUGxhRGVzXCI6IFwiXCIsXHJcbiAgICBcIlBsYUZlY1wiOiBcIjIwMjAtMDEtMTVUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgXCJQbGFDYXRcIjogXCJFXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwiUGxhSWRlXCI6IDcsXHJcbiAgICBcIlBsYU5vbVwiOiBcIkZpbGV0ZSBkZSB0ZXJuZXJhIGEgbGEgcGxhbmNoYSBjb24ganVkw61hcyB2ZXJkZXMgeSByb2RhamEgZGUgdG9tYXRlXCIsXHJcbiAgICBcIlBsYURlc1wiOiBcIlwiLFxyXG4gICAgXCJQbGFGZWNcIjogXCIyMDIwLTAxLTE1VDA4OjAwOjAwLjAwMFpcIixcclxuICAgIFwiUGxhQ2F0XCI6IFwiUFwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcIlBsYUlkZVwiOiA4LFxyXG4gICAgXCJQbGFOb21cIjogXCJMb21vIGRlIG1lcmx1emEgYSBsYSByb21hbmEgY29uIGd1YXJuaWNpw7NuXCIsXHJcbiAgICBcIlBsYURlc1wiOiBcIlwiLFxyXG4gICAgXCJQbGFGZWNcIjogXCIyMDIwLTAxLTE1VDA4OjAwOjAwLjAwMFpcIixcclxuICAgIFwiUGxhQ2F0XCI6IFwiUFwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcIlBsYUlkZVwiOiA5LFxyXG4gICAgXCJQbGFOb21cIjogXCJadW1vIGRlIG5hcmFuamFcIixcclxuICAgIFwiUGxhRGVzXCI6IFwiXCIsXHJcbiAgICBcIlBsYUZlY1wiOiBcIjIwMjAtMDEtMTVUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgXCJQbGFDYXRcIjogXCJSXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwiUGxhSWRlXCI6IDEwLFxyXG4gICAgXCJQbGFOb21cIjogXCJBcnJveiBhIGxhIGN1YmFuYVwiLFxyXG4gICAgXCJQbGFEZXNcIjogXCJcIixcclxuICAgIFwiUGxhRmVjXCI6IFwiMjAyMC0wMS0xNlQwODowMDowMC4wMDBaXCIsXHJcbiAgICBcIlBsYUNhdFwiOiBcIkVcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJQbGFJZGVcIjogMTEsXHJcbiAgICBcIlBsYU5vbVwiOiBcIk5hY2hvcyBjb24gY2hpbGkgY29uIGNhcm5lLCBxdWVzbyBjaGVkZGFyIHkgY3JlbWEgYWdyaWFcIixcclxuICAgIFwiUGxhRGVzXCI6IFwiXCIsXHJcbiAgICBcIlBsYUZlY1wiOiBcIjIwMjAtMDEtMTZUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgXCJQbGFDYXRcIjogXCJFXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwiUGxhSWRlXCI6IDEyLFxyXG4gICAgXCJQbGFOb21cIjogXCJQb2xsbyBhc2FkbyBjb24gcGF0YXRhcyBwYW5hZGVyYXMgYWwgaG9ybm9cIixcclxuICAgIFwiUGxhRGVzXCI6IFwiXCIsXHJcbiAgICBcIlBsYUZlY1wiOiBcIjIwMjAtMDEtMTZUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgXCJQbGFDYXRcIjogXCJQXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwiUGxhSWRlXCI6IDEzLFxyXG4gICAgXCJQbGFOb21cIjogXCJQZWNodWdhIGRlIHBvbGxvIGEgbGEgcGxhbmNoYSBjb24gdmVyZHVyYXNcIixcclxuICAgIFwiUGxhRGVzXCI6IFwiXCIsXHJcbiAgICBcIlBsYUZlY1wiOiBcIjIwMjAtMDEtMTZUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgXCJQbGFDYXRcIjogXCJQXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwiUGxhSWRlXCI6IDE0LFxyXG4gICAgXCJQbGFOb21cIjogXCJydXRhIGRlIHRlbXBvcmFkYVwiLFxyXG4gICAgXCJQbGFEZXNcIjogXCJcIixcclxuICAgIFwiUGxhRmVjXCI6IFwiMjAyMC0wMS0xNlQwODowMDowMC4wMDBaXCIsXHJcbiAgICBcIlBsYUNhdFwiOiBcIlJcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJQbGFJZGVcIjogMTUsXHJcbiAgICBcIlBsYU5vbVwiOiBcIkVuc2FsYWRhIGN1YXRybyBlc3RhY2lvbmVzXCIsXHJcbiAgICBcIlBsYURlc1wiOiBcIlwiLFxyXG4gICAgXCJQbGFGZWNcIjogXCIyMDIwLTAxLTE3VDA4OjAwOjAwLjAwMFpcIixcclxuICAgIFwiUGxhQ2F0XCI6IFwiRVwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcIlBsYUlkZVwiOiAxNixcclxuICAgIFwiUGxhTm9tXCI6IFwiRW5zYWxhZGEgZGUgcGFzdGEsIGxlY2h1Z2FzLCB0b21hdGUgeSBxdWVzbyBkZSBjYWJyYVwiLFxyXG4gICAgXCJQbGFEZXNcIjogXCJcIixcclxuICAgIFwiUGxhRmVjXCI6IFwiMjAyMC0wMS0xN1QwODowMDowMC4wMDBaXCIsXHJcbiAgICBcIlBsYUNhdFwiOiBcIkVcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJQbGFJZGVcIjogMTcsXHJcbiAgICBcIlBsYU5vbVwiOiBcIkJ1cnJpdG8gUHVsbGVkIFBvcmsgQkJRXCIsXHJcbiAgICBcIlBsYURlc1wiOiBcIlwiLFxyXG4gICAgXCJQbGFGZWNcIjogXCIyMDIwLTAxLTE3VDA4OjAwOjAwLjAwMFpcIixcclxuICAgIFwiUGxhQ2F0XCI6IFwiUFwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcIlBsYUlkZVwiOiAxOCxcclxuICAgIFwiUGxhTm9tXCI6IFwiSGFtYnVyZ3Vlc2EgZGVsIGTDrWFcIixcclxuICAgIFwiUGxhRGVzXCI6IFwiXCIsXHJcbiAgICBcIlBsYUZlY1wiOiBcIjIwMjAtMDEtMTdUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgXCJQbGFDYXRcIjogXCJQXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwiUGxhSWRlXCI6IDE5LFxyXG4gICAgXCJQbGFOb21cIjogXCJWYXNpdG8gZGUgYnJvd25pZVwiLFxyXG4gICAgXCJQbGFEZXNcIjogXCJcIixcclxuICAgIFwiUGxhRmVjXCI6IFwiMjAyMC0wMS0xN1QwODowMDowMC4wMDBaXCIsXHJcbiAgICBcIlBsYUNhdFwiOiBcIlJcIlxyXG4gIH1cclxuXSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "plato.js"
      ],
      "names": [
        "platos"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,MAAM,GAAG,CACpB;AACE,YAAU,CADZ;AAEE,YAAU,4BAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CADoB,EAQpB;AACE,YAAU,CADZ;AAEE,YAAU,mBAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CARoB,EAepB;AACE,YAAU,CADZ;AAEE,YAAU,4CAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAfoB,EAsBpB;AACE,YAAU,CADZ;AAEE,YAAU,4CAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAtBoB,EA6BpB;AACE,YAAU,CADZ;AAEE,YAAU,eAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CA7BoB,EAoCpB;AACE,YAAU,CADZ;AAEE,YAAU,8BAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CApCoB,EA2CpB;AACE,YAAU,CADZ;AAEE,YAAU,gCAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CA3CoB,EAkDpB;AACE,YAAU,CADZ;AAEE,YAAU,qEAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAlDoB,EAyDpB;AACE,YAAU,CADZ;AAEE,YAAU,4CAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAzDoB,EAgEpB;AACE,YAAU,CADZ;AAEE,YAAU,iBAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAhEoB,EAuEpB;AACE,YAAU,EADZ;AAEE,YAAU,mBAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAvEoB,EA8EpB;AACE,YAAU,EADZ;AAEE,YAAU,yDAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CA9EoB,EAqFpB;AACE,YAAU,EADZ;AAEE,YAAU,4CAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CArFoB,EA4FpB;AACE,YAAU,EADZ;AAEE,YAAU,4CAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CA5FoB,EAmGpB;AACE,YAAU,EADZ;AAEE,YAAU,mBAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAnGoB,EA0GpB;AACE,YAAU,EADZ;AAEE,YAAU,4BAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CA1GoB,EAiHpB;AACE,YAAU,EADZ;AAEE,YAAU,sDAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAjHoB,EAwHpB;AACE,YAAU,EADZ;AAEE,YAAU,yBAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAxHoB,EA+HpB;AACE,YAAU,EADZ;AAEE,YAAU,qBAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CA/HoB,EAsIpB;AACE,YAAU,EADZ;AAEE,YAAU,mBAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,0BAJZ;AAKE,YAAU;AALZ,CAtIoB,CAAf",
      "sourceRoot": "D:\\myApps\\pcm-challenge\\src\\models",
      "sourcesContent": [
        "export const platos = [\r\n  {\r\n    \"PlaIde\": 0,\r\n    \"PlaNom\": \"Ensalada cuatro estaciones\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 1,\r\n    \"PlaNom\": \"Arroz a la cubana\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 2,\r\n    \"PlaNom\": \"Lomo de merluza a la romana con guarnición\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 3,\r\n    \"PlaNom\": \"Pechuga de pollo a la plancha con verduras\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 4,\r\n    \"PlaNom\": \"Café/Infusión\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-14T08:00:00.000Z\",\r\n    \"PlaCat\": \"R\"\r\n  },\r\n  {\r\n    \"PlaIde\": 5,\r\n    \"PlaNom\": \"ECrema de setas con croutons\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 6,\r\n    \"PlaNom\": \"Guiso de garbanzos y espinacas\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 7,\r\n    \"PlaNom\": \"Filete de ternera a la plancha con judías verdes y rodaja de tomate\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 8,\r\n    \"PlaNom\": \"Lomo de merluza a la romana con guarnición\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 9,\r\n    \"PlaNom\": \"Zumo de naranja\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-15T08:00:00.000Z\",\r\n    \"PlaCat\": \"R\"\r\n  },\r\n  {\r\n    \"PlaIde\": 10,\r\n    \"PlaNom\": \"Arroz a la cubana\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 11,\r\n    \"PlaNom\": \"Nachos con chili con carne, queso cheddar y crema agria\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 12,\r\n    \"PlaNom\": \"Pollo asado con patatas panaderas al horno\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 13,\r\n    \"PlaNom\": \"Pechuga de pollo a la plancha con verduras\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 14,\r\n    \"PlaNom\": \"ruta de temporada\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-16T08:00:00.000Z\",\r\n    \"PlaCat\": \"R\"\r\n  },\r\n  {\r\n    \"PlaIde\": 15,\r\n    \"PlaNom\": \"Ensalada cuatro estaciones\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 16,\r\n    \"PlaNom\": \"Ensalada de pasta, lechugas, tomate y queso de cabra\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\r\n    \"PlaCat\": \"E\"\r\n  },\r\n  {\r\n    \"PlaIde\": 17,\r\n    \"PlaNom\": \"Burrito Pulled Pork BBQ\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 18,\r\n    \"PlaNom\": \"Hamburguesa del día\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\r\n    \"PlaCat\": \"P\"\r\n  },\r\n  {\r\n    \"PlaIde\": 19,\r\n    \"PlaNom\": \"Vasito de brownie\",\r\n    \"PlaDes\": \"\",\r\n    \"PlaFec\": \"2020-01-17T08:00:00.000Z\",\r\n    \"PlaCat\": \"R\"\r\n  }\r\n]"
      ]
    },
    "sourceType": "script",
    "mtime": 1581947596077
  },
  "{\"sourceRoot\":\"D:\\\\myApps\\\\pcm-challenge\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\myApps\\\\pcm-challenge\",\"filename\":\"D:\\\\myApps\\\\pcm-challenge\\\\src\\\\models\\\\pedido.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\myApps\\\\pcm-challenge\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\myApps\\pcm-challenge\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\myApps\\pcm-challenge",
      "filename": "D:\\myApps\\pcm-challenge\\src\\models\\pedido.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\myApps\\pcm-challenge",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\myApps\\pcm-challenge\\src\\models\\pedido.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\myApps\\pcm-challenge\\src\\models\\pedido.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\myApps\\pcm-challenge\\src\\models",
        "sourceFileName": "pedido.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pedidos = void 0;\nvar pedidos = [{\n  \"PedIde\": 0,\n  \"PedEnt\": 1,\n  \"PedFon\": 3,\n  \"PedRef\": 5,\n  \"PedFec\": \"2020-02-18T08:00:00.000Z\",\n  \"PedEst\": \"E\"\n}, {\n  \"PedIde\": 1,\n  \"PedEnt\": 2,\n  \"PedFon\": 4,\n  \"PedRef\": 5,\n  \"PedFec\": \"2020-02-18T08:00:00.000Z\",\n  \"PedEst\": \"E\"\n}, {\n  \"PedIde\": 2,\n  \"PedEnt\": 6,\n  \"PedFon\": 9,\n  \"PedRef\": 10,\n  \"PedFec\": \"2020-02-18T08:00:00.000Z\",\n  \"PedEst\": \"L\"\n}, {\n  \"PedIde\": 3,\n  \"PedEnt\": 11,\n  \"PedFon\": 13,\n  \"PedRef\": 15,\n  \"PedFec\": \"2020-02-18T08:00:00.000Z\",\n  \"PedEst\": \"L\"\n}, {\n  \"PedIde\": 4,\n  \"PedEnt\": 16,\n  \"PedFon\": 18,\n  \"PedRef\": 19,\n  \"PedFec\": \"2020-02-18T08:00:00.000Z\",\n  \"PedEst\": \"N\"\n}];\nexports.pedidos = pedidos;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlZGlkby5qcyJdLCJuYW1lcyI6WyJwZWRpZG9zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxJQUFNQSxPQUFPLEdBQUcsQ0FDbkI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLENBRlo7QUFHRSxZQUFVLENBSFo7QUFJRSxZQUFVLENBSlo7QUFLRSxZQUFVLDBCQUxaO0FBTUUsWUFBVTtBQU5aLENBRG1CLEVBU25CO0FBQ0UsWUFBVSxDQURaO0FBRUUsWUFBVSxDQUZaO0FBR0UsWUFBVSxDQUhaO0FBSUUsWUFBVSxDQUpaO0FBS0UsWUFBVSwwQkFMWjtBQU1FLFlBQVU7QUFOWixDQVRtQixFQWlCbkI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLENBRlo7QUFHRSxZQUFVLENBSFo7QUFJRSxZQUFVLEVBSlo7QUFLRSxZQUFVLDBCQUxaO0FBTUUsWUFBVTtBQU5aLENBakJtQixFQXlCbkI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLEVBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLEVBSlo7QUFLRSxZQUFVLDBCQUxaO0FBTUUsWUFBVTtBQU5aLENBekJtQixFQWlDbkI7QUFDRSxZQUFVLENBRFo7QUFFRSxZQUFVLEVBRlo7QUFHRSxZQUFVLEVBSFo7QUFJRSxZQUFVLEVBSlo7QUFLRSxZQUFVLDBCQUxaO0FBTUUsWUFBVTtBQU5aLENBakNtQixDQUFoQiIsInNvdXJjZVJvb3QiOiJEOlxcbXlBcHBzXFxwY20tY2hhbGxlbmdlXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBwZWRpZG9zID0gW1xyXG4gICAge1xyXG4gICAgICBcIlBlZElkZVwiOiAwLFxyXG4gICAgICBcIlBlZEVudFwiOiAxLFxyXG4gICAgICBcIlBlZEZvblwiOiAzLFxyXG4gICAgICBcIlBlZFJlZlwiOiA1LFxyXG4gICAgICBcIlBlZEZlY1wiOiBcIjIwMjAtMDItMThUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgICBcIlBlZEVzdFwiOiBcIkVcIlxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgXCJQZWRJZGVcIjogMSxcclxuICAgICAgXCJQZWRFbnRcIjogMixcclxuICAgICAgXCJQZWRGb25cIjogNCxcclxuICAgICAgXCJQZWRSZWZcIjogNSxcclxuICAgICAgXCJQZWRGZWNcIjogXCIyMDIwLTAyLTE4VDA4OjAwOjAwLjAwMFpcIixcclxuICAgICAgXCJQZWRFc3RcIjogXCJFXCJcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIFwiUGVkSWRlXCI6IDIsXHJcbiAgICAgIFwiUGVkRW50XCI6IDYsXHJcbiAgICAgIFwiUGVkRm9uXCI6IDksXHJcbiAgICAgIFwiUGVkUmVmXCI6IDEwLFxyXG4gICAgICBcIlBlZEZlY1wiOiBcIjIwMjAtMDItMThUMDg6MDA6MDAuMDAwWlwiLFxyXG4gICAgICBcIlBlZEVzdFwiOiBcIkxcIlxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgXCJQZWRJZGVcIjogMyxcclxuICAgICAgXCJQZWRFbnRcIjogMTEsXHJcbiAgICAgIFwiUGVkRm9uXCI6IDEzLFxyXG4gICAgICBcIlBlZFJlZlwiOiAxNSxcclxuICAgICAgXCJQZWRGZWNcIjogXCIyMDIwLTAyLTE4VDA4OjAwOjAwLjAwMFpcIixcclxuICAgICAgXCJQZWRFc3RcIjogXCJMXCJcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIFwiUGVkSWRlXCI6IDQsXHJcbiAgICAgIFwiUGVkRW50XCI6IDE2LFxyXG4gICAgICBcIlBlZEZvblwiOiAxOCxcclxuICAgICAgXCJQZWRSZWZcIjogMTksXHJcbiAgICAgIFwiUGVkRmVjXCI6IFwiMjAyMC0wMi0xOFQwODowMDowMC4wMDBaXCIsXHJcbiAgICAgIFwiUGVkRXN0XCI6IFwiTlwiXHJcbiAgICB9XHJcbiAgXSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "pedido.js"
      ],
      "names": [
        "pedidos"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,OAAO,GAAG,CACnB;AACE,YAAU,CADZ;AAEE,YAAU,CAFZ;AAGE,YAAU,CAHZ;AAIE,YAAU,CAJZ;AAKE,YAAU,0BALZ;AAME,YAAU;AANZ,CADmB,EASnB;AACE,YAAU,CADZ;AAEE,YAAU,CAFZ;AAGE,YAAU,CAHZ;AAIE,YAAU,CAJZ;AAKE,YAAU,0BALZ;AAME,YAAU;AANZ,CATmB,EAiBnB;AACE,YAAU,CADZ;AAEE,YAAU,CAFZ;AAGE,YAAU,CAHZ;AAIE,YAAU,EAJZ;AAKE,YAAU,0BALZ;AAME,YAAU;AANZ,CAjBmB,EAyBnB;AACE,YAAU,CADZ;AAEE,YAAU,EAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,EAJZ;AAKE,YAAU,0BALZ;AAME,YAAU;AANZ,CAzBmB,EAiCnB;AACE,YAAU,CADZ;AAEE,YAAU,EAFZ;AAGE,YAAU,EAHZ;AAIE,YAAU,EAJZ;AAKE,YAAU,0BALZ;AAME,YAAU;AANZ,CAjCmB,CAAhB",
      "sourceRoot": "D:\\myApps\\pcm-challenge\\src\\models",
      "sourcesContent": [
        "export const pedidos = [\r\n    {\r\n      \"PedIde\": 0,\r\n      \"PedEnt\": 1,\r\n      \"PedFon\": 3,\r\n      \"PedRef\": 5,\r\n      \"PedFec\": \"2020-02-18T08:00:00.000Z\",\r\n      \"PedEst\": \"E\"\r\n    },\r\n    {\r\n      \"PedIde\": 1,\r\n      \"PedEnt\": 2,\r\n      \"PedFon\": 4,\r\n      \"PedRef\": 5,\r\n      \"PedFec\": \"2020-02-18T08:00:00.000Z\",\r\n      \"PedEst\": \"E\"\r\n    },\r\n    {\r\n      \"PedIde\": 2,\r\n      \"PedEnt\": 6,\r\n      \"PedFon\": 9,\r\n      \"PedRef\": 10,\r\n      \"PedFec\": \"2020-02-18T08:00:00.000Z\",\r\n      \"PedEst\": \"L\"\r\n    },\r\n    {\r\n      \"PedIde\": 3,\r\n      \"PedEnt\": 11,\r\n      \"PedFon\": 13,\r\n      \"PedRef\": 15,\r\n      \"PedFec\": \"2020-02-18T08:00:00.000Z\",\r\n      \"PedEst\": \"L\"\r\n    },\r\n    {\r\n      \"PedIde\": 4,\r\n      \"PedEnt\": 16,\r\n      \"PedFon\": 18,\r\n      \"PedRef\": 19,\r\n      \"PedFec\": \"2020-02-18T08:00:00.000Z\",\r\n      \"PedEst\": \"N\"\r\n    }\r\n  ]"
      ]
    },
    "sourceType": "script",
    "mtime": 1582055055052
  },
  "{\"sourceRoot\":\"D:\\\\myApps\\\\pcm-challenge\\\\src\\\\utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\myApps\\\\pcm-challenge\",\"filename\":\"D:\\\\myApps\\\\pcm-challenge\\\\src\\\\utils\\\\errors.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\myApps\\\\pcm-challenge\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\myApps\\pcm-challenge\\src\\utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\myApps\\pcm-challenge",
      "filename": "D:\\myApps\\pcm-challenge\\src\\utils\\errors.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\myApps\\pcm-challenge",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\myApps\\pcm-challenge\\src\\utils\\errors.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\myApps\\pcm-challenge\\src\\utils\\errors.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\myApps\\pcm-challenge\\src\\utils",
        "sourceFileName": "errors.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _require = require('./constants'),\n    errorType = _require.errorType;\n\nvar getErrorCode = function getErrorCode(errorName) {\n  if (errorType[errorName] == undefined) {\n    errorName = 'UNAUTHORIZED';\n  }\n\n  return errorType[errorName];\n};\n\nmodule.exports = getErrorCode;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9ycy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiZXJyb3JUeXBlIiwiZ2V0RXJyb3JDb2RlIiwiZXJyb3JOYW1lIiwidW5kZWZpbmVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7ZUFBc0JBLE9BQU8sQ0FBQyxhQUFELEM7SUFBckJDLFMsWUFBQUEsUzs7QUFFUixJQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBZSxDQUFBQyxTQUFTLEVBQUk7QUFDOUIsTUFBSUYsU0FBUyxDQUFDRSxTQUFELENBQVQsSUFBd0JDLFNBQTVCLEVBQXVDO0FBQ25DRCxJQUFBQSxTQUFTLEdBQUcsY0FBWjtBQUNIOztBQUNELFNBQU9GLFNBQVMsQ0FBQ0UsU0FBRCxDQUFoQjtBQUNILENBTEQ7O0FBT0FFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkosWUFBakIiLCJzb3VyY2VSb290IjoiRDpcXG15QXBwc1xccGNtLWNoYWxsZW5nZVxcc3JjXFx1dGlscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZXJyb3JUeXBlIH0gPSByZXF1aXJlKCcuL2NvbnN0YW50cycpXHJcblxyXG5jb25zdCBnZXRFcnJvckNvZGUgPSBlcnJvck5hbWUgPT4ge1xyXG4gICAgaWYgKGVycm9yVHlwZVtlcnJvck5hbWVdID09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIGVycm9yTmFtZSA9ICdVTkFVVEhPUklaRUQnO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGVycm9yVHlwZVtlcnJvck5hbWVdO1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGdldEVycm9yQ29kZSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "errors.js"
      ],
      "names": [
        "require",
        "errorType",
        "getErrorCode",
        "errorName",
        "undefined",
        "module",
        "exports"
      ],
      "mappings": ";;eAAsBA,OAAO,CAAC,aAAD,C;IAArBC,S,YAAAA,S;;AAER,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,SAAS,EAAI;AAC9B,MAAIF,SAAS,CAACE,SAAD,CAAT,IAAwBC,SAA5B,EAAuC;AACnCD,IAAAA,SAAS,GAAG,cAAZ;AACH;;AACD,SAAOF,SAAS,CAACE,SAAD,CAAhB;AACH,CALD;;AAOAE,MAAM,CAACC,OAAP,GAAiBJ,YAAjB",
      "sourceRoot": "D:\\myApps\\pcm-challenge\\src\\utils",
      "sourcesContent": [
        "const { errorType } = require('./constants')\r\n\r\nconst getErrorCode = errorName => {\r\n    if (errorType[errorName] == undefined) {\r\n        errorName = 'UNAUTHORIZED';\r\n    }\r\n    return errorType[errorName];\r\n}\r\n\r\nmodule.exports = getErrorCode"
      ]
    },
    "sourceType": "script",
    "mtime": 1582313226382
  },
  "{\"sourceRoot\":\"D:\\\\myApps\\\\pcm-challenge\\\\src\\\\utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\myApps\\\\pcm-challenge\",\"filename\":\"D:\\\\myApps\\\\pcm-challenge\\\\src\\\\utils\\\\constants.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\myApps\\\\pcm-challenge\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\myApps\\pcm-challenge\\src\\utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\myApps\\pcm-challenge",
      "filename": "D:\\myApps\\pcm-challenge\\src\\utils\\constants.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\myApps\\pcm-challenge",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\myApps\\pcm-challenge\\src\\utils\\constants.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\myApps\\pcm-challenge\\src\\utils\\constants.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\myApps\\pcm-challenge\\src\\utils",
        "sourceFileName": "constants.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nexports.errorName = {\n  UNAUTHORIZED: 'UNHANDLED',\n  MAXENTRADAS: 'MAXENTRADAS',\n  MAXPFONDO: 'MAXPFONDO',\n  MAXREFRESCO: 'MAXREFRESCO'\n};\nexports.errorType = {\n  UNAUTHORIZED: {\n    message: 'Un error inesperado a sucedido.',\n    statusCode: 404\n  },\n  MAXENTRADAS: {\n    message: 'Ya se registraron las entradas máximas (2) del día.',\n    statusCode: 401\n  },\n  MAXPFONDO: {\n    message: 'Ya se registraron los platos de fondos máximos (2) del día.',\n    statusCode: 401\n  },\n  MAXREFRESCO: {\n    message: 'Ya se registro el Refresco del día.',\n    statusCode: 401\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0YW50cy5qcyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiZXJyb3JOYW1lIiwiVU5BVVRIT1JJWkVEIiwiTUFYRU5UUkFEQVMiLCJNQVhQRk9ORE8iLCJNQVhSRUZSRVNDTyIsImVycm9yVHlwZSIsIm1lc3NhZ2UiLCJzdGF0dXNDb2RlIl0sIm1hcHBpbmdzIjoiOztBQUNBQSxPQUFPLENBQUNDLFNBQVIsR0FBb0I7QUFDaEJDLEVBQUFBLFlBQVksRUFBRSxXQURFO0FBRWhCQyxFQUFBQSxXQUFXLEVBQUUsYUFGRztBQUdoQkMsRUFBQUEsU0FBUyxFQUFFLFdBSEs7QUFJaEJDLEVBQUFBLFdBQVcsRUFBRTtBQUpHLENBQXBCO0FBT0VMLE9BQU8sQ0FBQ00sU0FBUixHQUFvQjtBQUNsQkosRUFBQUEsWUFBWSxFQUFFO0FBQ1ZLLElBQUFBLE9BQU8sRUFBRSxpQ0FEQztBQUVWQyxJQUFBQSxVQUFVLEVBQUU7QUFGRixHQURJO0FBS2xCTCxFQUFBQSxXQUFXLEVBQUU7QUFDVEksSUFBQUEsT0FBTyxFQUFFLHFEQURBO0FBRVRDLElBQUFBLFVBQVUsRUFBRTtBQUZILEdBTEs7QUFTbEJKLEVBQUFBLFNBQVMsRUFBRTtBQUNQRyxJQUFBQSxPQUFPLEVBQUUsNkRBREY7QUFFUEMsSUFBQUEsVUFBVSxFQUFFO0FBRkwsR0FUTztBQWFsQkgsRUFBQUEsV0FBVyxFQUFFO0FBQ1RFLElBQUFBLE9BQU8sRUFBRSxxQ0FEQTtBQUVUQyxJQUFBQSxVQUFVLEVBQUU7QUFGSDtBQWJLLENBQXBCIiwic291cmNlUm9vdCI6IkQ6XFxteUFwcHNcXHBjbS1jaGFsbGVuZ2VcXHNyY1xcdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyIgIFxyXG5leHBvcnRzLmVycm9yTmFtZSA9IHtcclxuICAgIFVOQVVUSE9SSVpFRDogJ1VOSEFORExFRCcsXHJcbiAgICBNQVhFTlRSQURBUzogJ01BWEVOVFJBREFTJyxcclxuICAgIE1BWFBGT05ETzogJ01BWFBGT05ETycsXHJcbiAgICBNQVhSRUZSRVNDTzogJ01BWFJFRlJFU0NPJ1xyXG4gIH1cclxuICBcclxuICBleHBvcnRzLmVycm9yVHlwZSA9IHtcclxuICAgIFVOQVVUSE9SSVpFRDoge1xyXG4gICAgICAgIG1lc3NhZ2U6ICdVbiBlcnJvciBpbmVzcGVyYWRvIGEgc3VjZWRpZG8uJyxcclxuICAgICAgICBzdGF0dXNDb2RlOiA0MDRcclxuICAgIH0sXHJcbiAgICBNQVhFTlRSQURBUzoge1xyXG4gICAgICAgIG1lc3NhZ2U6ICdZYSBzZSByZWdpc3RyYXJvbiBsYXMgZW50cmFkYXMgbcOheGltYXMgKDIpIGRlbCBkw61hLicsXHJcbiAgICAgICAgc3RhdHVzQ29kZTogNDAxXHJcbiAgICB9LFxyXG4gICAgTUFYUEZPTkRPOiB7XHJcbiAgICAgICAgbWVzc2FnZTogJ1lhIHNlIHJlZ2lzdHJhcm9uIGxvcyBwbGF0b3MgZGUgZm9uZG9zIG3DoXhpbW9zICgyKSBkZWwgZMOtYS4nLFxyXG4gICAgICAgIHN0YXR1c0NvZGU6IDQwMVxyXG4gICAgfSxcclxuICAgIE1BWFJFRlJFU0NPOiB7XHJcbiAgICAgICAgbWVzc2FnZTogJ1lhIHNlIHJlZ2lzdHJvIGVsIFJlZnJlc2NvIGRlbCBkw61hLicsXHJcbiAgICAgICAgc3RhdHVzQ29kZTogNDAxXHJcbiAgICB9XHJcbiAgfSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "constants.js"
      ],
      "names": [
        "exports",
        "errorName",
        "UNAUTHORIZED",
        "MAXENTRADAS",
        "MAXPFONDO",
        "MAXREFRESCO",
        "errorType",
        "message",
        "statusCode"
      ],
      "mappings": ";;AACAA,OAAO,CAACC,SAAR,GAAoB;AAChBC,EAAAA,YAAY,EAAE,WADE;AAEhBC,EAAAA,WAAW,EAAE,aAFG;AAGhBC,EAAAA,SAAS,EAAE,WAHK;AAIhBC,EAAAA,WAAW,EAAE;AAJG,CAApB;AAOEL,OAAO,CAACM,SAAR,GAAoB;AAClBJ,EAAAA,YAAY,EAAE;AACVK,IAAAA,OAAO,EAAE,iCADC;AAEVC,IAAAA,UAAU,EAAE;AAFF,GADI;AAKlBL,EAAAA,WAAW,EAAE;AACTI,IAAAA,OAAO,EAAE,qDADA;AAETC,IAAAA,UAAU,EAAE;AAFH,GALK;AASlBJ,EAAAA,SAAS,EAAE;AACPG,IAAAA,OAAO,EAAE,6DADF;AAEPC,IAAAA,UAAU,EAAE;AAFL,GATO;AAalBH,EAAAA,WAAW,EAAE;AACTE,IAAAA,OAAO,EAAE,qCADA;AAETC,IAAAA,UAAU,EAAE;AAFH;AAbK,CAApB",
      "sourceRoot": "D:\\myApps\\pcm-challenge\\src\\utils",
      "sourcesContent": [
        "  \r\nexports.errorName = {\r\n    UNAUTHORIZED: 'UNHANDLED',\r\n    MAXENTRADAS: 'MAXENTRADAS',\r\n    MAXPFONDO: 'MAXPFONDO',\r\n    MAXREFRESCO: 'MAXREFRESCO'\r\n  }\r\n  \r\n  exports.errorType = {\r\n    UNAUTHORIZED: {\r\n        message: 'Un error inesperado a sucedido.',\r\n        statusCode: 404\r\n    },\r\n    MAXENTRADAS: {\r\n        message: 'Ya se registraron las entradas máximas (2) del día.',\r\n        statusCode: 401\r\n    },\r\n    MAXPFONDO: {\r\n        message: 'Ya se registraron los platos de fondos máximos (2) del día.',\r\n        statusCode: 401\r\n    },\r\n    MAXREFRESCO: {\r\n        message: 'Ya se registro el Refresco del día.',\r\n        statusCode: 401\r\n    }\r\n  }"
      ]
    },
    "sourceType": "script",
    "mtime": 1582313215048
  }
}
{"version":3,"sources":["serviceWorker.js","containers/Header.js","containers/Footer.js","assets/svg/tail-spin.svg","graphql/appQuery.js","views/Dashboard.js","graphql/appMutation.js","containers/Pedidos.js","views/Cocinero.js","views/Mozo.js","views/Detail.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","className","Component","Footer","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","x1","y1","x2","y2","id","stopColor","stopOpacity","offset","fill","fillRule","transform","d","stroke","strokeWidth","attributeName","type","from","to","dur","repeatCount","cx","cy","r","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","gql","PlatosPorCategoria","PedidosPorEstado","MenuDiario","Dashboard","date","format","Date","state","PlaFec","icon","faClipboard","query","variables","loading","error","data","menuDiario","map","plato","PlaIde","faUtensils","PlaNom","charAt","toUpperCase","slice","PlaCat","actualizarPedido","agregarPlato","agregarPedido","Pedidos","scope","graphqlQuery","graphqlVar","pedido","PedIde","PedPlaEnt","PedPlaFon","PedPlaRef","PedFec","PedEst","ChgEst","mutation","refetchQueries","onClick","e","preventDefault","console","log","input","PedEnt","PedFon","PedRef","Cocinero","PlaDes","handleChange","bind","event","varName","name","setState","value","faArrowCircleLeft","onSubmit","placeholder","onChange","disabled","pedidoEstado","Mozo","Number","platosPorCategoria","peopleQuery","Detail","params","peopleName","people","eye_color","hair_color","skin_color","birth_year","vehicles","vehicle","client","ApolloClient","uri","App","exact","path","component","ApolloApp","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09b4bc50.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../assets/css/index.scss';\r\n\r\nclass Header extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <div className=\"sectionHeader\">\r\n          <strong>Menú del día</strong>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <p className=\"footer-cop\">PCM Challenge</p>\r\n      <p className=\"footer-author\">disraeli.ar.m@gmail.com</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"linearGradient\", {\n  x1: \"8.042%\",\n  y1: \"0%\",\n  x2: \"65.682%\",\n  y2: \"23.865%\",\n  id: \"a\"\n}, React.createElement(\"stop\", {\n  stopColor: \"#000\",\n  stopOpacity: 0,\n  offset: \"0%\"\n}), React.createElement(\"stop\", {\n  stopColor: \"#000\",\n  stopOpacity: 0.631,\n  offset: \"63.146%\"\n}), React.createElement(\"stop\", {\n  stopColor: \"#0\",\n  offset: \"100%\"\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"g\", {\n  transform: \"translate(1 1)\"\n}, React.createElement(\"path\", {\n  d: \"M36 18c0-9.94-8.06-18-18-18\",\n  id: \"Oval-2\",\n  stroke: \"url(#a)\",\n  strokeWidth: 2\n}, React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"rotate\",\n  from: \"0 18 18\",\n  to: \"360 18 18\",\n  dur: \"0.9s\",\n  repeatCount: \"indefinite\"\n})), React.createElement(\"circle\", {\n  fill: \"#000\",\n  cx: 36,\n  cy: 18,\n  r: 1\n}, React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"rotate\",\n  from: \"0 18 18\",\n  to: \"360 18 18\",\n  dur: \"0.9s\",\n  repeatCount: \"indefinite\"\n}))));\n\nvar SvgTailSpin = function SvgTailSpin(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 38,\n    height: 38,\n    viewBox: \"0 0 38 38\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgTailSpin, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/tail-spin.9abcdb78.svg\";\nexport { ForwardRef as ReactComponent };","import { gql } from 'apollo-boost';\r\n\r\nexport const pedidosQuery = gql`\r\n{\r\n    pedidos {\r\n        PedIde\r\n        PedEnt\r\n        PedPlaEnt {\r\n            PlaNom\r\n        }\r\n        PedFon\r\n        PedPlaFon {\r\n            PlaNom\r\n        }\r\n        PedRef\r\n        PedPlaRef {\r\n            PlaNom\r\n        }\r\n        PedFec\r\n        PedEst\r\n    }\r\n}  \r\n`;\r\n\r\nexport const PlatosPorCategoria = gql`\r\n    query PlatosPorCategoria($PlaFec: DateTime!, $PlaCat: String!) {\r\n        platosPorCategoria(PlaFec: $PlaFec, PlaCat: $PlaCat) {\r\n            PlaIde\r\n            PlaNom\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PedidosPorEstado = gql`\r\n    query PedidosPorEstado($PedFec: DateTime!, $PedEst: String!) {\r\n        PedidosPorEstado(PedFec: $PedFec, PedEst: $PedEst) {\r\n        PedIde\r\n        PedEnt\r\n        PedPlaEnt {\r\n            PlaNom\r\n        }\r\n        PedFon\r\n        PedPlaFon {\r\n            PlaNom\r\n        }\r\n        PedRef\r\n        PedPlaRef {\r\n            PlaNom\r\n        }\r\n        PedFec\r\n        PedEst\r\n    }\r\n}\r\n`;\r\n\r\nexport const MenuDiario = gql`\r\n    query MenuDiario($PlaFec: DateTime!) {\r\n        menuDiario(PlaFec: $PlaFec) {\r\n            PlaIde\r\n            PlaNom\r\n            PlaCat\r\n        }\r\n    }\r\n`;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Query } from 'react-apollo';\r\nimport { ReactComponent as Icon} from '../assets/svg/tail-spin.svg';\r\nimport { MenuDiario } from '../graphql/appQuery';\r\nimport format from \"date-fns/format\";\r\nimport { faUtensils, faClipboard } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    var date = format(new Date(), \"yyyy-MM-dd\");\r\n    this.state = {PlaFec: date};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Dashboard\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\"><FontAwesomeIcon icon={faClipboard} /> Menú del dia</h5>\r\n            <Query query={MenuDiario} variables = {{PlaFec: this.state.PlaFec}}>\r\n              {({ loading, error, data }) => {\r\n              if (loading) return <p><Icon /> Loading</p>\r\n                if (error){\r\n                  return <p>Error al recuperar los datos</p>;\r\n                }\r\n                return data.menuDiario.map(plato => {\r\n                  return (\r\n                    <p key={plato.PlaIde} className=\"card-content\"><FontAwesomeIcon icon={faUtensils} />  {plato.PlaNom.charAt(0).toUpperCase() + plato.PlaNom.slice(1)} - {plato.PlaCat === 'E' ? 'Plato de entrada' : plato.PlaCat === 'P' ? 'Plato de Fondo' : 'Refresco'}</p>\r\n                  );\r\n                })\r\n              }}\r\n            </Query>\r\n            </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <p><FontAwesomeIcon icon={faClipboard} /> Elija su cargo:</p>\r\n          <div className=\"DashButton\"><button><Link to={'/cocinero'} className=\"linkDashboard\">Cocinero</Link></button></div>\r\n          <div className=\"DashButton\"><button><Link to={'/mozo'} className=\"linkDashboard\">Mozo</Link></button></div>\r\n          <div className=\"space\"></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n/*\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <Query query={peoplesQuery}>\r\n      {({ loading, error, data }) => {\r\n          if (loading) return <p className=\"card-title-loading\"> <Icon /> Loading </p>\r\n          if (error){\r\n            return <p className=\"card-title-failed\">Failed to load data</p>;\r\n          }\r\n          return data.peoples.map(people => {\r\n            return (\r\n              <div className=\"card\" key={people.name}>\r\n                <Link to={'/people/'+people.name} className=\"contentDashboard\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"people-detail-row\">\r\n                      <div className=\"people-detail-block-name\">\r\n                        <p className=\"card-title\">{people.name}</p>\r\n                        <p className=\"card-subtitle\">{people.species[0].name} from {people.homeworld.name}</p>\r\n                      </div>\r\n                      <div className=\"people-detail-block-value\">&#10148;</div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </div>);\r\n          })\r\n      }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n*/\r\n\r\nexport default Dashboard;","import { gql } from 'apollo-boost';\r\n\r\nexport const actualizarPedido= gql`\r\n    mutation ActualizarPedido($PedIde: ID!, $input: PedidoEntrada) {\r\n        actualizarPedido(PedIde: $PedIde, input: $input) {\r\n            PedIde\r\n        }\r\n    }\r\n`;\r\n\r\nexport const agregarPlato = gql`\r\n    mutation AgregarPlato($PlaNom: String!, $PlaDes: String, $PlaFec: DateTime!, $PlaCat: String!) {\r\n        agregarPlato(PlaNom: $PlaNom, PlaDes: $PlaDes, PlaFec: $PlaFec, PlaCat: $PlaCat){\r\n            PlaIde\r\n        }\r\n    }\r\n`;\r\n\r\nexport const agregarPedido = gql`\r\n    mutation AgregarPedido($PedEnt: Int!, $PedFon: Int!, $PedRef: Int!, $PedFec: DateTime!, $PedEst: String!) {\r\n        agregarPedido(PedEnt: $PedEnt, PedFon: $PedFon, PedRef: $PedRef, PedFec: $PedFec, PedEst: $PedEst){\r\n            PedIde\r\n        }\r\n    }\r\n`;","import React, { Component } from 'react';\r\nimport { Query, Mutation } from 'react-apollo';\r\nimport { actualizarPedido } from '../graphql/appMutation';\r\nimport { ReactComponent as Icon} from '../assets/svg/tail-spin.svg';\r\n\r\nexport class Pedidos extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className=\"table table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Entrada</th>\r\n                            <th scope=\"col\">Plato de Fondo</th>\r\n                            <th scope=\"col\">Refresco</th>\r\n                            <th scope=\"col\">Fecha</th>\r\n                            <th scope=\"col\">Estado</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <Query query={this.props.graphqlQuery} variables = {this.props.graphqlVar}>\r\n                        {({ loading, error, data }) => {\r\n                            if (loading) return <tr><th><Icon /> Loading</th></tr>\r\n                            if (error){\r\n                            return <tr><th>Error al recuperar los datos</th></tr>;\r\n                            }\r\n                            return data.PedidosPorEstado.map(pedido => {\r\n                                return (\r\n                                    <tr key={pedido.PedIde}>\r\n                                        <th scope=\"row\">{pedido.PedIde}</th>\r\n                                        <td>{pedido.PedPlaEnt.PlaNom}</td>\r\n                                        <td>{pedido.PedPlaFon.PlaNom}</td>\r\n                                        <td>{pedido.PedPlaRef.PlaNom}</td>\r\n                                        <td>{pedido.PedFec}</td>\r\n                                        {((pedido.PedEst === 'N' || pedido.PedEst === 'L') && this.props.ChgEst !== '') ? (\r\n                                            <td>\r\n                                                <Mutation mutation={actualizarPedido} refetchQueries={[{ query: this.props.graphqlQuery, variables: this.props.graphqlVar }, { query: this.props.graphqlQuery, variables: { PedFec: this.props.graphqlVar.PedFec, PedEst: \"L\"}}, { query: this.props.graphqlQuery, variables: { PedFec: this.props.graphqlVar.PedFec, PedEst: \"E\"}}]}>\r\n                                                {(actualizarPedido, { loading, error }) => (\r\n                                                    <button onClick={e => {\r\n                                                        e.preventDefault();\r\n                                                        console.log(this.props.graphqlVar.PedFec);\r\n                                                        actualizarPedido({ \r\n                                                            variables: { \r\n                                                                PedIde: pedido.PedIde,\r\n                                                                input: {\r\n                                                                    PedEnt: pedido.PedEnt,\r\n                                                                    PedFon: pedido.PedFon,\r\n                                                                    PedRef: pedido.PedRef,\r\n                                                                    PedFec: pedido.PedFec,\r\n                                                                    PedEst: this.props.ChgEst\r\n                                                                } \r\n                                                            } \r\n                                                        });\r\n                                                    }}>{pedido.PedEst === 'L' ? 'Cambiar a Entregado' : 'Cambiar a Listo'}</button> \r\n                                                )}\r\n                                                </Mutation>\r\n                                            </td>\r\n                                        ) : (\r\n                                            <td>{pedido.PedEst === 'L' ? 'Listo' : 'Entregado'}</td>\r\n                                        )}\r\n                                    </tr>\r\n                                );\r\n                            })\r\n                        }}\r\n                        </Query>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pedidos;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Mutation } from 'react-apollo';\r\nimport { agregarPlato } from '../graphql/appMutation';\r\nimport { PedidosPorEstado } from '../graphql/appQuery';\r\nimport { Pedidos } from '../containers/Pedidos';\r\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport format from \"date-fns/format\";\r\n\r\nclass Cocinero extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var date = format(new Date(), \"yyyy-MM-dd\");\r\n        this.state = {PlaNom: '', PlaDes: '', PlaFec: date, PlaCat: '', PedEst: 'L'};\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const varName = target.name;\r\n        if (varName === 'PlaNom'){\r\n            this.setState({PlaNom: event.target.value});\r\n        } else if (varName === 'PlaDes'){\r\n            this.setState({PlaDes: event.target.value});\r\n        } else if (varName === 'PlaFec'){\r\n            this.setState({PlaFec: event.target.value});\r\n        } else if (varName === 'PlaCat'){\r\n            this.setState({PlaCat: event.target.value});\r\n        }  \r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"Cocina\">\r\n            <p><Link to={'/'} className=\"linkDashboard\"> <FontAwesomeIcon icon={faArrowCircleLeft} /> Regresar </Link></p>\r\n            <h1>Cocinero</h1>\r\n            <hr></hr>\r\n            <Mutation mutation={agregarPlato}>\r\n                {(agregarPlato, { loading, error }) => (\r\n                <div>\r\n                    <form className=\"food-formulario\" onSubmit={e => {\r\n                        e.preventDefault();\r\n                        agregarPlato({ variables: { PlaNom: this.state.PlaNom, PlaDes: this.state.PlaDes, PlaFec: this.state.PlaFec, PlaCat: this.state.PlaCat } });\r\n                    }}>\r\n                        <h2>Agregar Nuevo Plato</h2>\r\n                        <hr></hr>\r\n                        <div className=\"form-group\">\r\n                            <label>Nombre del plato:</label>\r\n                            <input placeholder=\"Nombre del plato\" name=\"PlaNom\" value={this.state.PlaNom} onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Descripcion del plato:</label>\r\n                            <input  placeholder=\"Desc. del plato\" name=\"PlaDes\" value={this.state.PlaDes} onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Fecha:</label>\r\n                            <input type=\"date\" name=\"PlaFec\" value={this.state.PlaFec} onChange={this.handleChange} disabled/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Categoría:</label>\r\n                            <select id=\"PlaCat\" name=\"PlaCat\" value={this.state.PlaCat} onChange={this.handleChange}>\r\n                                <option value=\"-1\">--Seleccione uno--</option>\r\n                                <option value=\"E\">Entrada</option>\r\n                                <option value=\"P\">Plato de Fondo</option>\r\n                                <option value=\"R\">Refresco</option>\r\n                            </select>\r\n                        </div>\r\n                        <button type=\"submit\">Agregar plato</button>\r\n                    </form>\r\n                    {loading && <p>Loading...</p>}\r\n                    {error && <p>Error :( Please try again</p>}\r\n                </div>\r\n            )}\r\n            </Mutation>\r\n            <div className=\"menu-grilla\">\r\n                <p className=\"grilla-tittle\">Pedidos Nuevos</p>\r\n                <hr></hr>\r\n                <Pedidos graphqlQuery={PedidosPorEstado} graphqlVar={{PedFec: this.state.PlaFec, PedEst: \"N\"}} pedidoEstado={this.state.PedEst} ChgEst=\"L\"/>\r\n                <hr></hr>\r\n                <p className=\"grilla-tittle\">Pedidos Listos</p>\r\n                <hr></hr>\r\n                <Pedidos graphqlQuery={PedidosPorEstado} graphqlVar={{PedFec: this.state.PlaFec, PedEst: \"L\"}} pedidoEstado={this.state.PedEst} ChgEst=\"\"/>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Cocinero;\r\n  ","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Query, Mutation } from 'react-apollo';\r\nimport { agregarPedido } from '../graphql/appMutation';\r\nimport { PlatosPorCategoria, PedidosPorEstado } from '../graphql/appQuery';\r\nimport { Pedidos } from '../containers/Pedidos';\r\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport format from \"date-fns/format\";\r\n\r\nclass Mozo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var date = format(new Date(), \"yyyy-MM-dd\");\r\n        this.state = {PedEnt: '', PedFon: '', PedRef: '', PedFec: date, PedEst: 'N'};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const varName = target.name;\r\n        if (varName === 'PedEnt'){\r\n            this.setState({PedEnt: event.target.value});\r\n        } else if (varName === 'PedFon'){\r\n            this.setState({PedFon: event.target.value});\r\n        } else if (varName === 'PedRef'){\r\n            this.setState({PedRef: event.target.value});\r\n        }\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div className=\"Cocina\">\r\n                <p><Link to={'/'} className=\"linkDashboard\"> <FontAwesomeIcon icon={faArrowCircleLeft} /> Regresar </Link></p>\r\n                <h1>Mozo</h1>\r\n                <hr></hr>\r\n                <Mutation mutation={agregarPedido}>\r\n                    {(agregarPedido, { loading, error }) => (\r\n                    <div>\r\n                        <form className=\"food-formulario\" onSubmit={e => {\r\n                                e.preventDefault();\r\n                                agregarPedido({ variables: { PedEnt: Number(this.state.PedEnt), PedFon: Number(this.state.PedFon), PedRef: Number(this.state.PedRef), PedFec: this.state.PedFec, PedEst: this.state.PedEst } });\r\n                        }}>\r\n                            <h2>Agregar Nuevo Pedido</h2>\r\n                            <hr></hr>\r\n                            <div className=\"form-group\">\r\n                                <label>Plato de Entrada:</label>\r\n                                <select id=\"PedEnt\" name=\"PedEnt\" value={this.state.PedEnt} onChange={this.handleChange}>\r\n                                    <option value=\"-1\">--Seleccione uno--</option>\r\n                                    <Query query={PlatosPorCategoria} variables = {{ PlaFec: this.state.PedFec, PlaCat: \"E\" }}>\r\n                                        {({ loading, error, data }) => {\r\n                                        if (loading) return <option value=\"-1\">--Seleccione uno--</option>\r\n                                        if (error){\r\n                                            return <option value=\"-1\">--Seleccione uno--</option>;\r\n                                        }\r\n                                        return data.platosPorCategoria.map(plato => {\r\n                                            return (\r\n                                                <option key={plato.PlaIde} value={plato.PlaIde}>{plato.PlaNom}</option>\r\n                                            );\r\n                                        })\r\n                                    }}\r\n                                    </Query>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Plato de Fondo:</label>\r\n                                <select id=\"PedFon\" name=\"PedFon\" value={this.state.PedFon} onChange={this.handleChange}>\r\n                                    <option value=\"-1\">--Seleccione uno--</option>\r\n                                    <Query query={PlatosPorCategoria} variables = {{ PlaFec: this.state.PedFec, PlaCat: \"P\" }}>\r\n                                        {({ loading, error, data }) => {\r\n                                        if (loading) return <option value=\"-1\">--Seleccione uno--</option>\r\n                                        if (error){\r\n                                            return <option value=\"-1\">--Seleccione uno--</option>;\r\n                                        }\r\n                                        return data.platosPorCategoria.map(plato => {\r\n                                            return (\r\n                                                <option key={plato.PlaIde} value={plato.PlaIde}>{plato.PlaNom}</option>\r\n                                            );\r\n                                        })\r\n                                    }}\r\n                                    </Query>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Refresco:</label>\r\n                                <select id=\"PedRef\" name=\"PedRef\" value={this.state.PedRef} onChange={this.handleChange}>\r\n                                    <option value=\"-1\">--Seleccione uno--</option>\r\n                                    <Query query={PlatosPorCategoria} variables = {{ PlaFec: this.state.PedFec, PlaCat: \"R\" }}>\r\n                                        {({ loading, error, data }) => {\r\n                                        if (loading) return <option value=\"-1\">--Seleccione uno--</option>\r\n                                        if (error){\r\n                                            return <option value=\"-1\">--Seleccione uno--</option>;\r\n                                        }\r\n                                        return data.platosPorCategoria.map(plato => {\r\n                                            return (\r\n                                                <option key={plato.PlaIde} value={plato.PlaIde}>{plato.PlaNom}</option>\r\n                                            );\r\n                                        })\r\n                                    }}\r\n                                    </Query>\r\n                                </select>\r\n                            </div>\r\n                            <button type=\"submit\">Hacer pedido</button>\r\n                        </form>\r\n                        {loading && <p>Loading...</p>}\r\n                        {error && <p>Error :( Please try again</p>}\r\n                    </div>\r\n                )}\r\n                </Mutation>\r\n                <div className=\"menu-grilla\">\r\n                    <p className=\"grilla-tittle\">Pedidos Listos</p>\r\n                    <hr></hr>\r\n                    <Pedidos graphqlQuery={PedidosPorEstado} graphqlVar={{PedFec: this.state.PedFec, PedEst: \"L\"}} pedidoEstado={this.state.PedEst} ChgEst=\"E\"/>\r\n                    <hr></hr>\r\n                    <p className=\"grilla-tittle\">Pedidos Entregados</p>\r\n                    <hr></hr>\r\n                    <Pedidos graphqlQuery={PedidosPorEstado} graphqlVar={{PedFec: this.state.PedFec, PedEst: \"E\"}} pedidoEstado={this.state.PedEst} ChgEst=\"\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n  }\r\n  \r\n  export default Mozo;\r\n  ","import React, { Component } from 'react';\r\nimport { gql } from 'apollo-boost';\r\nimport { Link } from 'react-router-dom';\r\nimport { Query } from 'react-apollo';\r\n\r\nconst peopleQuery= gql`\r\n  query getPeople($peopleName: String!){\r\n    people(name: $peopleName){\r\n      name\r\n      eye_color\r\n      hair_color\r\n      skin_color\r\n      birth_year\r\n      vehicles{\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass Detail extends Component {\r\n\r\n  state = {\r\n    name: this.props.match.params.name\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Query query={peopleQuery} variables = {{ peopleName: this.state.name }}>\r\n      {({ loading, error, data }) => {\r\n          if (loading) return <p>Loading</p>\r\n          if (error){\r\n            console.log(error);\r\n            return <p>Failed to load data</p>;\r\n          }\r\n          return (\r\n            <div className=\"card contentDetail\">\r\n              <Link to={'/'} className=\"backButton\"> &#8666; Regresar</Link>\r\n              <div className=\"card-body\">\r\n                <p className=\"card-info\">General Information</p>\r\n                <div className=\"people-detail-row\">\r\n                  <div className=\"people-detail-block-name\">Eye Color</div>\r\n                  <div className=\"people-detail-block-value\">{data.people.eye_color}</div>\r\n                </div>\r\n                <div className=\"people-detail-row\">\r\n                  <div className=\"people-detail-block-name\">Hair Color</div>\r\n                  <div className=\"people-detail-block-value\">{data.people.hair_color}</div>\r\n                </div>\r\n                <div className=\"people-detail-row\">\r\n                  <div className=\"people-detail-block-name\">Skin Color</div>\r\n                  <div className=\"people-detail-block-value\">{data.people.skin_color}</div>\r\n                </div>\r\n                <div className=\"people-detail-row\">\r\n                  <div className=\"people-detail-block-name\">Birth Year</div>\r\n                  <div className=\"people-detail-block-value\">{data.people.birth_year}</div>\r\n                </div>\r\n                <p className=\"card-info\">Vehicles</p>\r\n                {data.people.vehicles = data.people.vehicles.map((vehicle, key) =>\r\n                  <div className=\"people-detail-row\" key={vehicle.name}>\r\n                    <div className=\"people-detail-block-name\">{vehicle.name}</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>);\r\n      }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\n\r\nimport Header from './containers/Header';\r\nimport Footer from './containers/Footer';\r\nimport Dashboard from './views/Dashboard';\r\nimport Cocinero from './views/Cocinero';\r\nimport Mozo from './views/Mozo';\r\nimport Detail from './views/Detail';\r\n\r\nconst client = new ApolloClient({\r\n  uri: '/graphiql'\r\n});\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Header/>\r\n          <Switch>\r\n              <Route exact path='/' component={Dashboard} />\r\n              <Route exact path='/cocinero' component={Cocinero} />\r\n              <Route exact path='/mozo' component={Mozo} />\r\n              <Route path='/people/:name' component={Detail} />\r\n          </Switch>\r\n          <Footer/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst ApolloApp = () => (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n\r\nexport default ApolloApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport './assets/css/index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App/>\r\n  </BrowserRouter>\r\n), document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n//<Route path=\"/users\" component={Users} />\r\n//<Route path=\"/contact\" component={Contact} />\r\n//<Route component={Notfound} />\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}